<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="805" onload="init(evt)" viewBox="0 0 1200 805" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:15px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:20px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 15 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="805.0" fill="url(#background)"  />
<text id="title" x="600.00" y="30" > </text>
<text id="details" x="10.00" y="785" > </text>
<text id="unzoom" x="10.00" y="30" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="30" >Search</text>
<text id="ignorecase" x="1174.00" y="30" >ic</text>
<text id="matched" x="1090.00" y="785" > </text>
<g id="frames">
<g >
<title>memcached|memcached.c:5980 (99 samples, 0.05%)</title><rect x="1189.4" y="646" width="0.6" height="19.0" fill="rgb(193,93,0)" rx="2" ry="2" />
<text  x="1192.42" y="658.5" ></text>
</g>
<g >
<title>fltrace.so|atomic.h:62[w] (41 samples, 0.02%)</title><rect x="483.3" y="86" width="0.3" height="19.0" fill="rgb(232,96,96)" rx="2" ry="2" />
<text  x="486.34" y="98.5" ></text>
</g>
<g >
<title>memcached|thread.c:506 (138 samples, 0.07%)</title><rect x="10.4" y="686" width="0.8" height="19.0" fill="rgb(217,117,0)" rx="2" ry="2" />
<text  x="13.44" y="698.5" ></text>
</g>
<g >
<title>fltrace.so|jemalloc_internal_inlines_c.h:53 (42 samples, 0.02%)</title><rect x="10.9" y="546" width="0.3" height="19.0" fill="rgb(199,99,0)" rx="2" ry="2" />
<text  x="13.93" y="558.5" ></text>
</g>
<g >
<title>libevent-2.1.so.7.0.1|0x7ffff5554178 (21 samples, 0.01%)</title><rect x="1189.1" y="546" width="0.1" height="19.0" fill="rgb(213,113,0)" rx="2" ry="2" />
<text  x="1192.10" y="558.5" ></text>
</g>
<g >
<title>libc.so.6|pthread_create.c:442 (209,405 samples, 99.93%)</title><rect x="10.1" y="706" width="1179.2" height="19.0" fill="rgb(218,118,0)" rx="2" ry="2" />
<text  x="13.07" y="718.5" >libc.so.6|pthread_create.c:442</text>
</g>
<g >
<title>libc.so.6|memset-vec-unaligned-erms.S:351[w] (125,269 samples, 59.78%)</title><rect x="483.6" y="406" width="705.4" height="19.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="486.63" y="418.5" >libc.so.6|memset-vec-unaligned-erms.S:351[w]</text>
</g>
<g >
<title>memcached|slabs.c:397 (125,269 samples, 59.78%)</title><rect x="483.6" y="426" width="705.4" height="19.0" fill="rgb(206,106,0)" rx="2" ry="2" />
<text  x="486.63" y="438.5" >memcached|slabs.c:397</text>
</g>
<g >
<title>fltrace.so|tcache.c:406 (86 samples, 0.04%)</title><rect x="10.4" y="546" width="0.5" height="19.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="13.44" y="558.5" ></text>
</g>
<g >
<title>fltrace.so|tsd.c:236 (86 samples, 0.04%)</title><rect x="10.4" y="566" width="0.5" height="19.0" fill="rgb(233,133,0)" rx="2" ry="2" />
<text  x="13.44" y="578.5" ></text>
</g>
<g >
<title>fltrace.so|jemalloc.c:2494 (128 samples, 0.06%)</title><rect x="10.4" y="626" width="0.8" height="19.0" fill="rgb(250,150,0)" rx="2" ry="2" />
<text  x="13.44" y="638.5" ></text>
</g>
<g >
<title>fltrace.so|large.c:47 (1) (256 samples, 0.12%)</title><rect x="482.2" y="246" width="1.4" height="19.0" fill="rgb(224,124,0)" rx="2" ry="2" />
<text  x="485.18" y="258.5" ></text>
</g>
<g >
<title>libc.so.6|libc-start.c:128 (133 samples, 0.06%)</title><rect x="1189.3" y="686" width="0.7" height="19.0" fill="rgb(199,99,0)" rx="2" ry="2" />
<text  x="1192.25" y="698.5" ></text>
</g>
<g >
<title>memcached|proto_text.c:1969 (125,530 samples, 59.90%)</title><rect x="482.2" y="546" width="706.8" height="19.0" fill="rgb(241,141,0)" rx="2" ry="2" />
<text  x="485.16" y="558.5" >memcached|proto_text.c:1969</text>
</g>
<g >
<title>memcached|proto_text.c:487 (125,599 samples, 59.94%)</title><rect x="481.8" y="586" width="707.2" height="19.0" fill="rgb(201,101,0)" rx="2" ry="2" />
<text  x="484.77" y="598.5" >memcached|proto_text.c:487</text>
</g>
<g >
<title>fltrace.so|rtree.h:301 (81 samples, 0.04%)</title><rect x="482.8" y="126" width="0.5" height="19.0" fill="rgb(222,122,0)" rx="2" ry="2" />
<text  x="485.84" y="138.5" ></text>
</g>
<g >
<title>fltrace.so|arena_inlines_b.h:165 (18 samples, 0.01%)</title><rect x="11.2" y="526" width="0.1" height="19.0" fill="rgb(227,127,0)" rx="2" ry="2" />
<text  x="14.22" y="538.5" ></text>
</g>
<g >
<title>memcached|items.c:1056 (36 samples, 0.02%)</title><rect x="481.9" y="426" width="0.2" height="19.0" fill="rgb(230,130,0)" rx="2" ry="2" />
<text  x="484.93" y="438.5" ></text>
</g>
<g >
<title>memcached|proto_text.c:573 (40 samples, 0.02%)</title><rect x="481.9" y="546" width="0.3" height="19.0" fill="rgb(241,141,0)" rx="2" ry="2" />
<text  x="484.93" y="558.5" ></text>
</g>
<g >
<title>fltrace.so|arena_inlines_b.h:165 (42 samples, 0.02%)</title><rect x="10.9" y="526" width="0.3" height="19.0" fill="rgb(231,131,0)" rx="2" ry="2" />
<text  x="13.93" y="538.5" ></text>
</g>
<g >
<title>fltrace.so|atomic.h:62[w] (112 samples, 0.05%)</title><rect x="482.2" y="46" width="0.6" height="19.0" fill="rgb(229,92,92)" rx="2" ry="2" />
<text  x="485.21" y="58.5" ></text>
</g>
<g >
<title>fltrace.so|fltrace.c:349 (256 samples, 0.12%)</title><rect x="482.2" y="386" width="1.4" height="19.0" fill="rgb(222,122,0)" rx="2" ry="2" />
<text  x="485.18" y="398.5" ></text>
</g>
<g >
<title>fltrace.so|jemalloc.c:2258 (42 samples, 0.02%)</title><rect x="10.9" y="606" width="0.3" height="19.0" fill="rgb(219,119,0)" rx="2" ry="2" />
<text  x="13.93" y="618.5" ></text>
</g>
<g >
<title>fltrace.so|extent.c:1148 (116 samples, 0.06%)</title><rect x="482.2" y="166" width="0.6" height="19.0" fill="rgb(245,145,0)" rx="2" ry="2" />
<text  x="485.18" y="178.5" ></text>
</g>
<g >
<title>fltrace.so|jemalloc.c:2258 (256 samples, 0.12%)</title><rect x="482.2" y="346" width="1.4" height="19.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="485.18" y="358.5" ></text>
</g>
<g >
<title>fltrace.so|fltrace.c:468 (128 samples, 0.06%)</title><rect x="10.4" y="646" width="0.8" height="19.0" fill="rgb(219,119,0)" rx="2" ry="2" />
<text  x="13.44" y="658.5" ></text>
</g>
<g >
<title>all (209,551 samples, 100%)</title><rect x="10.0" y="746" width="1180.0" height="19.0" fill="rgb(222,122,0)" rx="2" ry="2" />
<text  x="13.00" y="758.5" ></text>
</g>
<g >
<title>memcached|proto_text.c:207 (83,535 samples, 39.86%)</title><rect x="11.3" y="586" width="470.4" height="19.0" fill="rgb(253,153,0)" rx="2" ry="2" />
<text  x="14.35" y="598.5" >memcached|proto_text.c:207</text>
</g>
<g >
<title>fltrace.so|bin.c:77 (20 samples, 0.01%)</title><rect x="10.8" y="406" width="0.1" height="19.0" fill="rgb(195,95,0)" rx="2" ry="2" />
<text  x="13.82" y="418.5" ></text>
</g>
<g >
<title>fltrace.so|jemalloc_internal_inlines_b.h:63 (86 samples, 0.04%)</title><rect x="10.4" y="506" width="0.5" height="19.0" fill="rgb(242,142,0)" rx="2" ry="2" />
<text  x="13.44" y="518.5" ></text>
</g>
<g >
<title>fltrace.so|rtree.h:301 (112 samples, 0.05%)</title><rect x="482.2" y="66" width="0.6" height="19.0" fill="rgb(253,153,0)" rx="2" ry="2" />
<text  x="485.21" y="78.5" ></text>
</g>
<g >
<title>memcached|assoc.c:79[r] (83,535 samples, 39.86%)</title><rect x="11.3" y="486" width="470.4" height="19.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="14.35" y="498.5" >memcached|assoc.c:79[r]</text>
</g>
<g >
<title>memcached|items.c:1023 (36 samples, 0.02%)</title><rect x="481.9" y="466" width="0.2" height="19.0" fill="rgb(227,127,0)" rx="2" ry="2" />
<text  x="484.93" y="478.5" ></text>
</g>
<g >
<title>memcached|proto_text.c:2726 (28 samples, 0.01%)</title><rect x="481.8" y="566" width="0.1" height="19.0" fill="rgb(239,139,0)" rx="2" ry="2" />
<text  x="484.77" y="578.5" ></text>
</g>
<g >
<title>memcached|memcached.c:1571 (83,535 samples, 39.86%)</title><rect x="11.3" y="526" width="470.4" height="19.0" fill="rgb(213,113,0)" rx="2" ry="2" />
<text  x="14.35" y="538.5" >memcached|memcached.c:1571</text>
</g>
<g >
<title>fltrace.so|jemalloc_internal_inlines_b.h:24 (86 samples, 0.04%)</title><rect x="10.4" y="486" width="0.5" height="19.0" fill="rgb(211,111,0)" rx="2" ry="2" />
<text  x="13.44" y="498.5" ></text>
</g>
<g >
<title>memcached|thread.c:571 (33 samples, 0.02%)</title><rect x="1189.0" y="606" width="0.2" height="19.0" fill="rgb(202,102,0)" rx="2" ry="2" />
<text  x="1192.03" y="618.5" ></text>
</g>
<g >
<title>fltrace.so|arena.c:1247 (20 samples, 0.01%)</title><rect x="10.9" y="386" width="0.2" height="19.0" fill="rgb(251,151,0)" rx="2" ry="2" />
<text  x="13.94" y="398.5" ></text>
</g>
<g >
<title>fltrace.so|extent.c:800 (20 samples, 0.01%)</title><rect x="10.9" y="306" width="0.2" height="19.0" fill="rgb(248,148,0)" rx="2" ry="2" />
<text  x="13.94" y="318.5" ></text>
</g>
<g >
<title>memcached|thread.c:1047 (3) (81 samples, 0.04%)</title><rect x="1189.4" y="626" width="0.5" height="19.0" fill="rgb(206,106,0)" rx="2" ry="2" />
<text  x="1192.42" y="638.5" ></text>
</g>
<g >
<title>memcached|thread.c:910 (83,535 samples, 39.86%)</title><rect x="11.3" y="566" width="470.4" height="19.0" fill="rgb(253,153,0)" rx="2" ry="2" />
<text  x="14.35" y="578.5" >memcached|thread.c:910</text>
</g>
<g >
<title>memcached|memcached.c:3114 (125,599 samples, 59.94%)</title><rect x="481.8" y="606" width="707.2" height="19.0" fill="rgb(238,138,0)" rx="2" ry="2" />
<text  x="484.77" y="618.5" >memcached|memcached.c:3114</text>
</g>
<g >
<title>memcached|memcached.c:817 (21 samples, 0.01%)</title><rect x="1189.1" y="586" width="0.1" height="19.0" fill="rgb(239,139,0)" rx="2" ry="2" />
<text  x="1192.10" y="598.5" ></text>
</g>
<g >
<title>fltrace.so|extent.c:1017 (48 samples, 0.02%)</title><rect x="483.3" y="166" width="0.3" height="19.0" fill="rgb(191,91,0)" rx="2" ry="2" />
<text  x="486.30" y="178.5" ></text>
</g>
<g >
<title>memcached|slabs.c:386 (256 samples, 0.12%)</title><rect x="482.2" y="426" width="1.4" height="19.0" fill="rgb(238,138,0)" rx="2" ry="2" />
<text  x="485.18" y="438.5" ></text>
</g>
<g >
<title>fltrace.so|cache_bin.h:91 (32 samples, 0.02%)</title><rect x="10.9" y="466" width="0.2" height="19.0" fill="rgb(215,115,0)" rx="2" ry="2" />
<text  x="13.93" y="478.5" ></text>
</g>
<g >
<title>fltrace.so|jemalloc.c:581 (86 samples, 0.04%)</title><rect x="10.4" y="446" width="0.5" height="19.0" fill="rgb(247,147,0)" rx="2" ry="2" />
<text  x="13.44" y="458.5" ></text>
</g>
<g >
<title>libc.so.6|libc-start.c:379 (133 samples, 0.06%)</title><rect x="1189.3" y="706" width="0.7" height="19.0" fill="rgb(195,95,0)" rx="2" ry="2" />
<text  x="1192.25" y="718.5" ></text>
</g>
<g >
<title>fltrace.so|jemalloc_internal_inlines_c.h:53 (256 samples, 0.12%)</title><rect x="482.2" y="286" width="1.4" height="19.0" fill="rgb(235,135,0)" rx="2" ry="2" />
<text  x="485.18" y="298.5" ></text>
</g>
<g >
<title>fltrace.so|atomic.h:62[w] (81 samples, 0.04%)</title><rect x="482.8" y="106" width="0.5" height="19.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="485.84" y="118.5" ></text>
</g>
<g >
<title>fltrace.so|extent.c:1353 (81 samples, 0.04%)</title><rect x="482.8" y="186" width="0.5" height="19.0" fill="rgb(205,105,0)" rx="2" ry="2" />
<text  x="485.84" y="198.5" ></text>
</g>
<g >
<title>fltrace.so|arena.c:1319 (20 samples, 0.01%)</title><rect x="10.9" y="426" width="0.2" height="19.0" fill="rgb(234,134,0)" rx="2" ry="2" />
<text  x="13.94" y="438.5" ></text>
</g>
<g >
<title>memcached|items.c:189 (125,530 samples, 59.90%)</title><rect x="482.2" y="506" width="706.8" height="19.0" fill="rgb(197,97,0)" rx="2" ry="2" />
<text  x="485.16" y="518.5" >memcached|items.c:189</text>
</g>
<g >
<title>fltrace.so|jemalloc_internal_inlines_c.h:53 (18 samples, 0.01%)</title><rect x="11.2" y="546" width="0.1" height="19.0" fill="rgb(197,97,0)" rx="2" ry="2" />
<text  x="14.22" y="558.5" ></text>
</g>
<g >
<title>fltrace.so|extent.c:1353 (20 samples, 0.01%)</title><rect x="10.9" y="326" width="0.2" height="19.0" fill="rgb(224,124,0)" rx="2" ry="2" />
<text  x="13.94" y="338.5" ></text>
</g>
<g >
<title>fltrace.so|extent.c:1377 (48 samples, 0.02%)</title><rect x="483.3" y="186" width="0.3" height="19.0" fill="rgb(208,108,0)" rx="2" ry="2" />
<text  x="486.30" y="198.5" ></text>
</g>
<g >
<title>memcached|thread.c:521 (209,181 samples, 99.82%)</title><rect x="11.3" y="686" width="1177.9" height="19.0" fill="rgb(254,154,0)" rx="2" ry="2" />
<text  x="14.32" y="698.5" >memcached|thread.c:521</text>
</g>
<g >
<title>fltrace.so|extent.c:725 (41 samples, 0.02%)</title><rect x="483.3" y="126" width="0.3" height="19.0" fill="rgb(228,128,0)" rx="2" ry="2" />
<text  x="486.34" y="138.5" ></text>
</g>
<g >
<title>fltrace.so|string_fortified.h:59[w] (20 samples, 0.01%)</title><rect x="10.8" y="386" width="0.1" height="19.0" fill="rgb(252,126,126)" rx="2" ry="2" />
<text  x="13.82" y="398.5" ></text>
</g>
<g >
<title>fltrace.so|extent.c:800 (81 samples, 0.04%)</title><rect x="482.8" y="166" width="0.5" height="19.0" fill="rgb(232,132,0)" rx="2" ry="2" />
<text  x="485.84" y="178.5" ></text>
</g>
<g >
<title>fltrace.so|extent.c:1541 (130 samples, 0.06%)</title><rect x="482.8" y="206" width="0.8" height="19.0" fill="rgb(220,120,0)" rx="2" ry="2" />
<text  x="485.84" y="218.5" ></text>
</g>
<g >
<title>fltrace.so|jemalloc.c:2149 (42 samples, 0.02%)</title><rect x="10.9" y="586" width="0.3" height="19.0" fill="rgb(204,104,0)" rx="2" ry="2" />
<text  x="13.93" y="598.5" ></text>
</g>
<g >
<title>fltrace.so|tcache.c:99 (32 samples, 0.02%)</title><rect x="10.9" y="486" width="0.2" height="19.0" fill="rgb(202,102,0)" rx="2" ry="2" />
<text  x="13.93" y="498.5" ></text>
</g>
<g >
<title>libevent-2.1.so.7.0.1|0x7ffff5554f58 (209,181 samples, 99.82%)</title><rect x="11.3" y="626" width="1177.9" height="19.0" fill="rgb(199,99,0)" rx="2" ry="2" />
<text  x="14.32" y="638.5" >libevent-2.1.so.7.0.1|0x7ffff5554f58</text>
</g>
<g >
<title>memcached|slabs.c:615 (256 samples, 0.12%)</title><rect x="482.2" y="406" width="1.4" height="19.0" fill="rgb(226,126,0)" rx="2" ry="2" />
<text  x="485.18" y="418.5" ></text>
</g>
<g >
<title>libc.so.6|libc_start_call_main.h:58 (133 samples, 0.06%)</title><rect x="1189.3" y="666" width="0.7" height="19.0" fill="rgb(207,107,0)" rx="2" ry="2" />
<text  x="1192.25" y="678.5" ></text>
</g>
<g >
<title>fltrace.so|rtree.h:301 (41 samples, 0.02%)</title><rect x="483.3" y="106" width="0.3" height="19.0" fill="rgb(245,145,0)" rx="2" ry="2" />
<text  x="486.34" y="118.5" ></text>
</g>
<g >
<title>fltrace.so|extent.c:725 (112 samples, 0.05%)</title><rect x="482.2" y="86" width="0.6" height="19.0" fill="rgb(248,148,0)" rx="2" ry="2" />
<text  x="485.21" y="98.5" ></text>
</g>
<g >
<title>memcached|items.c:1648 (33 samples, 0.02%)</title><rect x="10.2" y="686" width="0.2" height="19.0" fill="rgb(241,141,0)" rx="2" ry="2" />
<text  x="13.18" y="698.5" ></text>
</g>
<g >
<title>fltrace.so|arena_inlines_b.h:176 (256 samples, 0.12%)</title><rect x="482.2" y="266" width="1.4" height="19.0" fill="rgb(216,116,0)" rx="2" ry="2" />
<text  x="485.18" y="278.5" ></text>
</g>
<g >
<title>memcached|slabs.c:406 (125,530 samples, 59.90%)</title><rect x="482.2" y="466" width="706.8" height="19.0" fill="rgb(200,100,0)" rx="2" ry="2" />
<text  x="485.16" y="478.5" >memcached|slabs.c:406</text>
</g>
<g >
<title>memcached|proto_text.c:2789 (125,530 samples, 59.90%)</title><rect x="482.2" y="566" width="706.8" height="19.0" fill="rgb(191,91,0)" rx="2" ry="2" />
<text  x="485.16" y="578.5" >memcached|proto_text.c:2789</text>
</g>
<g >
<title>fltrace.so|extent.c:1474 (116 samples, 0.06%)</title><rect x="482.2" y="186" width="0.6" height="19.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="485.18" y="198.5" ></text>
</g>
<g >
<title>fltrace.so|jemalloc.c:2149 (256 samples, 0.12%)</title><rect x="482.2" y="326" width="1.4" height="19.0" fill="rgb(223,123,0)" rx="2" ry="2" />
<text  x="485.18" y="338.5" ></text>
</g>
<g >
<title>memcached|memcached.c:2960 (83,539 samples, 39.87%)</title><rect x="11.3" y="606" width="470.4" height="19.0" fill="rgb(209,109,0)" rx="2" ry="2" />
<text  x="14.32" y="618.5" >memcached|memcached.c:2960</text>
</g>
<g >
<title>fltrace.so|jemalloc.c:1949 (42 samples, 0.02%)</title><rect x="10.9" y="566" width="0.3" height="19.0" fill="rgb(191,91,0)" rx="2" ry="2" />
<text  x="13.93" y="578.5" ></text>
</g>
<g >
<title>fltrace.so|extent.c:2156 (41 samples, 0.02%)</title><rect x="483.3" y="146" width="0.3" height="19.0" fill="rgb(254,154,0)" rx="2" ry="2" />
<text  x="486.34" y="158.5" ></text>
</g>
<g >
<title>memcached|thread.c:811 (40 samples, 0.02%)</title><rect x="481.9" y="506" width="0.3" height="19.0" fill="rgb(238,138,0)" rx="2" ry="2" />
<text  x="484.93" y="518.5" ></text>
</g>
<g >
<title>fltrace.so|jemalloc.c:1949 (256 samples, 0.12%)</title><rect x="482.2" y="306" width="1.4" height="19.0" fill="rgb(232,132,0)" rx="2" ry="2" />
<text  x="485.18" y="318.5" ></text>
</g>
<g >
<title>fltrace.so|extent.c:1017 (116 samples, 0.06%)</title><rect x="482.2" y="126" width="0.6" height="19.0" fill="rgb(216,116,0)" rx="2" ry="2" />
<text  x="485.18" y="138.5" ></text>
</g>
<g >
<title>memcached|items.c:1273 (18 samples, 0.01%)</title><rect x="11.2" y="666" width="0.1" height="19.0" fill="rgb(213,113,0)" rx="2" ry="2" />
<text  x="14.22" y="678.5" ></text>
</g>
<g >
<title>memcached|logger.c:824 (128 samples, 0.06%)</title><rect x="10.4" y="666" width="0.8" height="19.0" fill="rgb(196,96,0)" rx="2" ry="2" />
<text  x="13.44" y="678.5" ></text>
</g>
<g >
<title>memcached|thread.c:508 (18 samples, 0.01%)</title><rect x="11.2" y="686" width="0.1" height="19.0" fill="rgb(234,134,0)" rx="2" ry="2" />
<text  x="14.22" y="698.5" ></text>
</g>
<g >
<title>libevent-2.1.so.7.0.1|0x7ffff55544ac (21 samples, 0.01%)</title><rect x="1189.1" y="566" width="0.1" height="19.0" fill="rgb(248,148,0)" rx="2" ry="2" />
<text  x="1192.10" y="578.5" ></text>
</g>
<g >
<title>fltrace.so|arena.c:1414 (20 samples, 0.01%)</title><rect x="10.9" y="446" width="0.2" height="19.0" fill="rgb(202,102,0)" rx="2" ry="2" />
<text  x="13.94" y="458.5" ></text>
</g>
<g >
<title>memcached|items.c:294 (125,530 samples, 59.90%)</title><rect x="482.2" y="526" width="706.8" height="19.0" fill="rgb(236,136,0)" rx="2" ry="2" />
<text  x="485.16" y="538.5" >memcached|items.c:294</text>
</g>
<g >
<title>fltrace.so|jemalloc.c:2258 (18 samples, 0.01%)</title><rect x="11.2" y="606" width="0.1" height="19.0" fill="rgb(214,114,0)" rx="2" ry="2" />
<text  x="14.22" y="618.5" ></text>
</g>
<g >
<title>fltrace.so|tcache.c:473 (86 samples, 0.04%)</title><rect x="10.4" y="526" width="0.5" height="19.0" fill="rgb(207,107,0)" rx="2" ry="2" />
<text  x="13.44" y="538.5" ></text>
</g>
<g >
<title>memcached|slabs.c:426 (125,530 samples, 59.90%)</title><rect x="482.2" y="446" width="706.8" height="19.0" fill="rgb(239,139,0)" rx="2" ry="2" />
<text  x="485.16" y="458.5" >memcached|slabs.c:426</text>
</g>
<g >
<title>fltrace.so|extent.c:1541 (20 samples, 0.01%)</title><rect x="10.9" y="346" width="0.2" height="19.0" fill="rgb(253,153,0)" rx="2" ry="2" />
<text  x="13.94" y="358.5" ></text>
</g>
<g >
<title>memcached|0x55555555c2d5 (133 samples, 0.06%)</title><rect x="1189.3" y="726" width="0.7" height="19.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="1192.25" y="738.5" ></text>
</g>
<g >
<title>fltrace.so|jemalloc.c:2289 (256 samples, 0.12%)</title><rect x="482.2" y="366" width="1.4" height="19.0" fill="rgb(193,93,0)" rx="2" ry="2" />
<text  x="485.18" y="378.5" ></text>
</g>
<g >
<title>fltrace.so|arena.c:1220 (20 samples, 0.01%)</title><rect x="10.9" y="366" width="0.2" height="19.0" fill="rgb(230,130,0)" rx="2" ry="2" />
<text  x="13.94" y="378.5" ></text>
</g>
<g >
<title>fltrace.so|extent.c:725 (81 samples, 0.04%)</title><rect x="482.8" y="146" width="0.5" height="19.0" fill="rgb(204,104,0)" rx="2" ry="2" />
<text  x="485.84" y="158.5" ></text>
</g>
<g >
<title>fltrace.so|jemalloc.c:2494 (18 samples, 0.01%)</title><rect x="11.2" y="626" width="0.1" height="19.0" fill="rgb(249,149,0)" rx="2" ry="2" />
<text  x="14.22" y="638.5" ></text>
</g>
<g >
<title>fltrace.so|tsd.c:289 (86 samples, 0.04%)</title><rect x="10.4" y="586" width="0.5" height="19.0" fill="rgb(246,146,0)" rx="2" ry="2" />
<text  x="13.44" y="598.5" ></text>
</g>
<g >
<title>memcached|thread.c:136 (40 samples, 0.02%)</title><rect x="481.9" y="486" width="0.3" height="19.0" fill="rgb(224,124,0)" rx="2" ry="2" />
<text  x="484.93" y="498.5" ></text>
</g>
<g >
<title>memcached|thread.c:146 (209,181 samples, 99.82%)</title><rect x="11.3" y="666" width="1177.9" height="19.0" fill="rgb(233,133,0)" rx="2" ry="2" />
<text  x="14.32" y="678.5" >memcached|thread.c:146</text>
</g>
<g >
<title>memcached|proto_text.c:2772 (41 samples, 0.02%)</title><rect x="481.9" y="566" width="0.3" height="19.0" fill="rgb(251,151,0)" rx="2" ry="2" />
<text  x="484.93" y="578.5" ></text>
</g>
<g >
<title>memcached|memcached.c:2174 (40 samples, 0.02%)</title><rect x="481.9" y="526" width="0.3" height="19.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="484.93" y="538.5" ></text>
</g>
<g >
<title>libevent-2.1.so.7.0.1|0x7ffff55568a7 (209,181 samples, 99.82%)</title><rect x="11.3" y="646" width="1177.9" height="19.0" fill="rgb(193,93,0)" rx="2" ry="2" />
<text  x="14.32" y="658.5" >libevent-2.1.so.7.0.1|0x7ffff55568a7</text>
</g>
<g >
<title>fltrace.so|jemalloc.c:2149 (18 samples, 0.01%)</title><rect x="11.2" y="586" width="0.1" height="19.0" fill="rgb(248,148,0)" rx="2" ry="2" />
<text  x="14.22" y="598.5" ></text>
</g>
<g >
<title>fltrace.so|arena.c:1283 (20 samples, 0.01%)</title><rect x="10.9" y="406" width="0.2" height="19.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="13.94" y="418.5" ></text>
</g>
<g >
<title>memcached|items.c:1297[w] (36 samples, 0.02%)</title><rect x="481.9" y="406" width="0.2" height="19.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="484.93" y="418.5" ></text>
</g>
<g >
<title>libc.so.6|clone3.S:83 (209,405 samples, 99.93%)</title><rect x="10.1" y="726" width="1179.2" height="19.0" fill="rgb(249,149,0)" rx="2" ry="2" />
<text  x="13.07" y="738.5" >libc.so.6|clone3.S:83</text>
</g>
<g >
<title>libc.so.6|pthread_mutex_init.c:89[w] (81 samples, 0.04%)</title><rect x="1189.4" y="606" width="0.5" height="19.0" fill="rgb(240,109,109)" rx="2" ry="2" />
<text  x="1192.42" y="618.5" ></text>
</g>
<g >
<title>fltrace.so|arena.c:2074 (30 samples, 0.01%)</title><rect x="10.8" y="426" width="0.1" height="19.0" fill="rgb(238,138,0)" rx="2" ry="2" />
<text  x="13.76" y="438.5" ></text>
</g>
<g >
<title>fltrace.so|jemalloc_internal_inlines_a.h:130 (86 samples, 0.04%)</title><rect x="10.4" y="466" width="0.5" height="19.0" fill="rgb(192,92,0)" rx="2" ry="2" />
<text  x="13.44" y="478.5" ></text>
</g>
<g >
<title>memcached|items.c:1041 (36 samples, 0.02%)</title><rect x="481.9" y="446" width="0.2" height="19.0" fill="rgb(253,153,0)" rx="2" ry="2" />
<text  x="484.93" y="458.5" ></text>
</g>
<g >
<title>fltrace.so|extent.c:2156 (112 samples, 0.05%)</title><rect x="482.2" y="106" width="0.6" height="19.0" fill="rgb(220,120,0)" rx="2" ry="2" />
<text  x="485.21" y="118.5" ></text>
</g>
<g >
<title>fltrace.so|extent.c:1539 (116 samples, 0.06%)</title><rect x="482.2" y="206" width="0.6" height="19.0" fill="rgb(202,102,0)" rx="2" ry="2" />
<text  x="485.18" y="218.5" ></text>
</g>
<g >
<title>fltrace.so|jemalloc.c:1949 (18 samples, 0.01%)</title><rect x="11.2" y="566" width="0.1" height="19.0" fill="rgb(226,126,0)" rx="2" ry="2" />
<text  x="14.22" y="578.5" ></text>
</g>
<g >
<title>fltrace.so|tcache_inlines.h:62 (32 samples, 0.02%)</title><rect x="10.9" y="506" width="0.2" height="19.0" fill="rgb(218,118,0)" rx="2" ry="2" />
<text  x="13.93" y="518.5" ></text>
</g>
<g >
<title>memcached|memcached.c:1156 (28 samples, 0.01%)</title><rect x="481.8" y="546" width="0.1" height="19.0" fill="rgb(208,108,0)" rx="2" ry="2" />
<text  x="484.77" y="558.5" ></text>
</g>
<g >
<title>memcached|items.c:957 (83,535 samples, 39.86%)</title><rect x="11.3" y="506" width="470.4" height="19.0" fill="rgb(222,122,0)" rx="2" ry="2" />
<text  x="14.35" y="518.5" >memcached|items.c:957</text>
</g>
<g >
<title>memcached|items.c:1465[r] (33 samples, 0.02%)</title><rect x="10.2" y="666" width="0.2" height="19.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="13.18" y="678.5" ></text>
</g>
<g >
<title>fltrace.so|jemalloc.c:2254 (86 samples, 0.04%)</title><rect x="10.4" y="606" width="0.5" height="19.0" fill="rgb(198,98,0)" rx="2" ry="2" />
<text  x="13.44" y="618.5" ></text>
</g>
<g >
<title>fltrace.so|extent.c:1082 (116 samples, 0.06%)</title><rect x="482.2" y="146" width="0.6" height="19.0" fill="rgb(215,115,0)" rx="2" ry="2" />
<text  x="485.18" y="158.5" ></text>
</g>
<g >
<title>memcached|thread.c:136 (83,535 samples, 39.86%)</title><rect x="11.3" y="546" width="470.4" height="19.0" fill="rgb(235,135,0)" rx="2" ry="2" />
<text  x="14.35" y="558.5" >memcached|thread.c:136</text>
</g>
<g >
<title>fltrace.so|fltrace.c:468 (18 samples, 0.01%)</title><rect x="11.2" y="646" width="0.1" height="19.0" fill="rgb(253,153,0)" rx="2" ry="2" />
<text  x="14.22" y="658.5" ></text>
</g>
<g >
<title>memcached|slabs.c:661 (125,530 samples, 59.90%)</title><rect x="482.2" y="486" width="706.8" height="19.0" fill="rgb(213,113,0)" rx="2" ry="2" />
<text  x="485.16" y="498.5" >memcached|slabs.c:661</text>
</g>
<g >
<title>fltrace.so|arena.c:463 (246 samples, 0.12%)</title><rect x="482.2" y="226" width="1.4" height="19.0" fill="rgb(233,133,0)" rx="2" ry="2" />
<text  x="485.18" y="238.5" ></text>
</g>
</g>
</svg>
