<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="485" onload="init(evt)" viewBox="0 0 1200 485" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:15px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:20px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 15 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="485.0" fill="url(#background)"  />
<text id="title" x="600.00" y="30" > </text>
<text id="details" x="10.00" y="465" > </text>
<text id="unzoom" x="10.00" y="30" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="30" >Search</text>
<text id="ignorecase" x="1174.00" y="30" >ic</text>
<text id="matched" x="1090.00" y="465" > </text>
<g id="frames">
<g >
<title>libc.so.6|pthread_mutex_lock.c:80[r] (17,863 samples, 0.02%)</title><rect x="1189.3" y="246" width="0.2" height="19.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="1192.29" y="258.5" ></text>
</g>
<g >
<title>memcached|assoc.c:178[p] (60,274 samples, 0.07%)</title><rect x="613.6" y="126" width="0.8" height="19.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="616.64" y="138.5" ></text>
</g>
<g >
<title>memcached|crawler.c:481 (9,235 samples, 0.01%)</title><rect x="39.4" y="366" width="0.1" height="19.0" fill="rgb(197,97,0)" rx="2" ry="2" />
<text  x="42.38" y="378.5" ></text>
</g>
<g >
<title>memcached|memcached.c:2174 (36,943,197 samples, 40.64%)</title><rect x="675.1" y="206" width="479.6" height="19.0" fill="rgb(231,131,0)" rx="2" ry="2" />
<text  x="678.10" y="218.5" >memcached|memcached.c:2174</text>
</g>
<g >
<title>memcached|thread.c:810 (292,885 samples, 0.32%)</title><rect x="675.1" y="186" width="3.8" height="19.0" fill="rgb(217,117,0)" rx="2" ry="2" />
<text  x="678.10" y="198.5" ></text>
</g>
<g >
<title>memcached|thread.c:128 (55,117 samples, 0.06%)</title><rect x="88.0" y="286" width="0.7" height="19.0" fill="rgb(245,145,0)" rx="2" ry="2" />
<text  x="91.02" y="298.5" ></text>
</g>
<g >
<title>libc.so.6|pthread_mutex_lock.c:93 (29,197 samples, 0.03%)</title><rect x="1189.5" y="246" width="0.4" height="19.0" fill="rgb(236,136,0)" rx="2" ry="2" />
<text  x="1192.53" y="258.5" ></text>
</g>
<g >
<title>memcached|thread.c:146 (80,512,013 samples, 88.57%)</title><rect x="144.9" y="346" width="1045.1" height="19.0" fill="rgb(206,106,0)" rx="2" ry="2" />
<text  x="147.87" y="358.5" >memcached|thread.c:146</text>
</g>
<g >
<title>memcached|bipbuffer.c:25[r] (18,595 samples, 0.02%)</title><rect x="679.5" y="46" width="0.3" height="19.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="682.52" y="58.5" ></text>
</g>
<g >
<title>libc.so.6|pthread_mutex_lock.c:48[w] (241,737 samples, 0.27%)</title><rect x="151.2" y="206" width="3.1" height="19.0" fill="rgb(202,54,54)" rx="2" ry="2" />
<text  x="154.19" y="218.5" ></text>
</g>
<g >
<title>memcached|items.c:463 (1)[w] (3,325,696 samples, 3.66%)</title><rect x="89.1" y="286" width="43.2" height="19.0" fill="rgb(240,109,109)" rx="2" ry="2" />
<text  x="92.13" y="298.5" >me..</text>
</g>
<g >
<title>libevent-2.1.so.7.0.1|0x7ffff55568a7 (80,350,433 samples, 88.39%)</title><rect x="147.0" y="326" width="1043.0" height="19.0" fill="rgb(193,93,0)" rx="2" ry="2" />
<text  x="149.96" y="338.5" >libevent-2.1.so.7.0.1|0x7ffff55568a7</text>
</g>
<g >
<title>memcached|memcached.c:1709 (12,656 samples, 0.01%)</title><rect x="672.4" y="206" width="0.1" height="19.0" fill="rgb(191,91,0)" rx="2" ry="2" />
<text  x="675.37" y="218.5" ></text>
</g>
<g >
<title>memcached|items.c:1621 (7,726,976 samples, 8.50%)</title><rect x="39.5" y="366" width="100.3" height="19.0" fill="rgb(218,118,0)" rx="2" ry="2" />
<text  x="42.50" y="378.5" >memcached..</text>
</g>
<g >
<title>libevent-2.1.so.7.0.1|0x7ffff5554bb9[w] (11,006 samples, 0.01%)</title><rect x="147.4" y="306" width="0.2" height="19.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text  x="150.44" y="318.5" ></text>
</g>
<g >
<title>memcached|items.c:1648 (86,322 samples, 0.09%)</title><rect x="143.0" y="366" width="1.2" height="19.0" fill="rgb(247,147,0)" rx="2" ry="2" />
<text  x="146.04" y="378.5" ></text>
</g>
<g >
<title>memcached|items.c:499 (7) (32,429 samples, 0.04%)</title><rect x="671.7" y="186" width="0.4" height="19.0" fill="rgb(198,98,0)" rx="2" ry="2" />
<text  x="674.69" y="198.5" ></text>
</g>
<g >
<title>memcached|items.c:189 (25,493 samples, 0.03%)</title><rect x="1155.1" y="186" width="0.3" height="19.0" fill="rgb(204,104,0)" rx="2" ry="2" />
<text  x="1158.07" y="198.5" ></text>
</g>
<g >
<title>memcached|items.c:548 (92,971 samples, 0.10%)</title><rect x="141.8" y="326" width="1.2" height="19.0" fill="rgb(249,149,0)" rx="2" ry="2" />
<text  x="144.78" y="338.5" ></text>
</g>
<g >
<title>memcached|string_fortified.h:59[w] (33,645 samples, 0.04%)</title><rect x="144.2" y="326" width="0.4" height="19.0" fill="rgb(205,57,57)" rx="2" ry="2" />
<text  x="147.16" y="338.5" ></text>
</g>
<g >
<title>memcached|cache.c:136[w] (59,162 samples, 0.07%)</title><rect x="674.1" y="246" width="0.8" height="19.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="677.13" y="258.5" ></text>
</g>
<g >
<title>memcached|items.c:516 (4,504,454 samples, 4.96%)</title><rect x="613.2" y="166" width="58.5" height="19.0" fill="rgb(191,91,0)" rx="2" ry="2" />
<text  x="616.22" y="178.5" >memc..</text>
</g>
<g >
<title>memcached|crawler.c:462[p] (12,098 samples, 0.01%)</title><rect x="39.2" y="366" width="0.2" height="19.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="42.23" y="378.5" ></text>
</g>
<g >
<title>memcached|items.c:463 (1)[w] (560,348 samples, 0.62%)</title><rect x="132.3" y="286" width="7.3" height="19.0" fill="rgb(239,107,107)" rx="2" ry="2" />
<text  x="135.34" y="298.5" ></text>
</g>
<g >
<title>libevent-2.1.so.7.0.1|0x7ffff5554a3c (21,002 samples, 0.02%)</title><rect x="147.1" y="306" width="0.2" height="19.0" fill="rgb(233,133,0)" rx="2" ry="2" />
<text  x="150.07" y="318.5" ></text>
</g>
<g >
<title>memcached|memcached.c:1020[p] (9,680 samples, 0.01%)</title><rect x="673.9" y="226" width="0.1" height="19.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="676.91" y="238.5" ></text>
</g>
<g >
<title>memcached|slab_automove.c:103 (17,775 samples, 0.02%)</title><rect x="144.6" y="346" width="0.2" height="19.0" fill="rgb(236,136,0)" rx="2" ry="2" />
<text  x="147.60" y="358.5" ></text>
</g>
<g >
<title>memcached|proto_text.c:633 (15,149 samples, 0.02%)</title><rect x="1154.8" y="226" width="0.2" height="19.0" fill="rgb(236,136,0)" rx="2" ry="2" />
<text  x="1157.76" y="238.5" ></text>
</g>
<g >
<title>memcached|items.c:1009[r] (12,488 samples, 0.01%)</title><rect x="678.9" y="146" width="0.2" height="19.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="681.91" y="158.5" ></text>
</g>
<g >
<title>libc.so.6|pthread_mutex_lock.c:48[w] (15,039 samples, 0.02%)</title><rect x="679.3" y="46" width="0.2" height="19.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="682.32" y="58.5" ></text>
</g>
<g >
<title>all (90,903,081 samples, 100%)</title><rect x="10.0" y="426" width="1180.0" height="19.0" fill="rgb(227,127,0)" rx="2" ry="2" />
<text  x="13.00" y="438.5" ></text>
</g>
<g >
<title>libc.so.6|pthread_mutex_trylock.c:74 (13)[w] (25,146 samples, 0.03%)</title><rect x="38.9" y="326" width="0.3" height="19.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="41.90" y="338.5" ></text>
</g>
<g >
<title>libevent-2.1.so.7.0.1|0x7ffff555603e (8,551 samples, 0.01%)</title><rect x="146.8" y="286" width="0.2" height="19.0" fill="rgb(195,95,0)" rx="2" ry="2" />
<text  x="149.85" y="298.5" ></text>
</g>
<g >
<title>memcached|items.c:1116 (85,812 samples, 0.09%)</title><rect x="87.6" y="306" width="1.1" height="19.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="90.62" y="318.5" ></text>
</g>
<g >
<title>libc.so.6|pthread_mutex_lock.c:80[r] (252,365 samples, 0.28%)</title><rect x="147.9" y="226" width="3.3" height="19.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="150.91" y="238.5" ></text>
</g>
<g >
<title>memcached|memcached.c:1012[r] (47,366 samples, 0.05%)</title><rect x="673.3" y="226" width="0.6" height="19.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="676.29" y="238.5" ></text>
</g>
<g >
<title>memcached|items.c:1032[r] (21,983 samples, 0.02%)</title><rect x="154.9" y="186" width="0.3" height="19.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="157.91" y="198.5" ></text>
</g>
<g >
<title>libc.so.6|pthread_mutex_trylock.c:74 (13)[w] (39,256 samples, 0.04%)</title><rect x="41.1" y="286" width="0.5" height="19.0" fill="rgb(230,93,93)" rx="2" ry="2" />
<text  x="44.11" y="298.5" ></text>
</g>
<g >
<title>memcached|memcached.c:3070 (66,624 samples, 0.07%)</title><rect x="674.0" y="286" width="0.9" height="19.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="677.03" y="298.5" ></text>
</g>
<g >
<title>libc.so.6|pthread_mutex_unlock.c:368 (26,382 samples, 0.03%)</title><rect x="1154.3" y="166" width="0.4" height="19.0" fill="rgb(210,110,0)" rx="2" ry="2" />
<text  x="1157.32" y="178.5" ></text>
</g>
<g >
<title>memcached|memcached.c:1708 (32,444 samples, 0.04%)</title><rect x="671.7" y="206" width="0.4" height="19.0" fill="rgb(193,93,0)" rx="2" ry="2" />
<text  x="674.69" y="218.5" ></text>
</g>
<g >
<title>memcached|items.c:1465[r] (86,091 samples, 0.09%)</title><rect x="143.0" y="346" width="1.2" height="19.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="146.04" y="358.5" ></text>
</g>
<g >
<title>memcached|slabs.c:498 (12,591 samples, 0.01%)</title><rect x="672.4" y="166" width="0.1" height="19.0" fill="rgb(233,133,0)" rx="2" ry="2" />
<text  x="675.37" y="178.5" ></text>
</g>
<g >
<title>memcached|slab_automove.c:100 (33,645 samples, 0.04%)</title><rect x="144.2" y="346" width="0.4" height="19.0" fill="rgb(234,134,0)" rx="2" ry="2" />
<text  x="147.16" y="358.5" ></text>
</g>
<g >
<title>memcached|items.c:556[w] (41,134 samples, 0.05%)</title><rect x="142.4" y="306" width="0.5" height="19.0" fill="rgb(236,102,102)" rx="2" ry="2" />
<text  x="145.42" y="318.5" ></text>
</g>
<g >
<title>memcached|proto_text.c:573 (36,943,197 samples, 40.64%)</title><rect x="675.1" y="226" width="479.6" height="19.0" fill="rgb(201,101,0)" rx="2" ry="2" />
<text  x="678.10" y="238.5" >memcached|proto_text.c:573</text>
</g>
<g >
<title>libc.so.6|pthread_mutex_unlock.c:51[r] (22,038 samples, 0.02%)</title><rect x="1154.3" y="146" width="0.3" height="19.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="1157.32" y="158.5" ></text>
</g>
<g >
<title>libc.so.6|pthread_mutex_lock.c:80[r] (18,905 samples, 0.02%)</title><rect x="679.1" y="66" width="0.2" height="19.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="682.08" y="78.5" ></text>
</g>
<g >
<title>memcached|items.c:1340 (93,395 samples, 0.10%)</title><rect x="141.8" y="346" width="1.2" height="19.0" fill="rgb(212,112,0)" rx="2" ry="2" />
<text  x="144.78" y="358.5" ></text>
</g>
<g >
<title>memcached|proto_text.c:487 (37,138,494 samples, 40.86%)</title><rect x="674.9" y="266" width="482.1" height="19.0" fill="rgb(249,149,0)" rx="2" ry="2" />
<text  x="677.91" y="278.5" >memcached|proto_text.c:487</text>
</g>
<g >
<title>memcached|proto_text.c:213 (57,051 samples, 0.06%)</title><rect x="673.3" y="266" width="0.7" height="19.0" fill="rgb(215,115,0)" rx="2" ry="2" />
<text  x="676.29" y="278.5" ></text>
</g>
<g >
<title>memcached|thread.c:909 (494,570 samples, 0.54%)</title><rect x="147.9" y="246" width="6.4" height="19.0" fill="rgb(202,102,0)" rx="2" ry="2" />
<text  x="150.90" y="258.5" ></text>
</g>
<g >
<title>memcached|items.c:1104[r] (32,891 samples, 0.04%)</title><rect x="87.2" y="306" width="0.4" height="19.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="90.20" y="318.5" ></text>
</g>
<g >
<title>memcached|thread.c:811 (36,623,930 samples, 40.29%)</title><rect x="678.9" y="186" width="475.4" height="19.0" fill="rgb(218,118,0)" rx="2" ry="2" />
<text  x="681.91" y="198.5" >memcached|thread.c:811</text>
</g>
<g >
<title>memcached|memcached.c:1171 (14,784 samples, 0.02%)</title><rect x="674.9" y="226" width="0.2" height="19.0" fill="rgb(254,154,0)" rx="2" ry="2" />
<text  x="677.91" y="238.5" ></text>
</g>
<g >
<title>memcached|string_fortified.h:29[w] (7,978 samples, 0.01%)</title><rect x="1154.7" y="206" width="0.1" height="19.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text  x="1157.66" y="218.5" ></text>
</g>
<g >
<title>libc.so.6|pthread_mutex_trylock.c:74 (13)[w] (25,337 samples, 0.03%)</title><rect x="88.4" y="266" width="0.3" height="19.0" fill="rgb(208,63,63)" rx="2" ry="2" />
<text  x="91.41" y="278.5" ></text>
</g>
<g >
<title>memcached|bipbuffer.c:65[r] (45,572 samples, 0.05%)</title><rect x="141.1" y="306" width="0.6" height="19.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="144.08" y="318.5" ></text>
</g>
<g >
<title>memcached|items.c:1424 (3,661,672 samples, 4.03%)</title><rect x="39.5" y="346" width="47.5" height="19.0" fill="rgb(236,136,0)" rx="2" ry="2" />
<text  x="42.51" y="358.5" >mem..</text>
</g>
<g >
<title>memcached|thread.c:136 (36,623,930 samples, 40.29%)</title><rect x="678.9" y="166" width="475.4" height="19.0" fill="rgb(231,131,0)" rx="2" ry="2" />
<text  x="681.91" y="178.5" >memcached|thread.c:136</text>
</g>
<g >
<title>memcached|items.c:294 (25,493 samples, 0.03%)</title><rect x="1155.1" y="206" width="0.3" height="19.0" fill="rgb(251,151,0)" rx="2" ry="2" />
<text  x="1158.07" y="218.5" ></text>
</g>
<g >
<title>memcached|assoc.c:79[r] (18,470,783 samples, 20.32%)</title><rect x="155.2" y="166" width="239.8" height="19.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="158.19" y="178.5" >memcached|assoc.c:79[r]</text>
</g>
<g >
<title>libc.so.6|memmove-vec-unaligned-erms.S:592[w] (82,438 samples, 0.09%)</title><rect x="1181.6" y="266" width="1.1" height="19.0" fill="rgb(224,85,85)" rx="2" ry="2" />
<text  x="1184.58" y="278.5" ></text>
</g>
<g >
<title>libc.so.6|pthread_mutex_unlock.c:51[r] (38,056 samples, 0.04%)</title><rect x="672.7" y="206" width="0.5" height="19.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="675.71" y="218.5" ></text>
</g>
<g >
<title>memcached|memcached.c:3316 (1) (551,025 samples, 0.61%)</title><rect x="1182.8" y="286" width="7.2" height="19.0" fill="rgb(194,94,0)" rx="2" ry="2" />
<text  x="1185.82" y="298.5" ></text>
</g>
<g >
<title>memcached|items.c:1642 (248,698 samples, 0.27%)</title><rect x="139.8" y="366" width="3.2" height="19.0" fill="rgb(211,111,0)" rx="2" ry="2" />
<text  x="142.81" y="378.5" ></text>
</g>
<g >
<title>memcached|items.c:479 (4,504,454 samples, 4.96%)</title><rect x="613.2" y="146" width="58.5" height="19.0" fill="rgb(223,123,0)" rx="2" ry="2" />
<text  x="616.22" y="158.5" >memc..</text>
</g>
<g >
<title>libc.so.6|memmove-vec-unaligned-erms.S:605[w] (12,694 samples, 0.01%)</title><rect x="1182.7" y="266" width="0.1" height="19.0" fill="rgb(227,90,90)" rx="2" ry="2" />
<text  x="1185.65" y="278.5" ></text>
</g>
<g >
<title>memcached|string_fortified.h:59[w] (14,784 samples, 0.02%)</title><rect x="674.9" y="206" width="0.2" height="19.0" fill="rgb(251,124,124)" rx="2" ry="2" />
<text  x="677.91" y="218.5" ></text>
</g>
<g >
<title>memcached|items.c:957 (36,524,896 samples, 40.18%)</title><rect x="680.2" y="146" width="474.1" height="19.0" fill="rgb(232,132,0)" rx="2" ry="2" />
<text  x="683.19" y="158.5" >memcached|items.c:957</text>
</g>
<g >
<title>memcached|items.c:1032[r] (15,299 samples, 0.02%)</title><rect x="680.0" y="146" width="0.2" height="19.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="682.99" y="158.5" ></text>
</g>
<g >
<title>memcached|items.c:1116 (116,484 samples, 0.13%)</title><rect x="40.1" y="326" width="1.5" height="19.0" fill="rgb(238,138,0)" rx="2" ry="2" />
<text  x="43.11" y="338.5" ></text>
</g>
<g >
<title>memcached|items.c:1820[w] (2,112,802 samples, 2.32%)</title><rect x="10.2" y="346" width="27.4" height="19.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="13.20" y="358.5" >m..</text>
</g>
<g >
<title>memcached|assoc.c:85 (1)[r] (35,553 samples, 0.04%)</title><rect x="918.2" y="126" width="0.4" height="19.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="921.18" y="138.5" ></text>
</g>
<g >
<title>libc.so.6|memcmp-sse4.S:278[r] (31,918 samples, 0.04%)</title><rect x="396.2" y="146" width="0.5" height="19.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="399.24" y="158.5" ></text>
</g>
<g >
<title>libc.so.6|pthread_mutex_lock.c:93 (15,039 samples, 0.02%)</title><rect x="679.3" y="66" width="0.2" height="19.0" fill="rgb(191,91,0)" rx="2" ry="2" />
<text  x="682.32" y="78.5" ></text>
</g>
<g >
<title>memcached|items.c:1032 (3)[r] (12,492 samples, 0.01%)</title><rect x="154.7" y="186" width="0.2" height="19.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="157.75" y="198.5" ></text>
</g>
<g >
<title>libc.so.6|memcmp-sse4.S:270[r] (18,034 samples, 0.02%)</title><rect x="916.2" y="106" width="0.2" height="19.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="919.20" y="118.5" ></text>
</g>
<g >
<title>memcached|slab_automove.c:67[r] (17,775 samples, 0.02%)</title><rect x="144.6" y="326" width="0.2" height="19.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="147.60" y="338.5" ></text>
</g>
<g >
<title>memcached|items.c:1660 (54,390 samples, 0.06%)</title><rect x="144.2" y="366" width="0.7" height="19.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="147.16" y="378.5" ></text>
</g>
<g >
<title>memcached|thread.c:813 (26,382 samples, 0.03%)</title><rect x="1154.3" y="186" width="0.4" height="19.0" fill="rgb(224,124,0)" rx="2" ry="2" />
<text  x="1157.32" y="198.5" ></text>
</g>
<g >
<title>memcached|items.c:1240 (560,354 samples, 0.62%)</title><rect x="132.3" y="306" width="7.3" height="19.0" fill="rgb(247,147,0)" rx="2" ry="2" />
<text  x="135.34" y="318.5" ></text>
</g>
<g >
<title>libc.so.6|pthread_mutex_lock.c:93 (46,752 samples, 0.05%)</title><rect x="140.5" y="326" width="0.6" height="19.0" fill="rgb(232,132,0)" rx="2" ry="2" />
<text  x="143.47" y="338.5" ></text>
</g>
<g >
<title>memcached|crawler.c:445 (2,128,060 samples, 2.34%)</title><rect x="10.0" y="366" width="27.6" height="19.0" fill="rgb(191,91,0)" rx="2" ry="2" />
<text  x="13.00" y="378.5" >m..</text>
</g>
<g >
<title>memcached|thread.c:128 (79,100 samples, 0.09%)</title><rect x="38.2" y="346" width="1.0" height="19.0" fill="rgb(207,107,0)" rx="2" ry="2" />
<text  x="41.20" y="358.5" ></text>
</g>
<g >
<title>memcached|murmur3_hash.c:90[r] (30,805 samples, 0.03%)</title><rect x="40.1" y="306" width="0.4" height="19.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="43.11" y="318.5" ></text>
</g>
<g >
<title>libc.so.6|sendmsg.c:28[r] (497,962 samples, 0.55%)</title><rect x="1182.8" y="226" width="6.5" height="19.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="1185.82" y="238.5" ></text>
</g>
<g >
<title>libc.so.6|pthread_mutex_lock.c:48[w] (29,197 samples, 0.03%)</title><rect x="1189.5" y="226" width="0.4" height="19.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="1192.53" y="238.5" ></text>
</g>
<g >
<title>memcached|assoc.c:85[r] (18,155,614 samples, 19.97%)</title><rect x="918.6" y="126" width="235.7" height="19.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="921.64" y="138.5" >memcached|assoc.c:85[r]</text>
</g>
<g >
<title>memcached|slabs.c:406 (25,493 samples, 0.03%)</title><rect x="1155.1" y="146" width="0.3" height="19.0" fill="rgb(203,103,0)" rx="2" ry="2" />
<text  x="1158.07" y="158.5" ></text>
</g>
<g >
<title>memcached|murmur3_hash.c:90[r] (16,887 samples, 0.02%)</title><rect x="38.0" y="346" width="0.2" height="19.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="40.98" y="358.5" ></text>
</g>
<g >
<title>memcached|items.c:957 (35,282,551 samples, 38.81%)</title><rect x="155.2" y="186" width="458.0" height="19.0" fill="rgb(191,91,0)" rx="2" ry="2" />
<text  x="158.19" y="198.5" >memcached|items.c:957</text>
</g>
<g >
<title>memcached|memcached.c:2960 (40,551,207 samples, 44.61%)</title><rect x="147.6" y="286" width="526.4" height="19.0" fill="rgb(245,145,0)" rx="2" ry="2" />
<text  x="150.64" y="298.5" >memcached|memcached.c:2960</text>
</g>
<g >
<title>libevent-2.1.so.7.0.1|0x7ffff555600b[r] (66,677 samples, 0.07%)</title><rect x="145.9" y="286" width="0.9" height="19.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="148.90" y="298.5" ></text>
</g>
<g >
<title>libc.so.6|sendmsg.c:25 (497,962 samples, 0.55%)</title><rect x="1182.8" y="246" width="6.5" height="19.0" fill="rgb(209,109,0)" rx="2" ry="2" />
<text  x="1185.82" y="258.5" ></text>
</g>
<g >
<title>libc.so.6|pthread_mutex_lock.c:80[r] (146,376 samples, 0.16%)</title><rect x="675.1" y="166" width="1.9" height="19.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="678.11" y="178.5" ></text>
</g>
<g >
<title>memcached|items.c:1056 (59,284 samples, 0.07%)</title><rect x="679.1" y="106" width="0.7" height="19.0" fill="rgb(207,107,0)" rx="2" ry="2" />
<text  x="682.08" y="118.5" ></text>
</g>
<g >
<title>libc.so.6|pthread_mutex_trylock.c:33[r] (53,903 samples, 0.06%)</title><rect x="38.2" y="326" width="0.7" height="19.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="41.20" y="338.5" ></text>
</g>
<g >
<title>memcached|murmur3_hash.c:90[r] (30,695 samples, 0.03%)</title><rect x="87.6" y="286" width="0.4" height="19.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="90.62" y="298.5" ></text>
</g>
<g >
<title>memcached|items.c:1240 (3,459,298 samples, 3.81%)</title><rect x="42.1" y="326" width="44.9" height="19.0" fill="rgb(229,129,0)" rx="2" ry="2" />
<text  x="45.09" y="338.5" >mem..</text>
</g>
<g >
<title>libc.so.6|memmove-vec-unaligned-erms.S:541[w] (435,516 samples, 0.48%)</title><rect x="1162.7" y="266" width="5.6" height="19.0" fill="rgb(227,89,89)" rx="2" ry="2" />
<text  x="1165.68" y="278.5" ></text>
</g>
<g >
<title>memcached|items.c:1329 (45,572 samples, 0.05%)</title><rect x="141.1" y="346" width="0.6" height="19.0" fill="rgb(207,107,0)" rx="2" ry="2" />
<text  x="144.08" y="358.5" ></text>
</g>
<g >
<title>memcached|items.c:554[r] (48,585 samples, 0.05%)</title><rect x="141.8" y="306" width="0.6" height="19.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="144.78" y="318.5" ></text>
</g>
<g >
<title>memcached|assoc.c:177[r] (32,208 samples, 0.04%)</title><rect x="613.2" y="126" width="0.4" height="19.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="616.22" y="138.5" ></text>
</g>
<g >
<title>memcached|proto_text.c:591 (7,978 samples, 0.01%)</title><rect x="1154.7" y="226" width="0.1" height="19.0" fill="rgb(239,139,0)" rx="2" ry="2" />
<text  x="1157.66" y="238.5" ></text>
</g>
<g >
<title>memcached|items.c:1032 (3)[r] (10,836 samples, 0.01%)</title><rect x="679.9" y="146" width="0.1" height="19.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="682.85" y="158.5" ></text>
</g>
<g >
<title>libc.so.6|pthread_create.c:442 (90,901,733 samples, 100.00%)</title><rect x="10.0" y="386" width="1180.0" height="19.0" fill="rgb(209,109,0)" rx="2" ry="2" />
<text  x="13.00" y="398.5" >libc.so.6|pthread_create.c:442</text>
</g>
<g >
<title>libc.so.6|memmove-vec-unaligned-erms.S:542[w] (422,205 samples, 0.46%)</title><rect x="1168.3" y="266" width="5.5" height="19.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="1171.34" y="278.5" ></text>
</g>
<g >
<title>libc.so.6|pthread_mutex_unlock.c:368 (45,051 samples, 0.05%)</title><rect x="672.7" y="226" width="0.6" height="19.0" fill="rgb(213,113,0)" rx="2" ry="2" />
<text  x="675.71" y="238.5" ></text>
</g>
<g >
<title>memcached|proto_text.c:2772 (36,975,097 samples, 40.68%)</title><rect x="675.1" y="246" width="480.0" height="19.0" fill="rgb(215,115,0)" rx="2" ry="2" />
<text  x="678.10" y="258.5" >memcached|proto_text.c:2772</text>
</g>
<g >
<title>libc.so.6|pthread_mutex_trylock.c:33[r] (29,741 samples, 0.03%)</title><rect x="88.0" y="266" width="0.4" height="19.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="91.02" y="278.5" ></text>
</g>
<g >
<title>memcached|items.c:1425 (4,051,013 samples, 4.46%)</title><rect x="87.0" y="346" width="52.6" height="19.0" fill="rgb(252,152,0)" rx="2" ry="2" />
<text  x="90.04" y="358.5" >mem..</text>
</g>
<g >
<title>memcached|assoc.c:79[r] (18,181,183 samples, 20.00%)</title><rect x="680.2" y="126" width="236.0" height="19.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="683.19" y="138.5" >memcached|assoc.c:79[r]</text>
</g>
<g >
<title>memcached|bipbuffer.c:79 (18,595 samples, 0.02%)</title><rect x="679.5" y="66" width="0.3" height="19.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="682.52" y="78.5" ></text>
</g>
<g >
<title>memcached|assoc.c:85 (1)[r] (32,526 samples, 0.04%)</title><rect x="396.7" y="166" width="0.4" height="19.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="399.66" y="178.5" ></text>
</g>
<g >
<title>libevent-2.1.so.7.0.1|0x7ffff55565d1 (161,330 samples, 0.18%)</title><rect x="144.9" y="326" width="2.1" height="19.0" fill="rgb(233,133,0)" rx="2" ry="2" />
<text  x="147.87" y="338.5" ></text>
</g>
<g >
<title>libevent-2.1.so.7.0.1|0x7ffff5554f58 (80,297,962 samples, 88.33%)</title><rect x="147.6" y="306" width="1042.4" height="19.0" fill="rgb(217,117,0)" rx="2" ry="2" />
<text  x="150.64" y="318.5" >libevent-2.1.so.7.0.1|0x7ffff5554f58</text>
</g>
<g >
<title>memcached|items.c:1087 (4,051,013 samples, 4.46%)</title><rect x="87.0" y="326" width="52.6" height="19.0" fill="rgb(250,150,0)" rx="2" ry="2" />
<text  x="90.04" y="338.5" >mem..</text>
</g>
<g >
<title>memcached|items.c:1041 (60,406 samples, 0.07%)</title><rect x="679.1" y="126" width="0.8" height="19.0" fill="rgb(244,144,0)" rx="2" ry="2" />
<text  x="682.07" y="138.5" ></text>
</g>
<g >
<title>memcached|thread.c:521 (80,512,013 samples, 88.57%)</title><rect x="144.9" y="366" width="1045.1" height="19.0" fill="rgb(236,136,0)" rx="2" ry="2" />
<text  x="147.87" y="378.5" >memcached|thread.c:521</text>
</g>
<g >
<title>memcached|slabs.c:661 (25,493 samples, 0.03%)</title><rect x="1155.1" y="166" width="0.3" height="19.0" fill="rgb(238,138,0)" rx="2" ry="2" />
<text  x="1158.07" y="178.5" ></text>
</g>
<g >
<title>libc.so.6|memcmp-sse4.S:271[r] (101,129 samples, 0.11%)</title><rect x="916.4" y="106" width="1.3" height="19.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="919.43" y="118.5" ></text>
</g>
<g >
<title>libc.so.6|pthread_mutex_lock.c:93 (241,738 samples, 0.27%)</title><rect x="151.2" y="226" width="3.1" height="19.0" fill="rgb(232,132,0)" rx="2" ry="2" />
<text  x="154.19" y="238.5" ></text>
</g>
<g >
<title>libc.so.6|pthread_mutex_lock.c:93 (146,188 samples, 0.16%)</title><rect x="677.0" y="166" width="1.9" height="19.0" fill="rgb(202,102,0)" rx="2" ry="2" />
<text  x="680.01" y="178.5" ></text>
</g>
<g >
<title>libevent-2.1.so.7.0.1|0x7ffff5555ffa[r] (68,026 samples, 0.07%)</title><rect x="145.0" y="286" width="0.9" height="19.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="148.02" y="298.5" ></text>
</g>
<g >
<title>memcached|assoc.c:85 (1) (130,564 samples, 0.14%)</title><rect x="395.0" y="166" width="1.7" height="19.0" fill="rgb(197,97,0)" rx="2" ry="2" />
<text  x="397.96" y="178.5" ></text>
</g>
<g >
<title>memcached|assoc.c:179[p] (4,411,783 samples, 4.85%)</title><rect x="614.4" y="126" width="57.3" height="19.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="617.42" y="138.5" >memc..</text>
</g>
<g >
<title>memcached|bipbuffer.c:144 (45,572 samples, 0.05%)</title><rect x="141.1" y="326" width="0.6" height="19.0" fill="rgb(207,107,0)" rx="2" ry="2" />
<text  x="144.08" y="338.5" ></text>
</g>
<g >
<title>memcached|memcached.c:1242 (57,046 samples, 0.06%)</title><rect x="673.3" y="246" width="0.7" height="19.0" fill="rgb(246,146,0)" rx="2" ry="2" />
<text  x="676.29" y="258.5" ></text>
</g>
<g >
<title>libc.so.6|memmove-vec-unaligned-erms.S:543[w] (421,700 samples, 0.46%)</title><rect x="1173.8" y="266" width="5.5" height="19.0" fill="rgb(242,112,112)" rx="2" ry="2" />
<text  x="1176.82" y="278.5" ></text>
</g>
<g >
<title>libc.so.6|pthread_mutex_lock.c:80[r] (51,341 samples, 0.06%)</title><rect x="139.8" y="326" width="0.7" height="19.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="142.81" y="338.5" ></text>
</g>
<g >
<title>memcached|thread.c:912 (45,051 samples, 0.05%)</title><rect x="672.7" y="246" width="0.6" height="19.0" fill="rgb(234,134,0)" rx="2" ry="2" />
<text  x="675.71" y="258.5" ></text>
</g>
<g >
<title>memcached|slabs.c:430[w] (18,757 samples, 0.02%)</title><rect x="1155.2" y="126" width="0.2" height="19.0" fill="rgb(253,127,127)" rx="2" ry="2" />
<text  x="1158.16" y="138.5" ></text>
</g>
<g >
<title>memcached|assoc.c:85[r] (16,648,561 samples, 18.31%)</title><rect x="397.1" y="166" width="216.1" height="19.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="400.08" y="178.5" >memcached|assoc.c:85[r]</text>
</g>
<g >
<title>memcached|thread.c:136 (39,934,380 samples, 43.93%)</title><rect x="154.3" y="226" width="518.4" height="19.0" fill="rgb(197,97,0)" rx="2" ry="2" />
<text  x="157.32" y="238.5" >memcached|thread.c:136</text>
</g>
<g >
<title>memcached|memcached.c:1671 (4,506,278 samples, 4.96%)</title><rect x="613.2" y="206" width="58.5" height="19.0" fill="rgb(205,105,0)" rx="2" ry="2" />
<text  x="616.20" y="218.5" >memc..</text>
</g>
<g >
<title>memcached|items.c:1103[r] (13,982 samples, 0.02%)</title><rect x="39.5" y="326" width="0.2" height="19.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="42.51" y="338.5" ></text>
</g>
<g >
<title>memcached|items.c:1103[r] (11,978 samples, 0.01%)</title><rect x="87.0" y="306" width="0.2" height="19.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="90.04" y="318.5" ></text>
</g>
<g >
<title>memcached|items.c:1431 (13,906 samples, 0.02%)</title><rect x="139.6" y="346" width="0.2" height="19.0" fill="rgb(234,134,0)" rx="2" ry="2" />
<text  x="142.63" y="358.5" ></text>
</g>
<g >
<title>memcached|proto_text.c:2789 (148,276 samples, 0.16%)</title><rect x="1155.1" y="246" width="1.9" height="19.0" fill="rgb(211,111,0)" rx="2" ry="2" />
<text  x="1158.07" y="258.5" ></text>
</g>
<g >
<title>libc.so.6|pthread_mutex_lock.c:48[w] (46,752 samples, 0.05%)</title><rect x="140.5" y="306" width="0.6" height="19.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="143.47" y="318.5" ></text>
</g>
<g >
<title>memcached|crawler.c:457 (95,987 samples, 0.11%)</title><rect x="38.0" y="366" width="1.2" height="19.0" fill="rgb(244,144,0)" rx="2" ry="2" />
<text  x="40.98" y="378.5" ></text>
</g>
<g >
<title>memcached|memcached.c:2687 (497,962 samples, 0.55%)</title><rect x="1182.8" y="266" width="6.5" height="19.0" fill="rgb(206,106,0)" rx="2" ry="2" />
<text  x="1185.82" y="278.5" ></text>
</g>
<g >
<title>libc.so.6|clone3.S:83 (90,901,958 samples, 100.00%)</title><rect x="10.0" y="406" width="1180.0" height="19.0" fill="rgb(242,142,0)" rx="2" ry="2" />
<text  x="13.00" y="418.5" >libc.so.6|clone3.S:83</text>
</g>
<g >
<title>memcached|proto_text.c:207 (40,474,005 samples, 44.52%)</title><rect x="147.9" y="266" width="525.4" height="19.0" fill="rgb(223,123,0)" rx="2" ry="2" />
<text  x="150.90" y="278.5" >memcached|proto_text.c:207</text>
</g>
<g >
<title>memcached|proto_text.c:1969 (148,162 samples, 0.16%)</title><rect x="1155.1" y="226" width="1.9" height="19.0" fill="rgb(239,139,0)" rx="2" ry="2" />
<text  x="1158.07" y="238.5" ></text>
</g>
<g >
<title>memcached|items.c:1294 (33,944 samples, 0.04%)</title><rect x="679.1" y="86" width="0.4" height="19.0" fill="rgb(235,135,0)" rx="2" ry="2" />
<text  x="682.08" y="98.5" ></text>
</g>
<g >
<title>memcached|memcached.c:2690 (47,093 samples, 0.05%)</title><rect x="1189.3" y="266" width="0.6" height="19.0" fill="rgb(216,116,0)" rx="2" ry="2" />
<text  x="1192.29" y="278.5" ></text>
</g>
<g >
<title>memcached|items.c:1172 (3,325,773 samples, 3.66%)</title><rect x="89.1" y="306" width="43.2" height="19.0" fill="rgb(208,108,0)" rx="2" ry="2" />
<text  x="92.13" y="318.5" >me..</text>
</g>
<g >
<title>memcached|assoc.c:161[p] (32,384 samples, 0.04%)</title><rect x="671.7" y="146" width="0.4" height="19.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="674.69" y="158.5" ></text>
</g>
<g >
<title>memcached|memcached.c:3178 (1,988,995 samples, 2.19%)</title><rect x="1157.0" y="286" width="25.8" height="19.0" fill="rgb(244,144,0)" rx="2" ry="2" />
<text  x="1160.00" y="298.5" ></text>
</g>
<g >
<title>memcached|items.c:1328 (98,093 samples, 0.11%)</title><rect x="139.8" y="346" width="1.3" height="19.0" fill="rgb(233,133,0)" rx="2" ry="2" />
<text  x="142.81" y="358.5" ></text>
</g>
<g >
<title>libc.so.6|memmove-vec-unaligned-erms.S:548[w] (176,261 samples, 0.19%)</title><rect x="1179.3" y="266" width="2.3" height="19.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text  x="1182.29" y="278.5" ></text>
</g>
<g >
<title>memcached|proto_text.c:137[w] (18,925 samples, 0.02%)</title><rect x="147.7" y="266" width="0.2" height="19.0" fill="rgb(201,51,51)" rx="2" ry="2" />
<text  x="150.66" y="278.5" ></text>
</g>
<g >
<title>libc.so.6|memmove-vec-unaligned-erms.S:540[w] (437,213 samples, 0.48%)</title><rect x="1157.0" y="266" width="5.7" height="19.0" fill="rgb(220,79,79)" rx="2" ry="2" />
<text  x="1160.01" y="278.5" ></text>
</g>
<g >
<title>memcached|items.c:1119[p] (30,558 samples, 0.03%)</title><rect x="88.7" y="306" width="0.4" height="19.0" fill="rgb(188,188,55)" rx="2" ry="2" />
<text  x="91.74" y="318.5" ></text>
</g>
<g >
<title>memcached|thread.c:128 (85,679 samples, 0.09%)</title><rect x="40.5" y="306" width="1.1" height="19.0" fill="rgb(238,138,0)" rx="2" ry="2" />
<text  x="43.51" y="318.5" ></text>
</g>
<g >
<title>memcached|crawler.c:453[r] (27,416 samples, 0.03%)</title><rect x="37.6" y="366" width="0.4" height="19.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="40.63" y="378.5" ></text>
</g>
<g >
<title>memcached|items.c:1023 (60,410 samples, 0.07%)</title><rect x="679.1" y="146" width="0.8" height="19.0" fill="rgb(246,146,0)" rx="2" ry="2" />
<text  x="682.07" y="158.5" ></text>
</g>
<g >
<title>memcached|items.c:584 (4,504,575 samples, 4.96%)</title><rect x="613.2" y="186" width="58.5" height="19.0" fill="rgb(239,139,0)" rx="2" ry="2" />
<text  x="616.22" y="198.5" >memc..</text>
</g>
<g >
<title>memcached|items.c:327 (122,667 samples, 0.13%)</title><rect x="1155.4" y="206" width="1.6" height="19.0" fill="rgb(196,96,0)" rx="2" ry="2" />
<text  x="1158.40" y="218.5" ></text>
</g>
<g >
<title>libc.so.6|memmove-vec-unaligned-erms.S:324[w] (30,215 samples, 0.03%)</title><rect x="1156.6" y="186" width="0.4" height="19.0" fill="rgb(242,112,112)" rx="2" ry="2" />
<text  x="1159.60" y="198.5" ></text>
</g>
<g >
<title>libc.so.6|pthread_mutex_lock.c:80[r] (11,111 samples, 0.01%)</title><rect x="1154.8" y="206" width="0.1" height="19.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="1157.76" y="218.5" ></text>
</g>
<g >
<title>memcached|items.c:1295 (18,595 samples, 0.02%)</title><rect x="679.5" y="86" width="0.3" height="19.0" fill="rgb(225,125,0)" rx="2" ry="2" />
<text  x="682.52" y="98.5" ></text>
</g>
<g >
<title>libc.so.6|memmove-vec-unaligned-erms.S:323[w] (92,395 samples, 0.10%)</title><rect x="1155.4" y="186" width="1.2" height="19.0" fill="rgb(250,124,124)" rx="2" ry="2" />
<text  x="1158.40" y="198.5" ></text>
</g>
<g >
<title>libc.so.6|memcmp-sse4.S:278[r] (33,188 samples, 0.04%)</title><rect x="917.7" y="106" width="0.5" height="19.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="920.75" y="118.5" ></text>
</g>
<g >
<title>memcached|items.c:434 (7) (32,387 samples, 0.04%)</title><rect x="671.7" y="166" width="0.4" height="19.0" fill="rgb(199,99,0)" rx="2" ry="2" />
<text  x="674.69" y="178.5" ></text>
</g>
<g >
<title>libc.so.6|pthread_mutex_trylock.c:33[r] (46,345 samples, 0.05%)</title><rect x="40.5" y="286" width="0.6" height="19.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="43.51" y="298.5" ></text>
</g>
<g >
<title>memcached|memcached.c:3114 (37,138,514 samples, 40.86%)</title><rect x="674.9" y="286" width="482.1" height="19.0" fill="rgb(195,95,0)" rx="2" ry="2" />
<text  x="677.91" y="298.5" >memcached|memcached.c:3114</text>
</g>
<g >
<title>memcached|assoc.c:85 (1) (152,402 samples, 0.17%)</title><rect x="916.2" y="126" width="2.0" height="19.0" fill="rgb(215,115,0)" rx="2" ry="2" />
<text  x="919.20" y="138.5" ></text>
</g>
<g >
<title>memcached|memcached.c:412 (66,623 samples, 0.07%)</title><rect x="674.0" y="266" width="0.9" height="19.0" fill="rgb(239,139,0)" rx="2" ry="2" />
<text  x="677.03" y="278.5" ></text>
</g>
<g >
<title>memcached|items.c:463 (1)[w] (3,459,236 samples, 3.81%)</title><rect x="42.1" y="306" width="44.9" height="19.0" fill="rgb(228,90,90)" rx="2" ry="2" />
<text  x="45.09" y="318.5" >mem..</text>
</g>
<g >
<title>memcached|items.c:1104[r] (32,310 samples, 0.04%)</title><rect x="39.7" y="326" width="0.4" height="19.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="42.69" y="338.5" ></text>
</g>
<g >
<title>libc.so.6|memcmp-sse4.S:271[r] (97,914 samples, 0.11%)</title><rect x="395.0" y="146" width="1.2" height="19.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="397.97" y="158.5" ></text>
</g>
<g >
<title>memcached|memcached.c:1571 (35,349,577 samples, 38.89%)</title><rect x="154.3" y="206" width="458.9" height="19.0" fill="rgb(252,152,0)" rx="2" ry="2" />
<text  x="157.32" y="218.5" >memcached|memcached.c:1571</text>
</g>
<g >
<title>libc.so.6|pthread_mutex_lock.c:48[w] (146,188 samples, 0.16%)</title><rect x="677.0" y="146" width="1.9" height="19.0" fill="rgb(250,123,123)" rx="2" ry="2" />
<text  x="680.01" y="158.5" ></text>
</g>
<g >
<title>libevent-2.1.so.7.0.1|0x7ffff55503a4[p] (9,208 samples, 0.01%)</title><rect x="147.1" y="286" width="0.1" height="19.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="150.08" y="298.5" ></text>
</g>
<g >
<title>memcached|items.c:1119[p] (35,761 samples, 0.04%)</title><rect x="41.6" y="326" width="0.5" height="19.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="44.62" y="338.5" ></text>
</g>
<g >
<title>memcached|proto_text.c:2726 (15,072 samples, 0.02%)</title><rect x="674.9" y="246" width="0.2" height="19.0" fill="rgb(251,151,0)" rx="2" ry="2" />
<text  x="677.91" y="258.5" ></text>
</g>
<g >
<title>memcached|slabs.c:668 (12,599 samples, 0.01%)</title><rect x="672.4" y="186" width="0.1" height="19.0" fill="rgb(236,136,0)" rx="2" ry="2" />
<text  x="675.37" y="198.5" ></text>
</g>
<g >
<title>memcached|items.c:1009[r] (32,551 samples, 0.04%)</title><rect x="154.3" y="186" width="0.4" height="19.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="157.32" y="198.5" ></text>
</g>
<g >
<title>libevent-2.1.so.7.0.1|0x7ffff5554a10[r] (8,148 samples, 0.01%)</title><rect x="147.0" y="306" width="0.1" height="19.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="149.96" y="318.5" ></text>
</g>
<g >
<title>memcached|thread.c:910 (39,934,380 samples, 43.93%)</title><rect x="154.3" y="246" width="518.4" height="19.0" fill="rgb(212,112,0)" rx="2" ry="2" />
<text  x="157.32" y="258.5" >memcached|thread.c:910</text>
</g>
<g >
<title>libevent-2.1.so.7.0.1|0x7ffff555f138 (149,377 samples, 0.16%)</title><rect x="145.0" y="306" width="2.0" height="19.0" fill="rgb(194,94,0)" rx="2" ry="2" />
<text  x="148.02" y="318.5" ></text>
</g>
<g >
<title>memcached|memcached.c:1709 (4)[w] (19,917 samples, 0.02%)</title><rect x="672.1" y="206" width="0.3" height="19.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="675.11" y="218.5" ></text>
</g>
</g>
</svg>
