<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="900" height="610" onload="init(evt)" viewBox="0 0 900 610" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#ffffff" offset="5%" />
		<stop stop-color="#ffffff" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:20px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:25px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 20 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="900.0" height="610.0" fill="url(#background)"  />
<text id="title" x="450.00" y="40" >Flame Graph</text>
<text id="details" x="10.00" y="585" > </text>
<text id="unzoom" x="10.00" y="40" class="hide">Reset Zoom</text>
<text id="search" x="790.00" y="40" >Search</text>
<text id="ignorecase" x="874.00" y="40" >ic</text>
<text id="matched" x="790.00" y="585" > </text>
<g id="frames">
<g >
<title>items.c:548 (92,971 samples, 0.10%)</title><rect x="108.1" y="411" width="0.9" height="24.0" fill="rgb(170,170,170)" rx="2" ry="2" />
<text  x="111.07" y="426" ></text>
</g>
<g >
<title>pthread_mutex_lock.c:93 (15,039 samples, 0.02%)</title><rect x="508.8" y="86" width="0.2" height="24.0" fill="rgb(170,170,170)" rx="2" ry="2" />
<text  x="511.83" y="101" ></text>
</g>
<g >
<title>proto_text.c:2789 (273,806 samples, 0.30%)</title><rect x="862.8" y="311" width="2.7" height="24.0" fill="rgb(201,201,201)" rx="2" ry="2" />
<text  x="865.81" y="326" ></text>
</g>
<g >
<title>pthread_mutex_unlock.c:368 (26,382 samples, 0.03%)</title><rect x="862.2" y="211" width="0.3" height="24.0" fill="rgb(202,202,202)" rx="2" ry="2" />
<text  x="865.25" y="226" ></text>
</g>
<g >
<title>items.c:1032[r] (21,983 samples, 0.02%)</title><rect x="117.8" y="236" width="0.2" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="120.83" y="251" ></text>
</g>
<g >
<title>items.c:1172 (3,325,773 samples, 3.65%)</title><rect x="68.9" y="386" width="32.1" height="24.0" fill="rgb(171,171,171)" rx="2" ry="2" />
<text  x="71.89" y="401" ></text>
</g>
<g >
<title>slabs.c:397 (125,269 samples, 0.14%)</title><rect x="862.9" y="136" width="1.2" height="24.0" fill="rgb(202,202,202)" rx="2" ry="2" />
<text  x="865.87" y="151" ></text>
</g>
<g >
<title>pthread_mutex_lock.c:80[r] (17,863 samples, 0.02%)</title><rect x="889.5" y="311" width="0.2" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="892.48" y="326" ></text>
</g>
<g >
<title>proto_text.c:633 (15,149 samples, 0.02%)</title><rect x="862.6" y="286" width="0.1" height="24.0" fill="rgb(208,208,208)" rx="2" ry="2" />
<text  x="865.58" y="301" ></text>
</g>
<g >
<title>bipbuffer.c:25[r] (18,595 samples, 0.02%)</title><rect x="509.0" y="61" width="0.2" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="511.97" y="76" ></text>
</g>
<g >
<title>memmove-vec-unaligned-erms.S:324[w] (30,215 samples, 0.03%)</title><rect x="865.2" y="236" width="0.3" height="24.0" fill="rgb(252,126,126)" rx="2" ry="2" />
<text  x="868.16" y="251" ></text>
</g>
<g >
<title>memcached.c:3114 (37,264,113 samples, 40.90%)</title><rect x="505.5" y="361" width="360.0" height="24.0" fill="rgb(173,173,173)" rx="2" ry="2" />
<text  x="508.54" y="376" >memcached.c:3114</text>
</g>
<g >
<title>items.c:554[r] (48,585 samples, 0.05%)</title><rect x="108.1" y="386" width="0.4" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="111.07" y="401" ></text>
</g>
<g >
<title>slabs.c:406 (151,023 samples, 0.17%)</title><rect x="862.8" y="186" width="1.5" height="24.0" fill="rgb(179,179,179)" rx="2" ry="2" />
<text  x="865.81" y="201" ></text>
</g>
<g >
<title>items.c:584 (4,504,575 samples, 4.94%)</title><rect x="459.6" y="236" width="43.6" height="24.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="462.64" y="251" >i..</text>
</g>
<g >
<title>items.c:1087 (4,051,013 samples, 4.45%)</title><rect x="67.3" y="411" width="39.2" height="24.0" fill="rgb(172,172,172)" rx="2" ry="2" />
<text  x="70.33" y="426" >i..</text>
</g>
<g >
<title>assoc.c:179[p] (4,411,783 samples, 4.84%)</title><rect x="460.5" y="161" width="42.6" height="24.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="463.54" y="176" >a..</text>
</g>
<g >
<title>items.c:1820[w] (2,112,802 samples, 2.32%)</title><rect x="10.2" y="436" width="20.4" height="24.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="13.16" y="451" ></text>
</g>
<g >
<title>items.c:1329 (45,572 samples, 0.05%)</title><rect x="107.5" y="436" width="0.5" height="24.0" fill="rgb(188,188,188)" rx="2" ry="2" />
<text  x="110.54" y="451" ></text>
</g>
<g >
<title>items.c:1104[r] (32,310 samples, 0.04%)</title><rect x="32.1" y="411" width="0.3" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="35.10" y="426" ></text>
</g>
<g >
<title>memcmp-sse4.S:271[r] (97,914 samples, 0.11%)</title><rect x="297.3" y="186" width="0.9" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="300.26" y="201" ></text>
</g>
<g >
<title>items.c:1104[r] (32,891 samples, 0.04%)</title><rect x="67.5" y="386" width="0.3" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="70.45" y="401" ></text>
</g>
<g >
<title>clone3.S:83 (91,111,363 samples, 100.00%)</title><rect x="10.0" y="511" width="880.0" height="24.0" fill="rgb(197,197,197)" rx="2" ry="2" />
<text  x="13.01" y="526" >clone3.S:83</text>
</g>
<g >
<title>0x7ffff55568a7 (80,559,614 samples, 88.42%)</title><rect x="111.9" y="411" width="778.1" height="24.0" fill="rgb(173,173,173)" rx="2" ry="2" />
<text  x="114.92" y="426" >0x7ffff55568a7</text>
</g>
<g >
<title>bipbuffer.c:144 (45,572 samples, 0.05%)</title><rect x="107.5" y="411" width="0.5" height="24.0" fill="rgb(207,207,207)" rx="2" ry="2" />
<text  x="110.54" y="426" ></text>
</g>
<g >
<title>items.c:499 (7) (32,429 samples, 0.04%)</title><rect x="503.2" y="236" width="0.3" height="24.0" fill="rgb(195,195,195)" rx="2" ry="2" />
<text  x="506.15" y="251" ></text>
</g>
<g >
<title>slab_automove.c:103 (17,788 samples, 0.02%)</title><rect x="110.2" y="436" width="0.1" height="24.0" fill="rgb(183,183,183)" rx="2" ry="2" />
<text  x="113.16" y="451" ></text>
</g>
<g >
<title>pthread_mutex_lock.c:93 (46,752 samples, 0.05%)</title><rect x="107.1" y="411" width="0.4" height="24.0" fill="rgb(178,178,178)" rx="2" ry="2" />
<text  x="110.09" y="426" ></text>
</g>
<g >
<title>items.c:1032 (3)[r] (10,836 samples, 0.01%)</title><rect x="509.2" y="186" width="0.1" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="512.22" y="201" ></text>
</g>
<g >
<title>0x7ffff5554bb9[w] (11,006 samples, 0.01%)</title><rect x="112.3" y="386" width="0.1" height="24.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="115.27" y="401" ></text>
</g>
<g >
<title>assoc.c:161[p] (32,384 samples, 0.04%)</title><rect x="503.2" y="186" width="0.3" height="24.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="506.15" y="201" ></text>
</g>
<g >
<title>pthread_mutex_trylock.c:74 (13)[w] (25,337 samples, 0.03%)</title><rect x="68.4" y="336" width="0.2" height="24.0" fill="rgb(218,77,77)" rx="2" ry="2" />
<text  x="71.35" y="351" ></text>
</g>
<g >
<title>items.c:1103[r] (11,978 samples, 0.01%)</title><rect x="67.3" y="386" width="0.2" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="70.33" y="401" ></text>
</g>
<g >
<title>slabs.c:430[w] (18,757 samples, 0.02%)</title><rect x="864.1" y="161" width="0.2" height="24.0" fill="rgb(251,125,125)" rx="2" ry="2" />
<text  x="867.09" y="176" ></text>
</g>
<g >
<title>thread.c:136 (36,623,970 samples, 40.20%)</title><rect x="508.5" y="211" width="353.7" height="24.0" fill="rgb(183,183,183)" rx="2" ry="2" />
<text  x="511.52" y="226" >thread.c:136</text>
</g>
<g >
<title>murmur3_hash.c:90[r] (30,805 samples, 0.03%)</title><rect x="32.4" y="386" width="0.3" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="35.42" y="401" ></text>
</g>
<g >
<title>pthread_mutex_lock.c:80[r] (18,905 samples, 0.02%)</title><rect x="508.6" y="86" width="0.2" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="511.65" y="101" ></text>
</g>
<g >
<title>items.c:1240 (3,459,298 samples, 3.80%)</title><rect x="33.9" y="411" width="33.4" height="24.0" fill="rgb(183,183,183)" rx="2" ry="2" />
<text  x="36.89" y="426" ></text>
</g>
<g >
<title>memcached.c:1709 (4)[w] (19,917 samples, 0.02%)</title><rect x="503.5" y="261" width="0.2" height="24.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="506.46" y="276" ></text>
</g>
<g >
<title>memcached.c:1671 (4,506,278 samples, 4.95%)</title><rect x="459.6" y="261" width="43.6" height="24.0" fill="rgb(172,172,172)" rx="2" ry="2" />
<text  x="462.63" y="276" >m..</text>
</g>
<g >
<title>proto_text.c:2726 (15,100 samples, 0.02%)</title><rect x="505.5" y="311" width="0.2" height="24.0" fill="rgb(203,203,203)" rx="2" ry="2" />
<text  x="508.54" y="326" ></text>
</g>
<g >
<title>memset-vec-unaligned-erms.S:351[w] (125,269 samples, 0.14%)</title><rect x="862.9" y="111" width="1.2" height="24.0" fill="rgb(219,77,77)" rx="2" ry="2" />
<text  x="865.87" y="126" ></text>
</g>
<g >
<title>pthread_mutex_lock.c:80[r] (51,341 samples, 0.06%)</title><rect x="106.6" y="411" width="0.5" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="109.60" y="426" ></text>
</g>
<g >
<title>all (91,112,632 samples, 100%)</title><rect x="10.0" y="536" width="880.0" height="24.0" fill="rgb(186,186,186)" rx="2" ry="2" />
<text  x="13.00" y="551" ></text>
</g>
<g >
<title>memcached.c:1171 (14,784 samples, 0.02%)</title><rect x="505.5" y="286" width="0.2" height="24.0" fill="rgb(171,171,171)" rx="2" ry="2" />
<text  x="508.55" y="301" ></text>
</g>
<g >
<title>slab_automove.c:67[r] (17,788 samples, 0.02%)</title><rect x="110.2" y="411" width="0.1" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="113.16" y="426" ></text>
</g>
<g >
<title>cache.c:136[w] (59,162 samples, 0.06%)</title><rect x="505.0" y="311" width="0.5" height="24.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="507.96" y="326" ></text>
</g>
<g >
<title>memcached.c:1709 (12,656 samples, 0.01%)</title><rect x="503.7" y="261" width="0.1" height="24.0" fill="rgb(207,207,207)" rx="2" ry="2" />
<text  x="506.66" y="276" ></text>
</g>
<g >
<title>proto_text.c:2772 (36,975,138 samples, 40.58%)</title><rect x="505.7" y="311" width="357.1" height="24.0" fill="rgb(198,198,198)" rx="2" ry="2" />
<text  x="508.69" y="326" >proto_text.c:2772</text>
</g>
<g >
<title>0x7ffff555f138 (149,377 samples, 0.16%)</title><rect x="110.5" y="386" width="1.4" height="24.0" fill="rgb(184,184,184)" rx="2" ry="2" />
<text  x="113.48" y="401" ></text>
</g>
<g >
<title>items.c:516 (4,504,454 samples, 4.94%)</title><rect x="459.6" y="211" width="43.5" height="24.0" fill="rgb(185,185,185)" rx="2" ry="2" />
<text  x="462.64" y="226" >i..</text>
</g>
<g >
<title>pthread_mutex_lock.c:48[w] (241,737 samples, 0.27%)</title><rect x="115.1" y="261" width="2.3" height="24.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="118.06" y="276" ></text>
</g>
<g >
<title>pthread_mutex_trylock.c:74 (13)[w] (25,146 samples, 0.03%)</title><rect x="31.5" y="411" width="0.3" height="24.0" fill="rgb(215,73,73)" rx="2" ry="2" />
<text  x="34.52" y="426" ></text>
</g>
<g >
<title>thread.c:811 (36,623,970 samples, 40.20%)</title><rect x="508.5" y="236" width="353.7" height="24.0" fill="rgb(186,186,186)" rx="2" ry="2" />
<text  x="511.52" y="251" >thread.c:811</text>
</g>
<g >
<title>memmove-vec-unaligned-erms.S:541[w] (435,516 samples, 0.48%)</title><rect x="869.7" y="336" width="4.2" height="24.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="872.69" y="351" ></text>
</g>
<g >
<title>thread.c:813 (26,382 samples, 0.03%)</title><rect x="862.2" y="236" width="0.3" height="24.0" fill="rgb(171,171,171)" rx="2" ry="2" />
<text  x="865.25" y="251" ></text>
</g>
<g >
<title>items.c:1116 (116,484 samples, 0.13%)</title><rect x="32.4" y="411" width="1.1" height="24.0" fill="rgb(204,204,204)" rx="2" ry="2" />
<text  x="35.42" y="426" ></text>
</g>
<g >
<title>memcached.c:3178 (1,988,995 samples, 2.18%)</title><rect x="865.5" y="361" width="19.2" height="24.0" fill="rgb(208,208,208)" rx="2" ry="2" />
<text  x="868.45" y="376" ></text>
</g>
<g >
<title>assoc.c:85 (1) (130,564 samples, 0.14%)</title><rect x="297.3" y="211" width="1.2" height="24.0" fill="rgb(204,204,204)" rx="2" ry="2" />
<text  x="300.25" y="226" ></text>
</g>
<g >
<title>assoc.c:79[r] (18,554,318 samples, 20.36%)</title><rect x="118.0" y="211" width="179.3" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="121.05" y="226" >assoc.c:79[r]</text>
</g>
<g >
<title>items.c:1660 (54,404 samples, 0.06%)</title><rect x="109.8" y="461" width="0.6" height="24.0" fill="rgb(171,171,171)" rx="2" ry="2" />
<text  x="112.83" y="476" ></text>
</g>
<g >
<title>items.c:1424 (3,661,672 samples, 4.02%)</title><rect x="32.0" y="436" width="35.3" height="24.0" fill="rgb(195,195,195)" rx="2" ry="2" />
<text  x="34.97" y="451" ></text>
</g>
<g >
<title>memcached.c:2687 (497,962 samples, 0.55%)</title><rect x="884.7" y="336" width="4.8" height="24.0" fill="rgb(187,187,187)" rx="2" ry="2" />
<text  x="887.67" y="351" ></text>
</g>
<g >
<title>proto_text.c:1969 (273,692 samples, 0.30%)</title><rect x="862.8" y="286" width="2.7" height="24.0" fill="rgb(179,179,179)" rx="2" ry="2" />
<text  x="865.81" y="301" ></text>
</g>
<g >
<title>thread.c:128 (55,117 samples, 0.06%)</title><rect x="68.1" y="361" width="0.5" height="24.0" fill="rgb(198,198,198)" rx="2" ry="2" />
<text  x="71.06" y="376" ></text>
</g>
<g >
<title>pthread_mutex_lock.c:80[r] (11,111 samples, 0.01%)</title><rect x="862.6" y="261" width="0.1" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="865.58" y="276" ></text>
</g>
<g >
<title>memcmp-sse4.S:278[r] (33,188 samples, 0.04%)</title><rect x="686.2" y="136" width="0.3" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="689.23" y="151" ></text>
</g>
<g >
<title>slabs.c:426 (131,959 samples, 0.14%)</title><rect x="862.8" y="161" width="1.3" height="24.0" fill="rgb(171,171,171)" rx="2" ry="2" />
<text  x="865.81" y="176" ></text>
</g>
<g >
<title>items.c:1431 (13,906 samples, 0.02%)</title><rect x="106.5" y="436" width="0.1" height="24.0" fill="rgb(209,209,209)" rx="2" ry="2" />
<text  x="109.46" y="451" ></text>
</g>
<g >
<title>assoc.c:85 (1)[r] (32,526 samples, 0.04%)</title><rect x="298.5" y="211" width="0.3" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="301.51" y="226" ></text>
</g>
<g >
<title>sendmsg.c:25 (497,962 samples, 0.55%)</title><rect x="884.7" y="311" width="4.8" height="24.0" fill="rgb(177,177,177)" rx="2" ry="2" />
<text  x="887.67" y="326" ></text>
</g>
<g >
<title>murmur3_hash.c:90[r] (16,887 samples, 0.02%)</title><rect x="30.8" y="436" width="0.2" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="33.83" y="451" ></text>
</g>
<g >
<title>slabs.c:498 (12,591 samples, 0.01%)</title><rect x="503.7" y="211" width="0.1" height="24.0" fill="rgb(198,198,198)" rx="2" ry="2" />
<text  x="506.66" y="226" ></text>
</g>
<g >
<title>thread.c:128 (79,100 samples, 0.09%)</title><rect x="31.0" y="436" width="0.8" height="24.0" fill="rgb(175,175,175)" rx="2" ry="2" />
<text  x="33.99" y="451" ></text>
</g>
<g >
<title>pthread_mutex_unlock.c:51[r] (38,056 samples, 0.04%)</title><rect x="503.9" y="261" width="0.4" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="506.91" y="276" ></text>
</g>
<g >
<title>thread.c:128 (85,679 samples, 0.09%)</title><rect x="32.7" y="386" width="0.8" height="24.0" fill="rgb(176,176,176)" rx="2" ry="2" />
<text  x="35.71" y="401" ></text>
</g>
<g >
<title>assoc.c:85[r] (16,648,561 samples, 18.27%)</title><rect x="298.8" y="211" width="160.8" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="301.83" y="226" >assoc.c:85[r]</text>
</g>
<g >
<title>items.c:294 (151,023 samples, 0.17%)</title><rect x="862.8" y="261" width="1.5" height="24.0" fill="rgb(175,175,175)" rx="2" ry="2" />
<text  x="865.81" y="276" ></text>
</g>
<g >
<title>memcached.c:3070 (66,624 samples, 0.07%)</title><rect x="504.9" y="361" width="0.6" height="24.0" fill="rgb(177,177,177)" rx="2" ry="2" />
<text  x="507.89" y="376" ></text>
</g>
<g >
<title>items.c:957 (36,524,900 samples, 40.09%)</title><rect x="509.5" y="186" width="352.7" height="24.0" fill="rgb(202,202,202)" rx="2" ry="2" />
<text  x="512.48" y="201" >items.c:957</text>
</g>
<g >
<title>thread.c:810 (292,885 samples, 0.32%)</title><rect x="505.7" y="236" width="2.8" height="24.0" fill="rgb(194,194,194)" rx="2" ry="2" />
<text  x="508.69" y="251" ></text>
</g>
<g >
<title>pthread_mutex_lock.c:48[w] (15,039 samples, 0.02%)</title><rect x="508.8" y="61" width="0.2" height="24.0" fill="rgb(252,126,126)" rx="2" ry="2" />
<text  x="511.83" y="76" ></text>
</g>
<g >
<title>items.c:189 (151,023 samples, 0.17%)</title><rect x="862.8" y="236" width="1.5" height="24.0" fill="rgb(209,209,209)" rx="2" ry="2" />
<text  x="865.81" y="251" ></text>
</g>
<g >
<title>items.c:1041 (60,442 samples, 0.07%)</title><rect x="508.6" y="161" width="0.6" height="24.0" fill="rgb(178,178,178)" rx="2" ry="2" />
<text  x="511.64" y="176" ></text>
</g>
<g >
<title>thread.c:521 (80,721,194 samples, 88.59%)</title><rect x="110.4" y="461" width="779.6" height="24.0" fill="rgb(208,208,208)" rx="2" ry="2" />
<text  x="113.36" y="476" >thread.c:521</text>
</g>
<g >
<title>pthread_mutex_lock.c:80[r] (252,365 samples, 0.28%)</title><rect x="112.6" y="286" width="2.5" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="115.63" y="301" ></text>
</g>
<g >
<title>memmove-vec-unaligned-erms.S:323[w] (92,395 samples, 0.10%)</title><rect x="864.3" y="236" width="0.9" height="24.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="867.27" y="251" ></text>
</g>
<g >
<title>0x7ffff5554f58 (80,507,143 samples, 88.36%)</title><rect x="112.4" y="386" width="777.6" height="24.0" fill="rgb(183,183,183)" rx="2" ry="2" />
<text  x="115.43" y="401" >0x7ffff5554f58</text>
</g>
<g >
<title>items.c:1009[r] (32,551 samples, 0.04%)</title><rect x="117.4" y="236" width="0.3" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="120.40" y="251" ></text>
</g>
<g >
<title>proto_text.c:207 (40,557,540 samples, 44.51%)</title><rect x="112.6" y="336" width="391.7" height="24.0" fill="rgb(191,191,191)" rx="2" ry="2" />
<text  x="115.62" y="351" >proto_text.c:207</text>
</g>
<g >
<title>items.c:327 (122,667 samples, 0.13%)</title><rect x="864.3" y="261" width="1.2" height="24.0" fill="rgb(206,206,206)" rx="2" ry="2" />
<text  x="867.27" y="276" ></text>
</g>
<g >
<title>pthread_mutex_trylock.c:33[r] (53,903 samples, 0.06%)</title><rect x="31.0" y="411" width="0.5" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="33.99" y="426" ></text>
</g>
<g >
<title>pthread_mutex_trylock.c:74 (13)[w] (39,256 samples, 0.04%)</title><rect x="33.2" y="361" width="0.3" height="24.0" fill="rgb(229,92,92)" rx="2" ry="2" />
<text  x="36.16" y="376" ></text>
</g>
<g >
<title>items.c:1240 (560,354 samples, 0.62%)</title><rect x="101.0" y="386" width="5.4" height="24.0" fill="rgb(188,188,188)" rx="2" ry="2" />
<text  x="104.04" y="401" ></text>
</g>
<g >
<title>memcmp-sse4.S:278[r] (31,918 samples, 0.04%)</title><rect x="298.2" y="186" width="0.3" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="301.20" y="201" ></text>
</g>
<g >
<title>0x7ffff5555ffa[r] (68,026 samples, 0.07%)</title><rect x="110.5" y="361" width="0.6" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="113.48" y="376" ></text>
</g>
<g >
<title>0x7ffff555600b[r] (66,677 samples, 0.07%)</title><rect x="111.1" y="361" width="0.7" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="114.13" y="376" ></text>
</g>
<g >
<title>memcached.c:2690 (47,093 samples, 0.05%)</title><rect x="889.5" y="336" width="0.4" height="24.0" fill="rgb(207,207,207)" rx="2" ry="2" />
<text  x="892.48" y="351" ></text>
</g>
<g >
<title>items.c:1642 (248,698 samples, 0.27%)</title><rect x="106.6" y="461" width="2.4" height="24.0" fill="rgb(181,181,181)" rx="2" ry="2" />
<text  x="109.60" y="476" ></text>
</g>
<g >
<title>slabs.c:661 (151,023 samples, 0.17%)</title><rect x="862.8" y="211" width="1.5" height="24.0" fill="rgb(175,175,175)" rx="2" ry="2" />
<text  x="865.81" y="226" ></text>
</g>
<g >
<title>0x7ffff5554a3c (21,002 samples, 0.02%)</title><rect x="112.0" y="386" width="0.2" height="24.0" fill="rgb(184,184,184)" rx="2" ry="2" />
<text  x="115.00" y="401" ></text>
</g>
<g >
<title>items.c:1648 (86,355 samples, 0.09%)</title><rect x="109.0" y="461" width="0.8" height="24.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="112.00" y="476" ></text>
</g>
<g >
<title>memmove-vec-unaligned-erms.S:548[w] (176,261 samples, 0.19%)</title><rect x="882.0" y="336" width="1.7" height="24.0" fill="rgb(238,105,105)" rx="2" ry="2" />
<text  x="885.04" y="351" ></text>
</g>
<g >
<title>proto_text.c:213 (57,051 samples, 0.06%)</title><rect x="504.3" y="336" width="0.6" height="24.0" fill="rgb(203,203,203)" rx="2" ry="2" />
<text  x="507.34" y="351" ></text>
</g>
<g >
<title>items.c:463 (1)[w] (560,348 samples, 0.62%)</title><rect x="101.0" y="361" width="5.4" height="24.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="104.04" y="376" ></text>
</g>
<g >
<title>pthread_mutex_unlock.c:368 (45,051 samples, 0.05%)</title><rect x="503.9" y="286" width="0.4" height="24.0" fill="rgb(198,198,198)" rx="2" ry="2" />
<text  x="506.91" y="301" ></text>
</g>
<g >
<title>crawler.c:457 (95,987 samples, 0.11%)</title><rect x="30.8" y="461" width="1.0" height="24.0" fill="rgb(181,181,181)" rx="2" ry="2" />
<text  x="33.83" y="476" ></text>
</g>
<g >
<title>memmove-vec-unaligned-erms.S:605[w] (12,694 samples, 0.01%)</title><rect x="884.5" y="336" width="0.2" height="24.0" fill="rgb(206,59,59)" rx="2" ry="2" />
<text  x="887.54" y="351" ></text>
</g>
<g >
<title>memcached.c:412 (66,623 samples, 0.07%)</title><rect x="504.9" y="336" width="0.6" height="24.0" fill="rgb(193,193,193)" rx="2" ry="2" />
<text  x="507.89" y="351" ></text>
</g>
<g >
<title>thread.c:136 (40,017,915 samples, 43.92%)</title><rect x="117.4" y="286" width="386.5" height="24.0" fill="rgb(173,173,173)" rx="2" ry="2" />
<text  x="120.40" y="301" >thread.c:136</text>
</g>
<g >
<title>items.c:1119[p] (35,761 samples, 0.04%)</title><rect x="33.5" y="411" width="0.4" height="24.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="36.54" y="426" ></text>
</g>
<g >
<title>assoc.c:85[r] (18,155,614 samples, 19.93%)</title><rect x="686.9" y="161" width="175.3" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="689.89" y="176" >assoc.c:85[r]</text>
</g>
<g >
<title>items.c:957 (35,366,086 samples, 38.82%)</title><rect x="118.0" y="236" width="341.6" height="24.0" fill="rgb(197,197,197)" rx="2" ry="2" />
<text  x="121.05" y="251" >items.c:957</text>
</g>
<g >
<title>items.c:1465[r] (86,124 samples, 0.09%)</title><rect x="109.0" y="436" width="0.8" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="112.00" y="451" ></text>
</g>
<g >
<title>string_fortified.h:59[w] (14,784 samples, 0.02%)</title><rect x="505.5" y="261" width="0.2" height="24.0" fill="rgb(245,115,115)" rx="2" ry="2" />
<text  x="508.55" y="276" ></text>
</g>
<g >
<title>pthread_mutex_trylock.c:33[r] (29,741 samples, 0.03%)</title><rect x="68.1" y="336" width="0.3" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="71.06" y="351" ></text>
</g>
<g >
<title>pthread_mutex_lock.c:93 (241,738 samples, 0.27%)</title><rect x="115.1" y="286" width="2.3" height="24.0" fill="rgb(189,189,189)" rx="2" ry="2" />
<text  x="118.06" y="301" ></text>
</g>
<g >
<title>slab_automove.c:100 (33,646 samples, 0.04%)</title><rect x="109.8" y="436" width="0.4" height="24.0" fill="rgb(191,191,191)" rx="2" ry="2" />
<text  x="112.83" y="451" ></text>
</g>
<g >
<title>assoc.c:85 (1)[r] (35,553 samples, 0.04%)</title><rect x="686.5" y="161" width="0.4" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="689.55" y="176" ></text>
</g>
<g >
<title>items.c:1621 (7,726,976 samples, 8.48%)</title><rect x="32.0" y="461" width="74.6" height="24.0" fill="rgb(201,201,201)" rx="2" ry="2" />
<text  x="34.97" y="476" >item..</text>
</g>
<g >
<title>items.c:1032[r] (15,299 samples, 0.02%)</title><rect x="509.3" y="186" width="0.2" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="512.33" y="201" ></text>
</g>
<g >
<title>items.c:1009[r] (12,488 samples, 0.01%)</title><rect x="508.5" y="186" width="0.1" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="511.52" y="201" ></text>
</g>
<g >
<title>bipbuffer.c:65[r] (45,572 samples, 0.05%)</title><rect x="107.5" y="386" width="0.5" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="110.54" y="401" ></text>
</g>
<g >
<title>string_fortified.h:59[w] (33,646 samples, 0.04%)</title><rect x="109.8" y="411" width="0.4" height="24.0" fill="rgb(229,92,92)" rx="2" ry="2" />
<text  x="112.83" y="426" ></text>
</g>
<g >
<title>assoc.c:178[p] (60,274 samples, 0.07%)</title><rect x="460.0" y="161" width="0.5" height="24.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="462.96" y="176" ></text>
</g>
<g >
<title>items.c:1032 (3)[r] (12,492 samples, 0.01%)</title><rect x="117.7" y="236" width="0.1" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="120.71" y="251" ></text>
</g>
<g >
<title>memcached.c:1242 (57,046 samples, 0.06%)</title><rect x="504.3" y="311" width="0.6" height="24.0" fill="rgb(197,197,197)" rx="2" ry="2" />
<text  x="507.34" y="326" ></text>
</g>
<g >
<title>pthread_mutex_lock.c:80[r] (146,376 samples, 0.16%)</title><rect x="505.7" y="211" width="1.4" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="508.69" y="226" ></text>
</g>
<g >
<title>items.c:1295 (18,595 samples, 0.02%)</title><rect x="509.0" y="111" width="0.2" height="24.0" fill="rgb(191,191,191)" rx="2" ry="2" />
<text  x="511.97" y="126" ></text>
</g>
<g >
<title>items.c:1119[p] (30,558 samples, 0.03%)</title><rect x="68.6" y="386" width="0.3" height="24.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="71.60" y="401" ></text>
</g>
<g >
<title>pthread_mutex_lock.c:48[w] (146,188 samples, 0.16%)</title><rect x="507.1" y="186" width="1.4" height="24.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="510.11" y="201" ></text>
</g>
<g >
<title>items.c:556[w] (41,134 samples, 0.05%)</title><rect x="108.5" y="386" width="0.4" height="24.0" fill="rgb(253,127,127)" rx="2" ry="2" />
<text  x="111.54" y="401" ></text>
</g>
<g >
<title>thread.c:912 (45,051 samples, 0.05%)</title><rect x="503.9" y="311" width="0.4" height="24.0" fill="rgb(177,177,177)" rx="2" ry="2" />
<text  x="506.91" y="326" ></text>
</g>
<g >
<title>items.c:1340 (93,395 samples, 0.10%)</title><rect x="108.1" y="436" width="0.9" height="24.0" fill="rgb(189,189,189)" rx="2" ry="2" />
<text  x="111.06" y="451" ></text>
</g>
<g >
<title>thread.c:146 (80,721,194 samples, 88.59%)</title><rect x="110.4" y="436" width="779.6" height="24.0" fill="rgb(177,177,177)" rx="2" ry="2" />
<text  x="113.36" y="451" >thread.c:146</text>
</g>
<g >
<title>items.c:434 (7) (32,387 samples, 0.04%)</title><rect x="503.2" y="211" width="0.3" height="24.0" fill="rgb(204,204,204)" rx="2" ry="2" />
<text  x="506.15" y="226" ></text>
</g>
<g >
<title>pthread_mutex_lock.c:48[w] (29,197 samples, 0.03%)</title><rect x="889.7" y="286" width="0.2" height="24.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="892.66" y="301" ></text>
</g>
<g >
<title>items.c:1294 (33,944 samples, 0.04%)</title><rect x="508.6" y="111" width="0.4" height="24.0" fill="rgb(194,194,194)" rx="2" ry="2" />
<text  x="511.65" y="126" ></text>
</g>
<g >
<title>memcached.c:2960 (40,634,746 samples, 44.60%)</title><rect x="112.4" y="361" width="392.5" height="24.0" fill="rgb(198,198,198)" rx="2" ry="2" />
<text  x="115.43" y="376" >memcached.c:2960</text>
</g>
<g >
<title>bipbuffer.c:79 (18,595 samples, 0.02%)</title><rect x="509.0" y="86" width="0.2" height="24.0" fill="rgb(198,198,198)" rx="2" ry="2" />
<text  x="511.97" y="101" ></text>
</g>
<g >
<title>proto_text.c:137[w] (18,929 samples, 0.02%)</title><rect x="112.4" y="336" width="0.2" height="24.0" fill="rgb(210,64,64)" rx="2" ry="2" />
<text  x="115.44" y="351" ></text>
</g>
<g >
<title>memcached.c:2174 (36,943,237 samples, 40.55%)</title><rect x="505.7" y="261" width="356.8" height="24.0" fill="rgb(187,187,187)" rx="2" ry="2" />
<text  x="508.69" y="276" >memcached.c:2174</text>
</g>
<g >
<title>0x7ffff55565d1 (161,330 samples, 0.18%)</title><rect x="110.4" y="411" width="1.5" height="24.0" fill="rgb(181,181,181)" rx="2" ry="2" />
<text  x="113.36" y="426" ></text>
</g>
<g >
<title>memmove-vec-unaligned-erms.S:592[w] (82,438 samples, 0.09%)</title><rect x="883.7" y="336" width="0.8" height="24.0" fill="rgb(225,87,87)" rx="2" ry="2" />
<text  x="886.75" y="351" ></text>
</g>
<g >
<title>thread.c:910 (40,017,915 samples, 43.92%)</title><rect x="117.4" y="311" width="386.5" height="24.0" fill="rgb(184,184,184)" rx="2" ry="2" />
<text  x="120.40" y="326" >thread.c:910</text>
</g>
<g >
<title>slabs.c:668 (12,599 samples, 0.01%)</title><rect x="503.7" y="236" width="0.1" height="24.0" fill="rgb(190,190,190)" rx="2" ry="2" />
<text  x="506.66" y="251" ></text>
</g>
<g >
<title>items.c:1023 (60,446 samples, 0.07%)</title><rect x="508.6" y="186" width="0.6" height="24.0" fill="rgb(184,184,184)" rx="2" ry="2" />
<text  x="511.64" y="201" ></text>
</g>
<g >
<title>pthread_create.c:442 (91,111,138 samples, 100.00%)</title><rect x="10.0" y="486" width="880.0" height="24.0" fill="rgb(191,191,191)" rx="2" ry="2" />
<text  x="13.01" y="501" >pthread_create.c:442</text>
</g>
<g >
<title>sendmsg.c:28[r] (497,962 samples, 0.55%)</title><rect x="884.7" y="286" width="4.8" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="887.67" y="301" ></text>
</g>
<g >
<title>memmove-vec-unaligned-erms.S:540[w] (437,213 samples, 0.48%)</title><rect x="865.5" y="336" width="4.2" height="24.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="868.46" y="351" ></text>
</g>
<g >
<title>memmove-vec-unaligned-erms.S:543[w] (421,700 samples, 0.46%)</title><rect x="878.0" y="336" width="4.0" height="24.0" fill="rgb(250,123,123)" rx="2" ry="2" />
<text  x="880.97" y="351" ></text>
</g>
<g >
<title>memcmp-sse4.S:271[r] (101,129 samples, 0.11%)</title><rect x="685.3" y="136" width="0.9" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="688.25" y="151" ></text>
</g>
<g >
<title>pthread_mutex_lock.c:93 (29,197 samples, 0.03%)</title><rect x="889.7" y="311" width="0.2" height="24.0" fill="rgb(185,185,185)" rx="2" ry="2" />
<text  x="892.66" y="326" ></text>
</g>
<g >
<title>crawler.c:453[r] (27,416 samples, 0.03%)</title><rect x="30.6" y="461" width="0.2" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="33.57" y="476" ></text>
</g>
<g >
<title>memcached.c:1708 (32,444 samples, 0.04%)</title><rect x="503.2" y="261" width="0.3" height="24.0" fill="rgb(174,174,174)" rx="2" ry="2" />
<text  x="506.15" y="276" ></text>
</g>
<g >
<title>items.c:1116 (85,812 samples, 0.09%)</title><rect x="67.8" y="386" width="0.8" height="24.0" fill="rgb(187,187,187)" rx="2" ry="2" />
<text  x="70.77" y="401" ></text>
</g>
<g >
<title>memmove-vec-unaligned-erms.S:542[w] (422,205 samples, 0.46%)</title><rect x="873.9" y="336" width="4.1" height="24.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="876.89" y="351" ></text>
</g>
<g >
<title>assoc.c:79[r] (18,181,187 samples, 19.95%)</title><rect x="509.5" y="161" width="175.6" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="512.48" y="176" >assoc.c:79[r]</text>
</g>
<g >
<title>items.c:1425 (4,051,013 samples, 4.45%)</title><rect x="67.3" y="436" width="39.2" height="24.0" fill="rgb(196,196,196)" rx="2" ry="2" />
<text  x="70.33" y="451" >i..</text>
</g>
<g >
<title>murmur3_hash.c:90[r] (30,695 samples, 0.03%)</title><rect x="67.8" y="361" width="0.3" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="70.77" y="376" ></text>
</g>
<g >
<title>items.c:1103[r] (13,982 samples, 0.02%)</title><rect x="32.0" y="411" width="0.1" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="34.97" y="426" ></text>
</g>
<g >
<title>assoc.c:85 (1) (152,402 samples, 0.17%)</title><rect x="685.1" y="161" width="1.4" height="24.0" fill="rgb(181,181,181)" rx="2" ry="2" />
<text  x="688.08" y="176" ></text>
</g>
<g >
<title>crawler.c:462[p] (12,098 samples, 0.01%)</title><rect x="31.8" y="461" width="0.1" height="24.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="34.76" y="476" ></text>
</g>
<g >
<title>memcached.c:1012[r] (47,366 samples, 0.05%)</title><rect x="504.3" y="286" width="0.5" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="507.34" y="301" ></text>
</g>
<g >
<title>memcmp-sse4.S:270[r] (18,034 samples, 0.02%)</title><rect x="685.1" y="136" width="0.2" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="688.08" y="151" ></text>
</g>
<g >
<title>items.c:463 (1)[w] (3,459,236 samples, 3.80%)</title><rect x="33.9" y="386" width="33.4" height="24.0" fill="rgb(212,67,67)" rx="2" ry="2" />
<text  x="36.89" y="401" ></text>
</g>
<g >
<title>items.c:1328 (98,093 samples, 0.11%)</title><rect x="106.6" y="436" width="0.9" height="24.0" fill="rgb(209,209,209)" rx="2" ry="2" />
<text  x="109.60" y="451" ></text>
</g>
<g >
<title>pthread_mutex_trylock.c:33[r] (46,345 samples, 0.05%)</title><rect x="32.7" y="361" width="0.5" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="35.71" y="376" ></text>
</g>
<g >
<title>proto_text.c:487 (37,264,093 samples, 40.90%)</title><rect x="505.5" y="336" width="360.0" height="24.0" fill="rgb(170,170,170)" rx="2" ry="2" />
<text  x="508.54" y="351" >proto_text.c:487</text>
</g>
<g >
<title>pthread_mutex_unlock.c:51[r] (22,038 samples, 0.02%)</title><rect x="862.2" y="186" width="0.3" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="865.25" y="201" ></text>
</g>
<g >
<title>pthread_mutex_lock.c:93 (146,188 samples, 0.16%)</title><rect x="507.1" y="211" width="1.4" height="24.0" fill="rgb(207,207,207)" rx="2" ry="2" />
<text  x="510.11" y="226" ></text>
</g>
<g >
<title>thread.c:909 (494,570 samples, 0.54%)</title><rect x="112.6" y="311" width="4.8" height="24.0" fill="rgb(190,190,190)" rx="2" ry="2" />
<text  x="115.62" y="326" ></text>
</g>
<g >
<title>proto_text.c:573 (36,943,237 samples, 40.55%)</title><rect x="505.7" y="286" width="356.8" height="24.0" fill="rgb(205,205,205)" rx="2" ry="2" />
<text  x="508.69" y="301" >proto_text.c:573</text>
</g>
<g >
<title>pthread_mutex_lock.c:48[w] (46,752 samples, 0.05%)</title><rect x="107.1" y="386" width="0.4" height="24.0" fill="rgb(244,115,115)" rx="2" ry="2" />
<text  x="110.09" y="401" ></text>
</g>
<g >
<title>assoc.c:177[r] (32,208 samples, 0.04%)</title><rect x="459.6" y="161" width="0.4" height="24.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="462.65" y="176" ></text>
</g>
<g >
<title>crawler.c:445 (2,128,060 samples, 2.34%)</title><rect x="10.0" y="461" width="20.6" height="24.0" fill="rgb(186,186,186)" rx="2" ry="2" />
<text  x="13.01" y="476" ></text>
</g>
<g >
<title>items.c:479 (4,504,454 samples, 4.94%)</title><rect x="459.6" y="186" width="43.5" height="24.0" fill="rgb(189,189,189)" rx="2" ry="2" />
<text  x="462.64" y="201" >i..</text>
</g>
<g >
<title>items.c:463 (1)[w] (3,325,696 samples, 3.65%)</title><rect x="68.9" y="361" width="32.1" height="24.0" fill="rgb(248,121,121)" rx="2" ry="2" />
<text  x="71.89" y="376" ></text>
</g>
<g >
<title>memcached.c:1571 (35,433,112 samples, 38.89%)</title><rect x="117.4" y="261" width="342.2" height="24.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="120.40" y="276" >memcached.c:1571</text>
</g>
<g >
<title>items.c:1056 (59,320 samples, 0.07%)</title><rect x="508.6" y="136" width="0.6" height="24.0" fill="rgb(196,196,196)" rx="2" ry="2" />
<text  x="511.65" y="151" ></text>
</g>
<g >
<title>memcached.c:3316 (1) (551,025 samples, 0.60%)</title><rect x="884.7" y="361" width="5.3" height="24.0" fill="rgb(191,191,191)" rx="2" ry="2" />
<text  x="887.67" y="376" ></text>
</g>
</g>
</svg>
