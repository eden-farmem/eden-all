<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1600" height="278" onload="init(evt)" viewBox="0 0 1600 278" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1600.0" height="278.0" fill="url(#background)"  />
<text id="title" x="800.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="261" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1490.00" y="24" >Search</text>
<text id="ignorecase" x="1574.00" y="24" >ic</text>
<text id="matched" x="1490.00" y="261" > </text>
<g id="frames">
<g >
<title>DataFrame_misc.tcc:691 (26,451 samples, 0.07%)</title><rect x="1129.1" y="165" width="1.1" height="15.0" fill="rgb(238,138,0)" rx="2" ry="2" />
<text  x="1132.11" y="175.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:432 (247,686 samples, 0.65%)</title><rect x="1258.6" y="149" width="10.3" height="15.0" fill="rgb(214,114,0)" rx="2" ry="2" />
<text  x="1261.56" y="159.5" ></text>
</g>
<g >
<title>main.cc:274 (237,249 samples, 0.62%)</title><rect x="1306.8" y="197" width="9.9" height="15.0" fill="rgb(218,118,0)" rx="2" ry="2" />
<text  x="1309.83" y="207.5" ></text>
</g>
<g >
<title>HeteroVector.h:233 (3,998 samples, 0.01%)</title><rect x="1429.6" y="165" width="0.2" height="15.0" fill="rgb(196,96,0)" rx="2" ry="2" />
<text  x="1432.61" y="175.5" ></text>
</g>
<g >
<title>DataFrame_get.tcc:1088[r] (105,428 samples, 0.28%)</title><rect x="262.1" y="181" width="4.4" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="265.09" y="191.5" ></text>
</g>
<g >
<title>main.cc:269 (421,712 samples, 1.11%)</title><rect x="1289.3" y="197" width="17.5" height="15.0" fill="rgb(190,90,0)" rx="2" ry="2" />
<text  x="1292.28" y="207.5" ></text>
</g>
<g >
<title>DataFrame_get.tcc:1088[r] (26,358 samples, 0.07%)</title><rect x="556.8" y="181" width="1.1" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="559.78" y="191.5" ></text>
</g>
<g >
<title>HeteroVector.cc:51 (237,220 samples, 0.62%)</title><rect x="1334.3" y="133" width="9.8" height="15.0" fill="rgb(249,149,0)" rx="2" ry="2" />
<text  x="1337.26" y="143.5" ></text>
</g>
<g >
<title>main.cc:322 (3,849,741 samples, 10.14%)</title><rect x="1429.8" y="213" width="160.2" height="15.0" fill="rgb(217,117,0)" rx="2" ry="2" />
<text  x="1432.78" y="223.5" >main.cc:322</text>
</g>
<g >
<title>DataFrameStatsVisitors.h:267 (210,856 samples, 0.56%)</title><rect x="1258.6" y="101" width="8.7" height="15.0" fill="rgb(228,128,0)" rx="2" ry="2" />
<text  x="1261.56" y="111.5" ></text>
</g>
<g >
<title>main.cc:260 (384,866 samples, 1.01%)</title><rect x="1272.2" y="197" width="16.0" height="15.0" fill="rgb(190,90,0)" rx="2" ry="2" />
<text  x="1275.17" y="207.5" ></text>
</g>
<g >
<title>main.cc:62 (22,197 samples, 0.06%)</title><rect x="10.0" y="181" width="0.9" height="15.0" fill="rgb(212,112,0)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>HeteroVector.cc:59 (237,218 samples, 0.62%)</title><rect x="1334.3" y="117" width="9.8" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="1337.26" y="127.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:84 (421,729 samples, 1.11%)</title><rect x="1524.1" y="69" width="17.6" height="15.0" fill="rgb(223,123,0)" rx="2" ry="2" />
<text  x="1527.12" y="79.5" ></text>
</g>
<g >
<title>DataFrame_get.tcc:1104 (420,266 samples, 1.11%)</title><rect x="571.0" y="181" width="17.5" height="15.0" fill="rgb(249,149,0)" rx="2" ry="2" />
<text  x="573.98" y="191.5" ></text>
</g>
<g >
<title>DataFrame_set.tcc:162 (237,242 samples, 0.62%)</title><rect x="1467.1" y="181" width="9.8" height="15.0" fill="rgb(216,116,0)" rx="2" ry="2" />
<text  x="1470.07" y="191.5" ></text>
</g>
<g >
<title>DataFrame.tcc:1169 (189,122 samples, 0.50%)</title><rect x="1569.1" y="181" width="7.9" height="15.0" fill="rgb(233,133,0)" rx="2" ry="2" />
<text  x="1572.10" y="191.5" ></text>
</g>
<g >
<title>DataFrame_get.tcc:238 (247,686 samples, 0.65%)</title><rect x="1258.6" y="117" width="10.3" height="15.0" fill="rgb(231,131,0)" rx="2" ry="2" />
<text  x="1261.56" y="127.5" ></text>
</g>
<g >
<title>DataFrame.tcc:1211 (21,447 samples, 0.06%)</title><rect x="1589.1" y="181" width="0.9" height="15.0" fill="rgb(203,103,0)" rx="2" ry="2" />
<text  x="1592.11" y="191.5" ></text>
</g>
<g >
<title>DataFrame_standalone.tcc:48 (210,858 samples, 0.56%)</title><rect x="1514.2" y="37" width="8.8" height="15.0" fill="rgb(216,116,0)" rx="2" ry="2" />
<text  x="1517.25" y="47.5" ></text>
</g>
<g >
<title>DataFrame_read.tcc:469 (22,192 samples, 0.06%)</title><rect x="10.0" y="165" width="0.9" height="15.0" fill="rgb(219,119,0)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>HeteroVector.tcc:221 (3,114,356 samples, 8.20%)</title><rect x="959.2" y="165" width="129.7" height="15.0" fill="rgb(248,148,0)" rx="2" ry="2" />
<text  x="962.24" y="175.5" >HeteroVector.tcc..</text>
</g>
<g >
<title>HeteroVector.tcc:163 (421,732 samples, 1.11%)</title><rect x="1363.9" y="85" width="17.5" height="15.0" fill="rgb(234,134,0)" rx="2" ry="2" />
<text  x="1366.88" y="95.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:691 (3,079,655 samples, 8.11%)</title><rect x="1130.4" y="133" width="128.2" height="15.0" fill="rgb(238,138,0)" rx="2" ry="2" />
<text  x="1133.39" y="143.5" >DataFrame_misc.t..</text>
</g>
<g >
<title>DataFrame_misc.tcc:691 (37,923 samples, 0.10%)</title><rect x="32.2" y="165" width="1.6" height="15.0" fill="rgb(248,148,0)" rx="2" ry="2" />
<text  x="35.23" y="175.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:182 (21,750 samples, 0.06%)</title><rect x="1588.2" y="165" width="0.9" height="15.0" fill="rgb(250,150,0)" rx="2" ry="2" />
<text  x="1591.20" y="175.5" ></text>
</g>
<g >
<title>DataFrame.tcc:56 (26,359 samples, 0.07%)</title><rect x="1352.9" y="133" width="1.1" height="15.0" fill="rgb(226,126,0)" rx="2" ry="2" />
<text  x="1355.91" y="143.5" ></text>
</g>
<g >
<title>DataFrame.tcc:53 (210,856 samples, 0.56%)</title><rect x="1504.4" y="133" width="8.7" height="15.0" fill="rgb(206,106,0)" rx="2" ry="2" />
<text  x="1507.37" y="143.5" ></text>
</g>
<g >
<title>DataFrame.tcc:61 (658,954 samples, 1.74%)</title><rect x="1514.2" y="133" width="27.5" height="15.0" fill="rgb(217,117,0)" rx="2" ry="2" />
<text  x="1517.25" y="143.5" >D..</text>
</g>
<g >
<title>main.cc:107 (2) (210,856 samples, 0.56%)</title><rect x="530.5" y="197" width="8.7" height="15.0" fill="rgb(250,150,0)" rx="2" ry="2" />
<text  x="533.45" y="207.5" ></text>
</g>
<g >
<title>HeteroVector.tcc:53 (237,214 samples, 0.62%)</title><rect x="1494.5" y="101" width="9.9" height="15.0" fill="rgb(211,111,0)" rx="2" ry="2" />
<text  x="1497.50" y="111.5" ></text>
</g>
<g >
<title>DataFrame_get.tcc:1104 (178,146 samples, 0.47%)</title><rect x="1121.7" y="181" width="7.4" height="15.0" fill="rgb(246,146,0)" rx="2" ry="2" />
<text  x="1124.67" y="191.5" ></text>
</g>
<g >
<title>DataFrame.tcc:661 (1,528,770 samples, 4.03%)</title><rect x="1344.1" y="165" width="63.7" height="15.0" fill="rgb(233,133,0)" rx="2" ry="2" />
<text  x="1347.13" y="175.5" >DataFr..</text>
</g>
<g >
<title>main.cc:137 (9,423,408 samples, 24.82%)</title><rect x="556.8" y="197" width="392.2" height="15.0" fill="rgb(225,125,0)" rx="2" ry="2" />
<text  x="559.78" y="207.5" >main.cc:137</text>
</g>
<g >
<title>DataFrameStatsVisitors.h:1776 (3,998 samples, 0.01%)</title><rect x="1429.6" y="101" width="0.2" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="1432.61" y="111.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:691 (52,535 samples, 0.14%)</title><rect x="590.3" y="165" width="2.2" height="15.0" fill="rgb(239,139,0)" rx="2" ry="2" />
<text  x="593.30" y="175.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:684[r] (4,627 samples, 0.01%)</title><rect x="959.4" y="133" width="0.2" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="962.36" y="143.5" ></text>
</g>
<g >
<title>DataFrame.tcc:690 (1,528,773 samples, 4.03%)</title><rect x="1504.4" y="149" width="63.6" height="15.0" fill="rgb(212,112,0)" rx="2" ry="2" />
<text  x="1507.37" y="159.5" >DataFr..</text>
</g>
<g >
<title>DataFrame.tcc:1108 (1,528,773 samples, 4.03%)</title><rect x="1504.4" y="181" width="63.6" height="15.0" fill="rgb(234,134,0)" rx="2" ry="2" />
<text  x="1507.37" y="191.5" >DataFr..</text>
</g>
<g >
<title>main.cc:209 (52,721 samples, 0.14%)</title><rect x="1268.9" y="197" width="2.2" height="15.0" fill="rgb(254,154,0)" rx="2" ry="2" />
<text  x="1271.87" y="207.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:684[r] (2,453 samples, 0.01%)</title><rect x="1130.3" y="133" width="0.1" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="1133.29" y="143.5" ></text>
</g>
<g >
<title>simple_time.hpp:23[r] (210,856 samples, 0.56%)</title><rect x="548.0" y="181" width="8.8" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="551.00" y="191.5" ></text>
</g>
<g >
<title>DataFrame_get.tcc:217 (247,686 samples, 0.65%)</title><rect x="1258.6" y="133" width="10.3" height="15.0" fill="rgb(224,124,0)" rx="2" ry="2" />
<text  x="1261.56" y="143.5" ></text>
</g>
<g >
<title>DataFrame.h:86 (658,928 samples, 1.74%)</title><rect x="1476.9" y="165" width="27.5" height="15.0" fill="rgb(200,100,0)" rx="2" ry="2" />
<text  x="1479.95" y="175.5" >D..</text>
</g>
<g >
<title>DataFrame.tcc:62 (632,576 samples, 1.67%)</title><rect x="1541.7" y="133" width="26.3" height="15.0" fill="rgb(217,117,0)" rx="2" ry="2" />
<text  x="1544.67" y="143.5" >D..</text>
</g>
<g >
<title>DataFrame_misc.tcc:684[r] (43,935 samples, 0.12%)</title><rect x="588.5" y="165" width="1.8" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="591.48" y="175.5" ></text>
</g>
<g >
<title>DataFrame_get.tcc:1108 (5,473,138 samples, 14.42%)</title><rect x="32.2" y="181" width="227.8" height="15.0" fill="rgb(234,134,0)" rx="2" ry="2" />
<text  x="35.22" y="191.5" >DataFrame_get.tcc:1108</text>
</g>
<g >
<title>HeteroVector.tcc:171 (5,691,344 samples, 14.99%)</title><rect x="291.3" y="149" width="236.8" height="15.0" fill="rgb(231,131,0)" rx="2" ry="2" />
<text  x="294.27" y="159.5" >HeteroVector.tcc:171</text>
</g>
<g >
<title>DataFrame_get.tcc:1108 (3,139,999 samples, 8.27%)</title><rect x="958.2" y="181" width="130.7" height="15.0" fill="rgb(213,113,0)" rx="2" ry="2" />
<text  x="961.17" y="191.5" >DataFrame_get.tc..</text>
</g>
<g >
<title>DataFrameStatsVisitors.h:1776 (21,447 samples, 0.06%)</title><rect x="1589.1" y="101" width="0.9" height="15.0" fill="rgb(214,114,0)" rx="2" ry="2" />
<text  x="1592.11" y="111.5" ></text>
</g>
<g >
<title>HeteroVector.tcc:163 (3,998 samples, 0.01%)</title><rect x="1429.6" y="133" width="0.2" height="15.0" fill="rgb(247,147,0)" rx="2" ry="2" />
<text  x="1432.61" y="143.5" ></text>
</g>
<g >
<title>main.cc:320 (3,786,936 samples, 9.98%)</title><rect x="1272.2" y="213" width="157.6" height="15.0" fill="rgb(193,93,0)" rx="2" ry="2" />
<text  x="1275.17" y="223.5" >main.cc:320</text>
</g>
<g >
<title>DataFrame.tcc:1199 (21,750 samples, 0.06%)</title><rect x="1588.2" y="181" width="0.9" height="15.0" fill="rgb(229,129,0)" rx="2" ry="2" />
<text  x="1591.20" y="191.5" ></text>
</g>
<g >
<title>main.cc:183 (3,297,534 samples, 8.69%)</title><rect x="1121.3" y="197" width="137.3" height="15.0" fill="rgb(193,93,0)" rx="2" ry="2" />
<text  x="1124.32" y="207.5" >main.cc:183</text>
</g>
<g >
<title>main.cc:308 (5,722,260 samples, 15.07%)</title><rect x="23.9" y="213" width="238.2" height="15.0" fill="rgb(225,125,0)" rx="2" ry="2" />
<text  x="26.93" y="223.5" >main.cc:308</text>
</g>
<g >
<title>HeteroVector.tcc:221 (5,435,210 samples, 14.32%)</title><rect x="33.8" y="165" width="226.2" height="15.0" fill="rgb(193,93,0)" rx="2" ry="2" />
<text  x="36.80" y="175.5" >HeteroVector.tcc:221</text>
</g>
<g >
<title>main.cc:34 (22,197 samples, 0.06%)</title><rect x="10.0" y="197" width="0.9" height="15.0" fill="rgb(214,114,0)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>simple_time.hpp:23[r] (210,856 samples, 0.56%)</title><rect x="539.2" y="181" width="8.8" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="542.23" y="191.5" ></text>
</g>
<g >
<title>DataFrame.tcc:1199 (3,999 samples, 0.01%)</title><rect x="1429.4" y="181" width="0.2" height="15.0" fill="rgb(190,90,0)" rx="2" ry="2" />
<text  x="1432.44" y="191.5" ></text>
</g>
<g >
<title>all (37,963,106 samples, 100%)</title><rect x="10.0" y="229" width="1580.0" height="15.0" fill="rgb(225,125,0)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:182 (206,895 samples, 0.54%)</title><rect x="1408.9" y="165" width="8.6" height="15.0" fill="rgb(246,146,0)" rx="2" ry="2" />
<text  x="1411.86" y="175.5" ></text>
</g>
<g >
<title>DataFrame_get.tcc:1088[r] (7,491 samples, 0.02%)</title><rect x="1121.3" y="181" width="0.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="1124.33" y="191.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:197 (287,729 samples, 0.76%)</title><rect x="1417.5" y="165" width="11.9" height="15.0" fill="rgb(229,129,0)" rx="2" ry="2" />
<text  x="1420.47" y="175.5" ></text>
</g>
<g >
<title>HeteroVector.tcc:221 (3,083,910 samples, 8.12%)</title><rect x="1130.2" y="165" width="128.4" height="15.0" fill="rgb(250,150,0)" rx="2" ry="2" />
<text  x="1133.21" y="175.5" >HeteroVector.tcc..</text>
</g>
<g >
<title>main.cc:110 (210,856 samples, 0.56%)</title><rect x="539.2" y="197" width="8.8" height="15.0" fill="rgb(206,106,0)" rx="2" ry="2" />
<text  x="542.23" y="207.5" ></text>
</g>
<g >
<title>HeteroVector.cc:51 (237,216 samples, 0.62%)</title><rect x="1494.5" y="133" width="9.9" height="15.0" fill="rgb(218,118,0)" rx="2" ry="2" />
<text  x="1497.50" y="143.5" ></text>
</g>
<g >
<title>DataFrame_get.tcc:1104 (99,618 samples, 0.26%)</title><rect x="28.1" y="181" width="4.1" height="15.0" fill="rgb(210,110,0)" rx="2" ry="2" />
<text  x="31.08" y="191.5" ></text>
</g>
<g >
<title>DataFrame_get.tcc:1104 (193,003 samples, 0.51%)</title><rect x="950.1" y="181" width="8.1" height="15.0" fill="rgb(251,151,0)" rx="2" ry="2" />
<text  x="953.14" y="191.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:84 (421,732 samples, 1.11%)</title><rect x="1363.9" y="69" width="17.5" height="15.0" fill="rgb(233,133,0)" rx="2" ry="2" />
<text  x="1366.88" y="79.5" ></text>
</g>
<g >
<title>HeteroVector.tcc:212 (658,954 samples, 1.74%)</title><rect x="1514.2" y="101" width="27.5" height="15.0" fill="rgb(220,120,0)" rx="2" ry="2" />
<text  x="1517.25" y="111.5" >H..</text>
</g>
<g >
<title>HeteroVector.tcc:160 (237,222 samples, 0.62%)</title><rect x="1354.0" y="85" width="9.9" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="1357.01" y="95.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:684[r] (1,840,755 samples, 4.85%)</title><rect x="609.9" y="133" width="76.6" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="612.94" y="143.5" >DataFram..</text>
</g>
<g >
<title>main.cc:111 (210,856 samples, 0.56%)</title><rect x="548.0" y="197" width="8.8" height="15.0" fill="rgb(241,141,0)" rx="2" ry="2" />
<text  x="551.00" y="207.5" ></text>
</g>
<g >
<title>DataFrame_standalone.tcc:56 (421,712 samples, 1.11%)</title><rect x="1363.9" y="53" width="17.5" height="15.0" fill="rgb(192,92,0)" rx="2" ry="2" />
<text  x="1366.88" y="63.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:451 (247,686 samples, 0.65%)</title><rect x="1258.6" y="165" width="10.3" height="15.0" fill="rgb(220,120,0)" rx="2" ry="2" />
<text  x="1261.56" y="175.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:684[r] (597,708 samples, 1.57%)</title><rect x="42.1" y="133" width="24.9" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="45.11" y="143.5" >D..</text>
</g>
<g >
<title>DataFrameStatsVisitors.h:1776 (21,750 samples, 0.06%)</title><rect x="1588.2" y="149" width="0.9" height="15.0" fill="rgb(234,134,0)" rx="2" ry="2" />
<text  x="1591.20" y="159.5" ></text>
</g>
<g >
<title>HeteroVector.tcc:171 (3,083,910 samples, 8.12%)</title><rect x="1130.2" y="149" width="128.4" height="15.0" fill="rgb(246,146,0)" rx="2" ry="2" />
<text  x="1133.21" y="159.5" >HeteroVector.tcc..</text>
</g>
<g >
<title>DataFrame.tcc:1105 (658,928 samples, 1.74%)</title><rect x="1476.9" y="181" width="27.5" height="15.0" fill="rgb(198,98,0)" rx="2" ry="2" />
<text  x="1479.95" y="191.5" >D..</text>
</g>
<g >
<title>main.cc:145 (3,360,867 samples, 8.85%)</title><rect x="949.0" y="197" width="139.9" height="15.0" fill="rgb(204,104,0)" rx="2" ry="2" />
<text  x="951.98" y="207.5" >main.cc:145</text>
</g>
<g >
<title>DataFrame.tcc:1108 (1,528,770 samples, 4.03%)</title><rect x="1344.1" y="181" width="63.7" height="15.0" fill="rgb(203,103,0)" rx="2" ry="2" />
<text  x="1347.13" y="191.5" >DataFr..</text>
</g>
<g >
<title>DataFrame.tcc:1159[r] (26,358 samples, 0.07%)</title><rect x="1407.8" y="181" width="1.1" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="1410.76" y="191.5" ></text>
</g>
<g >
<title>DataFrameStatsVisitors.h:269[r] (36,830 samples, 0.10%)</title><rect x="1267.3" y="101" width="1.6" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="1270.34" y="111.5" ></text>
</g>
<g >
<title>DataFrame.tcc:1105 (658,943 samples, 1.74%)</title><rect x="1316.7" y="181" width="27.4" height="15.0" fill="rgb(232,132,0)" rx="2" ry="2" />
<text  x="1319.71" y="191.5" >D..</text>
</g>
<g >
<title>DataFrame_misc.tcc:197 (269,951 samples, 0.71%)</title><rect x="1577.0" y="165" width="11.2" height="15.0" fill="rgb(229,129,0)" rx="2" ry="2" />
<text  x="1579.97" y="175.5" ></text>
</g>
<g >
<title>main.cc:175[r] (256,942 samples, 0.68%)</title><rect x="1110.6" y="197" width="10.7" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="1113.63" y="207.5" ></text>
</g>
<g >
<title>simple_time.hpp:67[r] (210,856 samples, 0.56%)</title><rect x="1258.6" y="85" width="8.7" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="1261.56" y="95.5" ></text>
</g>
<g >
<title>HeteroVector.cc:46 (237,216 samples, 0.62%)</title><rect x="1494.5" y="149" width="9.9" height="15.0" fill="rgb(205,105,0)" rx="2" ry="2" />
<text  x="1497.50" y="159.5" ></text>
</g>
<g >
<title>HeteroVector.tcc:163 (21,447 samples, 0.06%)</title><rect x="1589.1" y="133" width="0.9" height="15.0" fill="rgb(232,132,0)" rx="2" ry="2" />
<text  x="1592.11" y="143.5" ></text>
</g>
<g >
<title>HeteroVector.tcc:221 (8,565,355 samples, 22.56%)</title><rect x="592.5" y="165" width="356.5" height="15.0" fill="rgb(206,106,0)" rx="2" ry="2" />
<text  x="595.49" y="175.5" >HeteroVector.tcc:221</text>
</g>
<g >
<title>main.cc:88 (2)[r] (55,620 samples, 0.15%)</title><rect x="528.1" y="197" width="2.4" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="531.14" y="207.5" ></text>
</g>
<g >
<title>DataFrame_get.tcc:1108 (5,754,892 samples, 15.16%)</title><rect x="288.6" y="181" width="239.5" height="15.0" fill="rgb(217,117,0)" rx="2" ry="2" />
<text  x="291.62" y="191.5" >DataFrame_get.tcc:1108</text>
</g>
<g >
<title>HeteroVector.cc:59 (237,214 samples, 0.62%)</title><rect x="1494.5" y="117" width="9.9" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="1497.50" y="127.5" ></text>
</g>
<g >
<title>main.cc:281 (1) (2,716,342 samples, 7.16%)</title><rect x="1476.9" y="197" width="113.1" height="15.0" fill="rgb(195,95,0)" rx="2" ry="2" />
<text  x="1479.95" y="207.5" >main.cc:281 (1)</text>
</g>
<g >
<title>main.cc:264 (52,717 samples, 0.14%)</title><rect x="1447.3" y="197" width="2.2" height="15.0" fill="rgb(254,154,0)" rx="2" ry="2" />
<text  x="1450.33" y="207.5" ></text>
</g>
<g >
<title>DataFrame.tcc:62 (632,574 samples, 1.67%)</title><rect x="1381.4" y="133" width="26.4" height="15.0" fill="rgb(212,112,0)" rx="2" ry="2" />
<text  x="1384.43" y="143.5" >D..</text>
</g>
<g >
<title>DataFrame_misc.tcc:197 (3,998 samples, 0.01%)</title><rect x="1429.6" y="117" width="0.2" height="15.0" fill="rgb(245,145,0)" rx="2" ry="2" />
<text  x="1432.61" y="127.5" ></text>
</g>
<g >
<title>DataFrame_get.tcc:1108 (3,110,960 samples, 8.19%)</title><rect x="1129.1" y="181" width="129.5" height="15.0" fill="rgb(233,133,0)" rx="2" ry="2" />
<text  x="1132.09" y="191.5" >DataFrame_get.tc..</text>
</g>
<g >
<title>HeteroVector.h:233 (21,447 samples, 0.06%)</title><rect x="1589.1" y="165" width="0.9" height="15.0" fill="rgb(196,96,0)" rx="2" ry="2" />
<text  x="1592.11" y="175.5" ></text>
</g>
<g >
<title>HeteroVector.h:233 (658,954 samples, 1.74%)</title><rect x="1514.2" y="117" width="27.5" height="15.0" fill="rgb(195,95,0)" rx="2" ry="2" />
<text  x="1517.25" y="127.5" >H..</text>
</g>
<g >
<title>DataFrame_misc.tcc:84 (237,224 samples, 0.62%)</title><rect x="1514.2" y="53" width="9.9" height="15.0" fill="rgb(213,113,0)" rx="2" ry="2" />
<text  x="1517.25" y="63.5" ></text>
</g>
<g >
<title>DataFrame_standalone.tcc:56 (26,357 samples, 0.07%)</title><rect x="1523.0" y="37" width="1.1" height="15.0" fill="rgb(247,147,0)" rx="2" ry="2" />
<text  x="1526.02" y="47.5" ></text>
</g>
<g >
<title>HeteroVector.cc:46 (237,220 samples, 0.62%)</title><rect x="1334.3" y="149" width="9.8" height="15.0" fill="rgb(192,92,0)" rx="2" ry="2" />
<text  x="1337.26" y="159.5" ></text>
</g>
<g >
<title>HeteroVector.tcc:221 (5,691,344 samples, 14.99%)</title><rect x="291.3" y="165" width="236.8" height="15.0" fill="rgb(207,107,0)" rx="2" ry="2" />
<text  x="294.27" y="175.5" >HeteroVector.tcc:221</text>
</g>
<g >
<title>DataFrame_misc.tcc:182 (3,999 samples, 0.01%)</title><rect x="1429.4" y="165" width="0.2" height="15.0" fill="rgb(194,94,0)" rx="2" ry="2" />
<text  x="1432.44" y="175.5" ></text>
</g>
<g >
<title>DataFrameStatsVisitors.h:1776 (189,110 samples, 0.50%)</title><rect x="1569.1" y="149" width="7.9" height="15.0" fill="rgb(218,118,0)" rx="2" ry="2" />
<text  x="1572.10" y="159.5" ></text>
</g>
<g >
<title>DataFrame.tcc:1172 (287,737 samples, 0.76%)</title><rect x="1417.5" y="181" width="11.9" height="15.0" fill="rgb(242,142,0)" rx="2" ry="2" />
<text  x="1420.47" y="191.5" ></text>
</g>
<g >
<title>DataFrame_standalone.tcc:48 (210,857 samples, 0.56%)</title><rect x="1354.0" y="37" width="8.8" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="1357.01" y="47.5" ></text>
</g>
<g >
<title>DataFrame_get.tcc:185 (2)[r] (98,063 samples, 0.26%)</title><rect x="19.8" y="181" width="4.1" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="22.85" y="191.5" ></text>
</g>
<g >
<title>main.cc:210 (26,359 samples, 0.07%)</title><rect x="1271.1" y="197" width="1.1" height="15.0" fill="rgb(228,128,0)" rx="2" ry="2" />
<text  x="1274.07" y="207.5" ></text>
</g>
<g >
<title>DataFrame_get.tcc:1108 (8,661,851 samples, 22.82%)</title><rect x="588.5" y="181" width="360.5" height="15.0" fill="rgb(194,94,0)" rx="2" ry="2" />
<text  x="591.48" y="191.5" >DataFrame_get.tcc:1108</text>
</g>
<g >
<title>DataFrame_misc.tcc:684[r] (23,942 samples, 0.06%)</title><rect x="288.6" y="165" width="1.0" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="291.62" y="175.5" ></text>
</g>
<g >
<title>HeteroVector.tcc:212 (21,447 samples, 0.06%)</title><rect x="1589.1" y="149" width="0.9" height="15.0" fill="rgb(253,153,0)" rx="2" ry="2" />
<text  x="1592.11" y="159.5" ></text>
</g>
<g >
<title>DataFrameStatsVisitors.h:1776 (269,951 samples, 0.71%)</title><rect x="1577.0" y="149" width="11.2" height="15.0" fill="rgb(198,98,0)" rx="2" ry="2" />
<text  x="1579.97" y="159.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:691 (6,305,447 samples, 16.61%)</title><rect x="686.5" y="133" width="262.5" height="15.0" fill="rgb(196,96,0)" rx="2" ry="2" />
<text  x="689.55" y="143.5" >DataFrame_misc.tcc:691</text>
</g>
<g >
<title>main.cc:196 (247,686 samples, 0.65%)</title><rect x="1258.6" y="197" width="10.3" height="15.0" fill="rgb(203,103,0)" rx="2" ry="2" />
<text  x="1261.56" y="207.5" ></text>
</g>
<g >
<title>DataFrame_get.tcc:1104 (315,419 samples, 0.83%)</title><rect x="275.5" y="181" width="13.1" height="15.0" fill="rgb(214,114,0)" rx="2" ry="2" />
<text  x="278.49" y="191.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:691 (3,106,641 samples, 8.18%)</title><rect x="959.6" y="133" width="129.3" height="15.0" fill="rgb(205,105,0)" rx="2" ry="2" />
<text  x="962.56" y="143.5" >DataFrame_misc.t..</text>
</g>
<g >
<title>DataFrame.h:86 (658,933 samples, 1.74%)</title><rect x="1316.7" y="165" width="27.4" height="15.0" fill="rgb(192,92,0)" rx="2" ry="2" />
<text  x="1319.71" y="175.5" >D..</text>
</g>
<g >
<title>main.cc:264 (26,360 samples, 0.07%)</title><rect x="1288.2" y="197" width="1.1" height="15.0" fill="rgb(217,117,0)" rx="2" ry="2" />
<text  x="1291.18" y="207.5" ></text>
</g>
<g >
<title>DataFrame.tcc:53 (210,856 samples, 0.56%)</title><rect x="1344.1" y="133" width="8.8" height="15.0" fill="rgb(234,134,0)" rx="2" ry="2" />
<text  x="1347.13" y="143.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:691 (39,600 samples, 0.10%)</title><rect x="289.6" y="165" width="1.7" height="15.0" fill="rgb(228,128,0)" rx="2" ry="2" />
<text  x="292.62" y="175.5" ></text>
</g>
<g >
<title>HeteroVector.tcc:160 (237,225 samples, 0.62%)</title><rect x="1514.2" y="85" width="9.9" height="15.0" fill="rgb(204,104,0)" rx="2" ry="2" />
<text  x="1517.25" y="95.5" ></text>
</g>
<g >
<title>DataFrame_standalone.tcc:56 (632,567 samples, 1.67%)</title><rect x="1541.7" y="117" width="26.3" height="15.0" fill="rgb(214,114,0)" rx="2" ry="2" />
<text  x="1544.67" y="127.5" >D..</text>
</g>
<g >
<title>DataFrame_set.tcc:162 (237,240 samples, 0.62%)</title><rect x="1306.8" y="181" width="9.9" height="15.0" fill="rgb(249,149,0)" rx="2" ry="2" />
<text  x="1309.83" y="191.5" ></text>
</g>
<g >
<title>DataFrame.tcc:1159[r] (26,357 samples, 0.07%)</title><rect x="1568.0" y="181" width="1.1" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="1571.00" y="191.5" ></text>
</g>
<g >
<title>DataFrame_get.tcc:1090 (216,667 samples, 0.57%)</title><rect x="266.5" y="181" width="9.0" height="15.0" fill="rgb(194,94,0)" rx="2" ry="2" />
<text  x="269.48" y="191.5" ></text>
</g>
<g >
<title>main.cc:71 (312,496 samples, 0.82%)</title><rect x="10.9" y="197" width="13.0" height="15.0" fill="rgb(192,92,0)" rx="2" ry="2" />
<text  x="13.92" y="207.5" ></text>
</g>
<g >
<title>main.cc:306 (312,496 samples, 0.82%)</title><rect x="10.9" y="213" width="13.0" height="15.0" fill="rgb(232,132,0)" rx="2" ry="2" />
<text  x="13.92" y="223.5" ></text>
</g>
<g >
<title>DataFrameStatsVisitors.h:1776 (287,729 samples, 0.76%)</title><rect x="1417.5" y="149" width="11.9" height="15.0" fill="rgb(220,120,0)" rx="2" ry="2" />
<text  x="1420.47" y="159.5" ></text>
</g>
<g >
<title>DataFrame.tcc:661 (1,528,773 samples, 4.03%)</title><rect x="1504.4" y="165" width="63.6" height="15.0" fill="rgb(226,126,0)" rx="2" ry="2" />
<text  x="1507.37" y="175.5" >DataFr..</text>
</g>
<g >
<title>DataFrame_get.tcc:1088[r] (26,358 samples, 0.07%)</title><rect x="949.0" y="181" width="1.1" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="951.98" y="191.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:684[r] (643,492 samples, 1.70%)</title><rect x="300.5" y="133" width="26.8" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="303.54" y="143.5" >D..</text>
</g>
<g >
<title>HeteroVector.tcc:163 (237,224 samples, 0.62%)</title><rect x="1514.2" y="69" width="9.9" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="1517.25" y="79.5" ></text>
</g>
<g >
<title>main.cc:85 (6,392,479 samples, 16.84%)</title><rect x="262.1" y="197" width="266.0" height="15.0" fill="rgb(219,119,0)" rx="2" ry="2" />
<text  x="265.09" y="207.5" >main.cc:85</text>
</g>
<g >
<title>main.cc:85 (5,672,449 samples, 14.94%)</title><rect x="23.9" y="197" width="236.1" height="15.0" fill="rgb(246,146,0)" rx="2" ry="2" />
<text  x="26.93" y="207.5" >main.cc:85</text>
</g>
<g >
<title>DataFrame_get.tcc:220 (247,686 samples, 0.65%)</title><rect x="1258.6" y="181" width="10.3" height="15.0" fill="rgb(251,151,0)" rx="2" ry="2" />
<text  x="1261.56" y="191.5" ></text>
</g>
<g >
<title>main.cc:274 (237,256 samples, 0.62%)</title><rect x="1467.1" y="197" width="9.8" height="15.0" fill="rgb(194,94,0)" rx="2" ry="2" />
<text  x="1470.07" y="207.5" ></text>
</g>
<g >
<title>HeteroVector.h:233 (658,954 samples, 1.74%)</title><rect x="1354.0" y="117" width="27.4" height="15.0" fill="rgb(231,131,0)" rx="2" ry="2" />
<text  x="1357.01" y="127.5" >H..</text>
</g>
<g >
<title>DataFrame_get.tcc:1090 (99,618 samples, 0.26%)</title><rect x="23.9" y="181" width="4.2" height="15.0" fill="rgb(238,138,0)" rx="2" ry="2" />
<text  x="26.93" y="191.5" ></text>
</g>
<g >
<title>main.cc:310 (6,448,106 samples, 16.99%)</title><rect x="262.1" y="213" width="268.4" height="15.0" fill="rgb(211,111,0)" rx="2" ry="2" />
<text  x="265.09" y="223.5" >main.cc:310</text>
</g>
<g >
<title>DataFrame_get.tcc:180 (214,425 samples, 0.56%)</title><rect x="10.9" y="181" width="8.9" height="15.0" fill="rgb(191,91,0)" rx="2" ry="2" />
<text  x="13.92" y="191.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:691 (4,637,957 samples, 12.22%)</title><rect x="67.0" y="133" width="193.0" height="15.0" fill="rgb(192,92,0)" rx="2" ry="2" />
<text  x="69.98" y="143.5" >DataFrame_misc.tcc:691</text>
</g>
<g >
<title>DataFrame_standalone.tcc:56 (632,568 samples, 1.67%)</title><rect x="1381.4" y="117" width="26.4" height="15.0" fill="rgb(205,105,0)" rx="2" ry="2" />
<text  x="1384.43" y="127.5" >D..</text>
</g>
<g >
<title>HeteroVector.tcc:171 (8,565,355 samples, 22.56%)</title><rect x="592.5" y="149" width="356.5" height="15.0" fill="rgb(214,114,0)" rx="2" ry="2" />
<text  x="595.49" y="159.5" >HeteroVector.tcc:171</text>
</g>
<g >
<title>main.cc:316 (4,075,426 samples, 10.74%)</title><rect x="1088.9" y="213" width="169.7" height="15.0" fill="rgb(198,98,0)" rx="2" ry="2" />
<text  x="1091.95" y="223.5" >main.cc:316</text>
</g>
<g >
<title>DataFrame.tcc:1172 (269,951 samples, 0.71%)</title><rect x="1577.0" y="181" width="11.2" height="15.0" fill="rgb(254,154,0)" rx="2" ry="2" />
<text  x="1579.97" y="191.5" ></text>
</g>
<g >
<title>DataFrame.tcc:690 (1,528,770 samples, 4.03%)</title><rect x="1344.1" y="149" width="63.7" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="1347.13" y="159.5" >DataFr..</text>
</g>
<g >
<title>DataFrame_misc.tcc:84 (237,221 samples, 0.62%)</title><rect x="1354.0" y="53" width="9.9" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="1357.01" y="63.5" ></text>
</g>
<g >
<title>main.cc:88 (2)[r] (49,809 samples, 0.13%)</title><rect x="260.0" y="197" width="2.1" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="263.01" y="207.5" ></text>
</g>
<g >
<title>HeteroVector.tcc:163 (237,221 samples, 0.62%)</title><rect x="1354.0" y="69" width="9.9" height="15.0" fill="rgb(244,144,0)" rx="2" ry="2" />
<text  x="1357.01" y="79.5" ></text>
</g>
<g >
<title>main.cc:41[r] (310,072 samples, 0.82%)</title><rect x="1097.7" y="181" width="12.9" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="1100.72" y="191.5" ></text>
</g>
<g >
<title>DataFrameStatsVisitors.h:1776 (206,888 samples, 0.54%)</title><rect x="1408.9" y="149" width="8.6" height="15.0" fill="rgb(204,104,0)" rx="2" ry="2" />
<text  x="1411.86" y="159.5" ></text>
</g>
<g >
<title>main.cc:303 (22,197 samples, 0.06%)</title><rect x="10.0" y="213" width="0.9" height="15.0" fill="rgb(191,91,0)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>main.cc:281 (1) (2,716,735 samples, 7.16%)</title><rect x="1316.7" y="197" width="113.1" height="15.0" fill="rgb(213,113,0)" rx="2" ry="2" />
<text  x="1319.71" y="207.5" >main.cc:281 (1)</text>
</g>
<g >
<title>DataFrame_standalone.tcc:56 (26,358 samples, 0.07%)</title><rect x="1362.8" y="37" width="1.1" height="15.0" fill="rgb(227,127,0)" rx="2" ry="2" />
<text  x="1365.78" y="47.5" ></text>
</g>
<g >
<title>HeteroVector.tcc:53 (237,214 samples, 0.62%)</title><rect x="1334.3" y="101" width="9.8" height="15.0" fill="rgb(233,133,0)" rx="2" ry="2" />
<text  x="1337.26" y="111.5" ></text>
</g>
<g >
<title>DataFrame.tcc:56 (26,359 samples, 0.07%)</title><rect x="1513.1" y="133" width="1.1" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="1516.15" y="143.5" ></text>
</g>
<g >
<title>main.cc:318 (326,827 samples, 0.86%)</title><rect x="1258.6" y="213" width="13.6" height="15.0" fill="rgb(208,108,0)" rx="2" ry="2" />
<text  x="1261.56" y="223.5" ></text>
</g>
<g >
<title>HeteroVector.tcc:163 (421,729 samples, 1.11%)</title><rect x="1524.1" y="85" width="17.6" height="15.0" fill="rgb(190,90,0)" rx="2" ry="2" />
<text  x="1527.12" y="95.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:182 (189,117 samples, 0.50%)</title><rect x="1569.1" y="165" width="7.9" height="15.0" fill="rgb(225,125,0)" rx="2" ry="2" />
<text  x="1572.10" y="175.5" ></text>
</g>
<g >
<title>main.cc:314 (12,786,545 samples, 33.68%)</title><rect x="556.8" y="213" width="532.1" height="15.0" fill="rgb(232,132,0)" rx="2" ry="2" />
<text  x="559.78" y="223.5" >main.cc:314</text>
</g>
<g >
<title>DataFrame.tcc:1211 (3,998 samples, 0.01%)</title><rect x="1429.6" y="181" width="0.2" height="15.0" fill="rgb(222,122,0)" rx="2" ry="2" />
<text  x="1432.61" y="191.5" ></text>
</g>
<g >
<title>main.cc:269 (421,711 samples, 1.11%)</title><rect x="1449.5" y="197" width="17.6" height="15.0" fill="rgb(229,129,0)" rx="2" ry="2" />
<text  x="1452.52" y="207.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:197 (21,447 samples, 0.06%)</title><rect x="1589.1" y="117" width="0.9" height="15.0" fill="rgb(213,113,0)" rx="2" ry="2" />
<text  x="1592.11" y="127.5" ></text>
</g>
<g >
<title>main.cc:175 (520,928 samples, 1.37%)</title><rect x="1088.9" y="197" width="21.7" height="15.0" fill="rgb(242,142,0)" rx="2" ry="2" />
<text  x="1091.95" y="207.5" >m..</text>
</g>
<g >
<title>DataFrame_misc.tcc:691 (25,623 samples, 0.07%)</title><rect x="958.2" y="165" width="1.0" height="15.0" fill="rgb(236,136,0)" rx="2" ry="2" />
<text  x="961.17" y="175.5" ></text>
</g>
<g >
<title>HeteroVector.tcc:212 (3,998 samples, 0.01%)</title><rect x="1429.6" y="149" width="0.2" height="15.0" fill="rgb(208,108,0)" rx="2" ry="2" />
<text  x="1432.61" y="159.5" ></text>
</g>
<g >
<title>HeteroVector.tcc:212 (658,954 samples, 1.74%)</title><rect x="1354.0" y="101" width="27.4" height="15.0" fill="rgb(195,95,0)" rx="2" ry="2" />
<text  x="1357.01" y="111.5" >H..</text>
</g>
<g >
<title>main.cc:312 (632,571 samples, 1.67%)</title><rect x="530.5" y="213" width="26.3" height="15.0" fill="rgb(232,132,0)" rx="2" ry="2" />
<text  x="533.45" y="223.5" >m..</text>
</g>
<g >
<title>HeteroVector.tcc:171 (5,435,210 samples, 14.32%)</title><rect x="33.8" y="149" width="226.2" height="15.0" fill="rgb(222,122,0)" rx="2" ry="2" />
<text  x="36.80" y="159.5" >HeteroVector.tcc:171</text>
</g>
<g >
<title>HeteroVector.tcc:171 (3,114,356 samples, 8.20%)</title><rect x="959.2" y="149" width="129.7" height="15.0" fill="rgb(194,94,0)" rx="2" ry="2" />
<text  x="962.24" y="159.5" >HeteroVector.tcc..</text>
</g>
<g >
<title>DataFrameStatsVisitors.h:1776 (3,998 samples, 0.01%)</title><rect x="1429.4" y="149" width="0.2" height="15.0" fill="rgb(205,105,0)" rx="2" ry="2" />
<text  x="1432.44" y="159.5" ></text>
</g>
<g >
<title>DataFrame_standalone.tcc:56 (421,711 samples, 1.11%)</title><rect x="1524.1" y="53" width="17.6" height="15.0" fill="rgb(194,94,0)" rx="2" ry="2" />
<text  x="1527.12" y="63.5" ></text>
</g>
<g >
<title>DataFrame.tcc:1169 (206,916 samples, 0.55%)</title><rect x="1408.9" y="181" width="8.6" height="15.0" fill="rgb(220,120,0)" rx="2" ry="2" />
<text  x="1411.86" y="191.5" ></text>
</g>
<g >
<title>DataFrame.tcc:61 (658,954 samples, 1.74%)</title><rect x="1354.0" y="133" width="27.4" height="15.0" fill="rgb(193,93,0)" rx="2" ry="2" />
<text  x="1357.01" y="143.5" >D..</text>
</g>
<g >
<title>main.cc:260 (421,713 samples, 1.11%)</title><rect x="1429.8" y="197" width="17.5" height="15.0" fill="rgb(194,94,0)" rx="2" ry="2" />
<text  x="1432.78" y="207.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:691 (4,825,134 samples, 12.71%)</title><rect x="327.3" y="133" width="200.8" height="15.0" fill="rgb(236,136,0)" rx="2" ry="2" />
<text  x="330.32" y="143.5" >DataFrame_misc.tcc:691</text>
</g>
<g >
<title>DataFrame_get.tcc:1090 (314,863 samples, 0.83%)</title><rect x="557.9" y="181" width="13.1" height="15.0" fill="rgb(201,101,0)" rx="2" ry="2" />
<text  x="560.88" y="191.5" ></text>
</g>
</g>
</svg>
