<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="460" onload="init(evt)" viewBox="0 0 1200 460" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#ffffff" offset="5%" />
		<stop stop-color="#ffffff" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="460.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" > </text>
<text id="details" x="10.00" y="443" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="443" > </text>
<g id="frames">
<g >
<title>DataFrame.tcc:1172 (269,951 samples, 0.71%)</title><rect x="1132.1" y="307" width="8.3" height="29.0" fill="rgb(184,184,184)" rx="2" ry="2" />
<text  x="1135.06" y="324.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:691[w] (2,931,740 samples, 7.72%)</title><rect x="620.3" y="217" width="91.1" height="29.0" fill="rgb(204,57,57)" rx="2" ry="2" />
<text  x="623.26" y="234.5" >DataFrame_..</text>
</g>
<g >
<title>DataFrame_misc.tcc:684[r] (597,708 samples, 1.57%)</title><rect x="33.3" y="217" width="18.6" height="29.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="36.29" y="234.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:197 (21,447 samples, 0.06%)</title><rect x="1188.6" y="157" width="0.7" height="29.0" fill="rgb(183,183,183)" rx="2" ry="2" />
<text  x="1191.64" y="174.5" ></text>
</g>
<g >
<title>DataFrame_get.tcc:1108 (5,754,892 samples, 15.16%)</title><rect x="217.4" y="307" width="178.9" height="29.0" fill="rgb(170,170,170)" rx="2" ry="2" />
<text  x="220.40" y="324.5" >DataFrame_get.tcc:1108</text>
</g>
<g >
<title>DataFrame_misc.tcc:451 (247,686 samples, 0.65%)</title><rect x="941.8" y="247" width="7.7" height="29.0" fill="rgb(171,171,171)" rx="2" ry="2" />
<text  x="944.78" y="264.5" ></text>
</g>
<g >
<title>DataFrame_standalone.tcc:56[w] (210,856 samples, 0.56%)</title><rect x="1162.4" y="67" width="6.6" height="29.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="1165.43" y="84.5" ></text>
</g>
<g >
<title>DataFrame_get.tcc:1104[w] (111,239 samples, 0.29%)</title><rect x="213.9" y="307" width="3.5" height="29.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text  x="216.94" y="324.5" ></text>
</g>
<g >
<title>main.cc:274 (237,249 samples, 0.62%)</title><rect x="977.8" y="337" width="7.4" height="29.0" fill="rgb(207,207,207)" rx="2" ry="2" />
<text  x="980.83" y="354.5" ></text>
</g>
<g >
<title>main.cc:260 (384,864 samples, 1.01%)</title><rect x="951.9" y="337" width="12.0" height="29.0" fill="rgb(185,185,185)" rx="2" ry="2" />
<text  x="954.94" y="354.5" ></text>
</g>
<g >
<title>main.cc:264 (26,358 samples, 0.07%)</title><rect x="963.9" y="337" width="0.8" height="29.0" fill="rgb(176,176,176)" rx="2" ry="2" />
<text  x="966.90" y="354.5" ></text>
</g>
<g >
<title>DataFrameStatsVisitors.h:1776 (21,750 samples, 0.06%)</title><rect x="1140.4" y="277" width="0.7" height="29.0" fill="rgb(189,189,189)" rx="2" ry="2" />
<text  x="1143.45" y="294.5" ></text>
</g>
<g >
<title>DataFrame_get.tcc:1104[r] (191,557 samples, 0.50%)</title><rect x="711.4" y="307" width="6.0" height="29.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="714.44" y="324.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:691[r] (26,347 samples, 0.07%)</title><rect x="835.5" y="277" width="0.8" height="29.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="838.46" y="294.5" ></text>
</g>
<g >
<title>main.cc:264 (52,716 samples, 0.14%)</title><rect x="1082.8" y="337" width="1.6" height="29.0" fill="rgb(201,201,201)" rx="2" ry="2" />
<text  x="1085.76" y="354.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:691[r] (3,086,383 samples, 8.13%)</title><rect x="718.5" y="217" width="95.9" height="29.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="721.47" y="234.5" >DataFrame_m..</text>
</g>
<g >
<title>DataFrame_misc.tcc:691[r] (26,358 samples, 0.07%)</title><rect x="443.5" y="277" width="0.8" height="29.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="446.52" y="294.5" ></text>
</g>
<g >
<title>HeteroVector.tcc:163 (21,447 samples, 0.06%)</title><rect x="1188.6" y="307" width="0.7" height="29.0" fill="rgb(188,188,188)" rx="2" ry="2" />
<text  x="1191.64" y="324.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:684[r] (643,492 samples, 1.70%)</title><rect x="226.3" y="217" width="20.0" height="29.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="229.29" y="234.5" ></text>
</g>
<g >
<title>main.cc:85[r] (105,428 samples, 0.28%)</title><rect x="197.6" y="307" width="3.3" height="29.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="200.58" y="324.5" ></text>
</g>
<g >
<title>DataFrame.tcc:62 (632,572 samples, 1.67%)</title><rect x="1169.0" y="217" width="19.6" height="29.0" fill="rgb(187,187,187)" rx="2" ry="2" />
<text  x="1171.98" y="234.5" ></text>
</g>
<g >
<title>DataFrame_get.tcc:1090 (105,453 samples, 0.28%)</title><rect x="419.3" y="307" width="3.3" height="29.0" fill="rgb(173,173,173)" rx="2" ry="2" />
<text  x="422.31" y="324.5" ></text>
</g>
<g >
<title>HeteroVector.cc:51 (237,218 samples, 0.62%)</title><rect x="998.3" y="217" width="7.4" height="29.0" fill="rgb(175,175,175)" rx="2" ry="2" />
<text  x="1001.31" y="234.5" ></text>
</g>
<g >
<title>main.cc:137 (9,397,048 samples, 24.75%)</title><rect x="419.3" y="337" width="292.1" height="29.0" fill="rgb(198,198,198)" rx="2" ry="2" />
<text  x="422.30" y="354.5" >main.cc:137</text>
</g>
<g >
<title>HeteroVector.cc:46 (237,216 samples, 0.62%)</title><rect x="1118.0" y="247" width="7.4" height="29.0" fill="rgb(185,185,185)" rx="2" ry="2" />
<text  x="1120.99" y="264.5" ></text>
</g>
<g >
<title>DataFrame_get.tcc:1108 (3,110,960 samples, 8.19%)</title><rect x="835.4" y="307" width="96.7" height="29.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="838.45" y="324.5" >DataFrame_g..</text>
</g>
<g >
<title>main.cc:316 (4,075,426 samples, 10.74%)</title><rect x="815.1" y="367" width="126.7" height="29.0" fill="rgb(197,197,197)" rx="2" ry="2" />
<text  x="818.11" y="384.5" >main.cc:316</text>
</g>
<g >
<title>DataFrame_standalone.tcc:56[r] (210,855 samples, 0.56%)</title><rect x="1155.9" y="67" width="6.5" height="29.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="1158.87" y="84.5" ></text>
</g>
<g >
<title>main.cc:88 (2)[r] (55,620 samples, 0.15%)</title><rect x="396.3" y="337" width="1.7" height="29.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="399.27" y="354.5" ></text>
</g>
<g >
<title>DataFrame_standalone.tcc:48 (210,857 samples, 0.56%)</title><rect x="1029.4" y="37" width="6.5" height="29.0" fill="rgb(202,202,202)" rx="2" ry="2" />
<text  x="1032.38" y="54.5" ></text>
</g>
<g >
<title>DataFrameStatsVisitors.h:1776 (269,951 samples, 0.71%)</title><rect x="1132.1" y="277" width="8.3" height="29.0" fill="rgb(192,192,192)" rx="2" ry="2" />
<text  x="1135.06" y="294.5" ></text>
</g>
<g >
<title>HeteroVector.tcc:163 (237,218 samples, 0.62%)</title><rect x="1029.4" y="97" width="7.4" height="29.0" fill="rgb(206,206,206)" rx="2" ry="2" />
<text  x="1032.38" y="114.5" ></text>
</g>
<g >
<title>main.cc:107 (2) (210,856 samples, 0.56%)</title><rect x="398.0" y="337" width="6.6" height="29.0" fill="rgb(185,185,185)" rx="2" ry="2" />
<text  x="401.00" y="354.5" ></text>
</g>
<g >
<title>HeteroVector.tcc:160 (237,225 samples, 0.62%)</title><rect x="1148.5" y="127" width="7.4" height="29.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="1151.50" y="144.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:182[w] (21,750 samples, 0.06%)</title><rect x="1140.4" y="247" width="0.7" height="29.0" fill="rgb(241,109,109)" rx="2" ry="2" />
<text  x="1143.45" y="264.5" ></text>
</g>
<g >
<title>DataFrameStatsVisitors.h:1776 (189,110 samples, 0.50%)</title><rect x="1126.2" y="277" width="5.9" height="29.0" fill="rgb(209,209,209)" rx="2" ry="2" />
<text  x="1129.18" y="294.5" ></text>
</g>
<g >
<title>HeteroVector.tcc:53[w] (237,214 samples, 0.62%)</title><rect x="998.3" y="157" width="7.4" height="29.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="1001.31" y="174.5" ></text>
</g>
<g >
<title>DataFrame.tcc:690 (1,528,773 samples, 4.03%)</title><rect x="1141.1" y="307" width="47.5" height="29.0" fill="rgb(206,206,206)" rx="2" ry="2" />
<text  x="1144.12" y="324.5" >Data..</text>
</g>
<g >
<title>DataFrame.tcc:53[w] (210,856 samples, 0.56%)</title><rect x="1141.1" y="217" width="6.6" height="29.0" fill="rgb(220,79,79)" rx="2" ry="2" />
<text  x="1144.13" y="234.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:691[w] (12,453 samples, 0.03%)</title><rect x="26.7" y="277" width="0.4" height="29.0" fill="rgb(201,51,51)" rx="2" ry="2" />
<text  x="29.70" y="294.5" ></text>
</g>
<g >
<title>main.cc:137[r] (26,358 samples, 0.07%)</title><rect x="417.7" y="307" width="0.8" height="29.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="420.66" y="324.5" ></text>
</g>
<g >
<title>DataFrame_standalone.tcc:56[r] (421,711 samples, 1.11%)</title><rect x="1169.0" y="187" width="13.1" height="29.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="1171.98" y="204.5" ></text>
</g>
<g >
<title>DataFrameStatsVisitors.h:1776 (206,888 samples, 0.54%)</title><rect x="1006.5" y="277" width="6.4" height="29.0" fill="rgb(195,195,195)" rx="2" ry="2" />
<text  x="1009.51" y="294.5" ></text>
</g>
<g >
<title>main.cc:308 (5,722,260 samples, 15.07%)</title><rect x="19.7" y="367" width="177.9" height="29.0" fill="rgb(195,195,195)" rx="2" ry="2" />
<text  x="22.71" y="384.5" >main.cc:308</text>
</g>
<g >
<title>DataFrame.tcc:53[w] (210,856 samples, 0.56%)</title><rect x="1022.0" y="217" width="6.6" height="29.0" fill="rgb(214,71,71)" rx="2" ry="2" />
<text  x="1025.01" y="234.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:691[w] (20,258 samples, 0.05%)</title><rect x="814.4" y="217" width="0.6" height="29.0" fill="rgb(245,116,116)" rx="2" ry="2" />
<text  x="817.41" y="234.5" ></text>
</g>
<g >
<title>HeteroVector.tcc:163 (421,729 samples, 1.11%)</title><rect x="1036.8" y="127" width="13.1" height="29.0" fill="rgb(182,182,182)" rx="2" ry="2" />
<text  x="1039.75" y="144.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:182[w] (3,998 samples, 0.01%)</title><rect x="1021.9" y="247" width="0.1" height="29.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="1024.88" y="264.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:84 (237,221 samples, 0.62%)</title><rect x="1148.5" y="67" width="7.4" height="29.0" fill="rgb(207,207,207)" rx="2" ry="2" />
<text  x="1151.50" y="84.5" ></text>
</g>
<g >
<title>HeteroVector.tcc:221 (3,083,910 samples, 8.12%)</title><rect x="836.3" y="277" width="95.8" height="29.0" fill="rgb(197,197,197)" rx="2" ry="2" />
<text  x="839.29" y="294.5" >HeteroVecto..</text>
</g>
<g >
<title>HeteroVector.tcc:163 (421,728 samples, 1.11%)</title><rect x="1155.9" y="127" width="13.1" height="29.0" fill="rgb(208,208,208)" rx="2" ry="2" />
<text  x="1158.87" y="144.5" ></text>
</g>
<g >
<title>HeteroVector.h:233 (658,953 samples, 1.74%)</title><rect x="1148.5" y="187" width="20.5" height="29.0" fill="rgb(182,182,182)" rx="2" ry="2" />
<text  x="1151.50" y="204.5" ></text>
</g>
<g >
<title>HeteroVector.tcc:212 (21,447 samples, 0.06%)</title><rect x="1188.6" y="217" width="0.7" height="29.0" fill="rgb(178,178,178)" rx="2" ry="2" />
<text  x="1191.64" y="234.5" ></text>
</g>
<g >
<title>main.cc:175[w] (210,856 samples, 0.56%)</title><rect x="823.3" y="337" width="6.6" height="29.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="826.33" y="354.5" ></text>
</g>
<g >
<title>HeteroVector.tcc:53[w] (237,213 samples, 0.62%)</title><rect x="1118.0" y="157" width="7.4" height="29.0" fill="rgb(220,80,80)" rx="2" ry="2" />
<text  x="1120.99" y="174.5" ></text>
</g>
<g >
<title>DataFrame_standalone.tcc:56[w] (26,357 samples, 0.07%)</title><rect x="1155.1" y="37" width="0.8" height="29.0" fill="rgb(231,96,96)" rx="2" ry="2" />
<text  x="1158.05" y="54.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:691[w] (26,177 samples, 0.07%)</title><rect x="444.3" y="277" width="0.9" height="29.0" fill="rgb(251,124,124)" rx="2" ry="2" />
<text  x="447.34" y="294.5" ></text>
</g>
<g >
<title>DataFrame.tcc:1105 (658,928 samples, 1.74%)</title><rect x="1104.9" y="307" width="20.5" height="29.0" fill="rgb(175,175,175)" rx="2" ry="2" />
<text  x="1107.88" y="324.5" ></text>
</g>
<g >
<title>main.cc:322 (3,849,741 samples, 10.14%)</title><rect x="1069.6" y="367" width="119.7" height="29.0" fill="rgb(175,175,175)" rx="2" ry="2" />
<text  x="1072.65" y="384.5" >main.cc:322</text>
</g>
<g >
<title>DataFrame_standalone.tcc:56[w] (26,358 samples, 0.07%)</title><rect x="1035.9" y="37" width="0.9" height="29.0" fill="rgb(221,80,80)" rx="2" ry="2" />
<text  x="1038.93" y="54.5" ></text>
</g>
<g >
<title>main.cc:145[r] (26,358 samples, 0.07%)</title><rect x="418.5" y="307" width="0.8" height="29.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="421.48" y="324.5" ></text>
</g>
<g >
<title>HeteroVector.tcc:171 (5,435,207 samples, 14.32%)</title><rect x="27.1" y="247" width="168.9" height="29.0" fill="rgb(196,196,196)" rx="2" ry="2" />
<text  x="30.09" y="264.5" >HeteroVector.tcc:171</text>
</g>
<g >
<title>DataFrame_standalone.tcc:56[r] (210,856 samples, 0.56%)</title><rect x="1036.8" y="67" width="6.5" height="29.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="1039.75" y="84.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:684[r] (4,627 samples, 0.01%)</title><rect x="718.3" y="217" width="0.2" height="29.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="721.33" y="234.5" ></text>
</g>
<g >
<title>DataFrame_get.tcc:1104[r] (210,856 samples, 0.56%)</title><rect x="429.1" y="307" width="6.5" height="29.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="432.09" y="324.5" ></text>
</g>
<g >
<title>DataFrame.tcc:61 (658,951 samples, 1.74%)</title><rect x="1029.4" y="217" width="20.5" height="29.0" fill="rgb(202,202,202)" rx="2" ry="2" />
<text  x="1032.38" y="234.5" ></text>
</g>
<g >
<title>DataFrame_get.tcc:185 (2)[r] (98,063 samples, 0.26%)</title><rect x="16.7" y="307" width="3.0" height="29.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="19.66" y="324.5" ></text>
</g>
<g >
<title>main.cc:320 (3,786,936 samples, 9.98%)</title><rect x="951.9" y="367" width="117.7" height="29.0" fill="rgb(199,199,199)" rx="2" ry="2" />
<text  x="954.94" y="384.5" >main.cc:320</text>
</g>
<g >
<title>simple_time.hpp:67 (210,856 samples, 0.56%)</title><rect x="942.9" y="187" width="6.6" height="29.0" fill="rgb(199,199,199)" rx="2" ry="2" />
<text  x="945.93" y="204.5" ></text>
</g>
<g >
<title>main.cc:209[w] (52,721 samples, 0.14%)</title><rect x="949.5" y="337" width="1.6" height="29.0" fill="rgb(240,109,109)" rx="2" ry="2" />
<text  x="952.48" y="354.5" ></text>
</g>
<g >
<title>HeteroVector.tcc:171 (3,114,354 samples, 8.20%)</title><rect x="718.2" y="247" width="96.8" height="29.0" fill="rgb(202,202,202)" rx="2" ry="2" />
<text  x="721.23" y="264.5" >HeteroVecto..</text>
</g>
<g >
<title>DataFrame_standalone.tcc:56[w] (210,856 samples, 0.56%)</title><rect x="1043.3" y="67" width="6.6" height="29.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1046.31" y="84.5" ></text>
</g>
<g >
<title>main.cc:34 (22,197 samples, 0.06%)</title><rect x="1189.3" y="367" width="0.7" height="29.0" fill="rgb(170,170,170)" rx="2" ry="2" />
<text  x="1192.31" y="384.5" ></text>
</g>
<g >
<title>DataFrame.tcc:56[r] (26,356 samples, 0.07%)</title><rect x="1147.7" y="217" width="0.8" height="29.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="1150.68" y="234.5" ></text>
</g>
<g >
<title>main.cc:62 (22,197 samples, 0.06%)</title><rect x="1189.3" y="307" width="0.7" height="29.0" fill="rgb(178,178,178)" rx="2" ry="2" />
<text  x="1192.31" y="324.5" ></text>
</g>
<g >
<title>DataFrame.tcc:1108 (1,528,773 samples, 4.03%)</title><rect x="1141.1" y="277" width="47.5" height="29.0" fill="rgb(187,187,187)" rx="2" ry="2" />
<text  x="1144.12" y="294.5" >Data..</text>
</g>
<g >
<title>HeteroVector.tcc:221 (8,565,355 samples, 22.56%)</title><rect x="445.2" y="277" width="266.2" height="29.0" fill="rgb(190,190,190)" rx="2" ry="2" />
<text  x="448.16" y="294.5" >HeteroVector.tcc:221</text>
</g>
<g >
<title>DataFrame_misc.tcc:691[r] (25,441 samples, 0.07%)</title><rect x="717.4" y="277" width="0.8" height="29.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="720.44" y="294.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:197 (3,998 samples, 0.01%)</title><rect x="1069.5" y="157" width="0.1" height="29.0" fill="rgb(173,173,173)" rx="2" ry="2" />
<text  x="1072.53" y="174.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:691[r] (3,267,789 samples, 8.61%)</title><rect x="246.3" y="217" width="101.6" height="29.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="249.29" y="234.5" >DataFrame_mi..</text>
</g>
<g >
<title>DataFrame.tcc:1169 (189,122 samples, 0.50%)</title><rect x="1126.2" y="307" width="5.9" height="29.0" fill="rgb(177,177,177)" rx="2" ry="2" />
<text  x="1129.18" y="324.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:197 (287,729 samples, 0.76%)</title><rect x="1012.9" y="247" width="9.0" height="29.0" fill="rgb(177,177,177)" rx="2" ry="2" />
<text  x="1015.94" y="264.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:691[w] (12,365 samples, 0.03%)</title><rect x="931.8" y="217" width="0.3" height="29.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="934.76" y="234.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:84 (237,218 samples, 0.62%)</title><rect x="1029.4" y="67" width="7.4" height="29.0" fill="rgb(190,190,190)" rx="2" ry="2" />
<text  x="1032.38" y="84.5" ></text>
</g>
<g >
<title>HeteroVector.tcc:171 (5,691,340 samples, 14.99%)</title><rect x="219.4" y="247" width="176.9" height="29.0" fill="rgb(194,194,194)" rx="2" ry="2" />
<text  x="222.37" y="264.5" >HeteroVector.tcc:171</text>
</g>
<g >
<title>main.cc:111[r] (210,856 samples, 0.56%)</title><rect x="411.1" y="307" width="6.6" height="29.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="414.11" y="324.5" ></text>
</g>
<g >
<title>main.cc:310 (6,448,106 samples, 16.99%)</title><rect x="197.6" y="367" width="200.4" height="29.0" fill="rgb(178,178,178)" rx="2" ry="2" />
<text  x="200.58" y="384.5" >main.cc:310</text>
</g>
<g >
<title>main.cc:281 (1) (2,716,735 samples, 7.16%)</title><rect x="985.2" y="337" width="84.4" height="29.0" fill="rgb(178,178,178)" rx="2" ry="2" />
<text  x="988.21" y="354.5" >main.cc:2..</text>
</g>
<g >
<title>main.cc:71 (312,496 samples, 0.82%)</title><rect x="10.0" y="337" width="9.7" height="29.0" fill="rgb(188,188,188)" rx="2" ry="2" />
<text  x="13.00" y="354.5" ></text>
</g>
<g >
<title>main.cc:110[r] (210,856 samples, 0.56%)</title><rect x="404.6" y="307" width="6.5" height="29.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="407.56" y="324.5" ></text>
</g>
<g >
<title>DataFrame.tcc:61 (658,953 samples, 1.74%)</title><rect x="1148.5" y="217" width="20.5" height="29.0" fill="rgb(182,182,182)" rx="2" ry="2" />
<text  x="1151.50" y="234.5" ></text>
</g>
<g >
<title>DataFrame_get.tcc:1088 (105,428 samples, 0.28%)</title><rect x="197.6" y="337" width="3.3" height="29.0" fill="rgb(206,206,206)" rx="2" ry="2" />
<text  x="200.58" y="354.5" ></text>
</g>
<g >
<title>HeteroVector.tcc:212 (658,953 samples, 1.74%)</title><rect x="1148.5" y="157" width="20.5" height="29.0" fill="rgb(176,176,176)" rx="2" ry="2" />
<text  x="1151.50" y="174.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:684[r] (43,935 samples, 0.12%)</title><rect x="442.2" y="277" width="1.3" height="29.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="445.16" y="294.5" ></text>
</g>
<g >
<title>main.cc:183[r] (7,491 samples, 0.02%)</title><rect x="815.1" y="307" width="0.2" height="29.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="818.11" y="324.5" ></text>
</g>
<g >
<title>DataFrame.tcc:1199 (21,750 samples, 0.06%)</title><rect x="1140.4" y="307" width="0.7" height="29.0" fill="rgb(204,204,204)" rx="2" ry="2" />
<text  x="1143.45" y="324.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:182[w] (189,110 samples, 0.50%)</title><rect x="1126.2" y="247" width="5.9" height="29.0" fill="rgb(239,108,108)" rx="2" ry="2" />
<text  x="1129.18" y="264.5" ></text>
</g>
<g >
<title>main.cc:175[r] (256,942 samples, 0.68%)</title><rect x="815.3" y="337" width="8.0" height="29.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="818.34" y="354.5" ></text>
</g>
<g >
<title>main.cc:196 (247,686 samples, 0.65%)</title><rect x="941.8" y="307" width="7.7" height="29.0" fill="rgb(177,177,177)" rx="2" ry="2" />
<text  x="944.78" y="324.5" ></text>
</g>
<g >
<title>HeteroVector.tcc:160 (237,222 samples, 0.62%)</title><rect x="1029.4" y="127" width="7.4" height="29.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="1032.38" y="144.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:197 (269,951 samples, 0.71%)</title><rect x="1132.1" y="247" width="8.3" height="29.0" fill="rgb(170,170,170)" rx="2" ry="2" />
<text  x="1135.06" y="264.5" ></text>
</g>
<g >
<title>DataFrame_get.tcc:1104[w] (99,618 samples, 0.26%)</title><rect x="22.8" y="307" width="3.1" height="29.0" fill="rgb(250,123,123)" rx="2" ry="2" />
<text  x="25.81" y="324.5" ></text>
</g>
<g >
<title>main.cc:314 (12,786,545 samples, 33.68%)</title><rect x="417.7" y="367" width="397.4" height="29.0" fill="rgb(191,191,191)" rx="2" ry="2" />
<text  x="420.66" y="384.5" >main.cc:314</text>
</g>
<g >
<title>DataFrame_standalone.tcc:56[w] (210,856 samples, 0.56%)</title><rect x="1182.1" y="187" width="6.5" height="29.0" fill="rgb(227,89,89)" rx="2" ry="2" />
<text  x="1185.09" y="204.5" ></text>
</g>
<g >
<title>DataFrame.tcc:1105 (658,943 samples, 1.74%)</title><rect x="985.2" y="307" width="20.5" height="29.0" fill="rgb(205,205,205)" rx="2" ry="2" />
<text  x="988.21" y="324.5" ></text>
</g>
<g >
<title>HeteroVector.cc:51 (237,214 samples, 0.62%)</title><rect x="1118.0" y="217" width="7.4" height="29.0" fill="rgb(196,196,196)" rx="2" ry="2" />
<text  x="1120.99" y="234.5" ></text>
</g>
<g >
<title>DataFrame_get.tcc:1108 (3,139,999 samples, 8.27%)</title><rect x="717.4" y="307" width="97.6" height="29.0" fill="rgb(170,170,170)" rx="2" ry="2" />
<text  x="720.44" y="324.5" >DataFrame_g..</text>
</g>
<g >
<title>DataFrameStatsVisitors.h:1776 (21,447 samples, 0.06%)</title><rect x="1188.6" y="187" width="0.7" height="29.0" fill="rgb(201,201,201)" rx="2" ry="2" />
<text  x="1191.64" y="204.5" ></text>
</g>
<g >
<title>HeteroVector.h:233 (3,998 samples, 0.01%)</title><rect x="1069.5" y="247" width="0.1" height="29.0" fill="rgb(183,183,183)" rx="2" ry="2" />
<text  x="1072.53" y="264.5" ></text>
</g>
<g >
<title>HeteroVector.cc:59 (237,218 samples, 0.62%)</title><rect x="998.3" y="187" width="7.4" height="29.0" fill="rgb(189,189,189)" rx="2" ry="2" />
<text  x="1001.31" y="204.5" ></text>
</g>
<g >
<title>DataFrameStatsVisitors.h:1776 (3,998 samples, 0.01%)</title><rect x="1021.9" y="277" width="0.1" height="29.0" fill="rgb(174,174,174)" rx="2" ry="2" />
<text  x="1024.88" y="294.5" ></text>
</g>
<g >
<title>main.cc:88 (2)[r] (49,809 samples, 0.13%)</title><rect x="196.0" y="337" width="1.6" height="29.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="199.03" y="354.5" ></text>
</g>
<g >
<title>simple_time.hpp:23 (421,712 samples, 1.11%)</title><rect x="404.6" y="337" width="13.1" height="29.0" fill="rgb(171,171,171)" rx="2" ry="2" />
<text  x="407.56" y="354.5" ></text>
</g>
<g >
<title>main.cc:269 (421,710 samples, 1.11%)</title><rect x="1084.4" y="337" width="13.1" height="29.0" fill="rgb(175,175,175)" rx="2" ry="2" />
<text  x="1087.40" y="354.5" ></text>
</g>
<g >
<title>main.cc:145 (3,334,491 samples, 8.78%)</title><rect x="711.4" y="337" width="103.6" height="29.0" fill="rgb(205,205,205)" rx="2" ry="2" />
<text  x="714.39" y="354.5" >main.cc:145</text>
</g>
<g >
<title>DataFrame.tcc:690 (1,528,770 samples, 4.03%)</title><rect x="1022.0" y="307" width="47.5" height="29.0" fill="rgb(190,190,190)" rx="2" ry="2" />
<text  x="1025.01" y="324.5" >Data..</text>
</g>
<g >
<title>DataFrame_standalone.tcc:56[r] (421,712 samples, 1.11%)</title><rect x="1049.9" y="187" width="13.1" height="29.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="1052.86" y="204.5" ></text>
</g>
<g >
<title>DataFrame.tcc:1172 (287,737 samples, 0.76%)</title><rect x="1012.9" y="307" width="9.0" height="29.0" fill="rgb(191,191,191)" rx="2" ry="2" />
<text  x="1015.94" y="324.5" ></text>
</g>
<g >
<title>DataFrame_get.tcc:238[r] (36,830 samples, 0.10%)</title><rect x="941.8" y="157" width="1.1" height="29.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="944.78" y="174.5" ></text>
</g>
<g >
<title>DataFrame_get.tcc:1090[w] (216,667 samples, 0.57%)</title><rect x="200.9" y="307" width="6.7" height="29.0" fill="rgb(227,90,90)" rx="2" ry="2" />
<text  x="203.86" y="324.5" ></text>
</g>
<g >
<title>HeteroVector.tcc:212 (658,951 samples, 1.74%)</title><rect x="1029.4" y="157" width="20.5" height="29.0" fill="rgb(205,205,205)" rx="2" ry="2" />
<text  x="1032.38" y="174.5" ></text>
</g>
<g >
<title>main.cc:303 (22,197 samples, 0.06%)</title><rect x="1189.3" y="337" width="0.7" height="29.0" fill="rgb(191,191,191)" rx="2" ry="2" />
<text  x="1192.31" y="354.5" ></text>
</g>
<g >
<title>DataFrame.h:86 (658,927 samples, 1.74%)</title><rect x="1104.9" y="277" width="20.5" height="29.0" fill="rgb(191,191,191)" rx="2" ry="2" />
<text  x="1107.88" y="294.5" ></text>
</g>
<g >
<title>main.cc:183 (3,289,994 samples, 8.67%)</title><rect x="829.9" y="337" width="102.2" height="29.0" fill="rgb(188,188,188)" rx="2" ry="2" />
<text  x="832.88" y="354.5" >main.cc:183</text>
</g>
<g >
<title>main.cc:306 (312,496 samples, 0.82%)</title><rect x="10.0" y="367" width="9.7" height="29.0" fill="rgb(208,208,208)" rx="2" ry="2" />
<text  x="13.00" y="384.5" ></text>
</g>
<g >
<title>DataFrame_get.tcc:180[w] (214,425 samples, 0.56%)</title><rect x="10.0" y="307" width="6.7" height="29.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="13.00" y="324.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:684[r] (1,840,755 samples, 4.85%)</title><rect x="458.2" y="217" width="57.2" height="29.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="461.18" y="234.5" >DataFr..</text>
</g>
<g >
<title>DataFrame.tcc:661 (1,528,770 samples, 4.03%)</title><rect x="1022.0" y="247" width="47.5" height="29.0" fill="rgb(193,193,193)" rx="2" ry="2" />
<text  x="1025.01" y="264.5" >Data..</text>
</g>
<g >
<title>DataFrame_get.tcc:1090[w] (99,618 samples, 0.26%)</title><rect x="19.7" y="307" width="3.1" height="29.0" fill="rgb(224,85,85)" rx="2" ry="2" />
<text  x="22.72" y="324.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:691[w] (1,557,345 samples, 4.10%)</title><rect x="347.9" y="217" width="48.4" height="29.0" fill="rgb(222,83,83)" rx="2" ry="2" />
<text  x="350.87" y="234.5" >Data..</text>
</g>
<g >
<title>main.cc:41 (310,072 samples, 0.82%)</title><rect x="932.1" y="337" width="9.7" height="29.0" fill="rgb(170,170,170)" rx="2" ry="2" />
<text  x="935.14" y="354.5" ></text>
</g>
<g >
<title>DataFrameStatsVisitors.h:1776 (287,729 samples, 0.76%)</title><rect x="1012.9" y="277" width="9.0" height="29.0" fill="rgb(176,176,176)" rx="2" ry="2" />
<text  x="1015.94" y="294.5" ></text>
</g>
<g >
<title>main.cc:85 (5,672,448 samples, 14.94%)</title><rect x="19.7" y="337" width="176.3" height="29.0" fill="rgb(173,173,173)" rx="2" ry="2" />
<text  x="22.71" y="354.5" >main.cc:85</text>
</g>
<g >
<title>DataFrame.tcc:661 (1,528,773 samples, 4.03%)</title><rect x="1141.1" y="247" width="47.5" height="29.0" fill="rgb(195,195,195)" rx="2" ry="2" />
<text  x="1144.12" y="264.5" >Data..</text>
</g>
<g >
<title>main.cc:269 (421,710 samples, 1.11%)</title><rect x="964.7" y="337" width="13.1" height="29.0" fill="rgb(194,194,194)" rx="2" ry="2" />
<text  x="967.72" y="354.5" ></text>
</g>
<g >
<title>HeteroVector.h:233 (21,447 samples, 0.06%)</title><rect x="1188.6" y="247" width="0.7" height="29.0" fill="rgb(176,176,176)" rx="2" ry="2" />
<text  x="1191.64" y="264.5" ></text>
</g>
<g >
<title>DataFrameStatsVisitors.h:1776 (3,998 samples, 0.01%)</title><rect x="1069.5" y="187" width="0.1" height="29.0" fill="rgb(174,174,174)" rx="2" ry="2" />
<text  x="1072.53" y="204.5" ></text>
</g>
<g >
<title>HeteroVector.tcc:221 (5,435,210 samples, 14.32%)</title><rect x="27.1" y="277" width="168.9" height="29.0" fill="rgb(208,208,208)" rx="2" ry="2" />
<text  x="30.09" y="294.5" >HeteroVector.tcc:221</text>
</g>
<g >
<title>DataFrame_misc.tcc:691[r] (25,694 samples, 0.07%)</title><rect x="218.1" y="277" width="0.8" height="29.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="221.14" y="294.5" ></text>
</g>
<g >
<title>DataFrame_read.tcc:469[w] (22,192 samples, 0.06%)</title><rect x="1189.3" y="277" width="0.7" height="29.0" fill="rgb(239,107,107)" rx="2" ry="2" />
<text  x="1192.31" y="294.5" ></text>
</g>
<g >
<title>main.cc:281 (1) (2,716,342 samples, 7.16%)</title><rect x="1104.9" y="337" width="84.4" height="29.0" fill="rgb(172,172,172)" rx="2" ry="2" />
<text  x="1107.88" y="354.5" >main.cc:2..</text>
</g>
<g >
<title>HeteroVector.tcc:163 (3,998 samples, 0.01%)</title><rect x="1069.5" y="307" width="0.1" height="29.0" fill="rgb(180,180,180)" rx="2" ry="2" />
<text  x="1072.53" y="324.5" ></text>
</g>
<g >
<title>DataFrame.tcc:1169 (206,916 samples, 0.55%)</title><rect x="1006.5" y="307" width="6.4" height="29.0" fill="rgb(195,195,195)" rx="2" ry="2" />
<text  x="1009.51" y="324.5" ></text>
</g>
<g >
<title>main.cc:260 (421,712 samples, 1.11%)</title><rect x="1069.6" y="337" width="13.2" height="29.0" fill="rgb(201,201,201)" rx="2" ry="2" />
<text  x="1072.65" y="354.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:84 (421,729 samples, 1.11%)</title><rect x="1036.8" y="97" width="13.1" height="29.0" fill="rgb(177,177,177)" rx="2" ry="2" />
<text  x="1039.75" y="114.5" ></text>
</g>
<g >
<title>DataFrameStatsVisitors.h:267[r] (210,856 samples, 0.56%)</title><rect x="942.9" y="127" width="6.6" height="29.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="945.93" y="144.5" ></text>
</g>
<g >
<title>DataFrame_get.tcc:1104[r] (177,322 samples, 0.47%)</title><rect x="829.9" y="307" width="5.5" height="29.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="832.91" y="324.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:84 (421,728 samples, 1.11%)</title><rect x="1155.9" y="97" width="13.1" height="29.0" fill="rgb(204,204,204)" rx="2" ry="2" />
<text  x="1158.87" y="114.5" ></text>
</g>
<g >
<title>HeteroVector.tcc:171 (3,083,907 samples, 8.12%)</title><rect x="836.3" y="247" width="95.8" height="29.0" fill="rgb(173,173,173)" rx="2" ry="2" />
<text  x="839.29" y="264.5" >HeteroVecto..</text>
</g>
<g >
<title>DataFrame_get.tcc:220 (247,686 samples, 0.65%)</title><rect x="941.8" y="277" width="7.7" height="29.0" fill="rgb(208,208,208)" rx="2" ry="2" />
<text  x="944.78" y="294.5" ></text>
</g>
<g >
<title>DataFrame_get.tcc:238 (210,856 samples, 0.56%)</title><rect x="942.9" y="157" width="6.6" height="29.0" fill="rgb(173,173,173)" rx="2" ry="2" />
<text  x="945.93" y="174.5" ></text>
</g>
<g >
<title>HeteroVector.cc:59 (237,214 samples, 0.62%)</title><rect x="1118.0" y="187" width="7.4" height="29.0" fill="rgb(179,179,179)" rx="2" ry="2" />
<text  x="1120.99" y="204.5" ></text>
</g>
<g >
<title>HeteroVector.cc:46 (237,220 samples, 0.62%)</title><rect x="998.3" y="247" width="7.4" height="29.0" fill="rgb(209,209,209)" rx="2" ry="2" />
<text  x="1001.31" y="264.5" ></text>
</g>
<g >
<title>DataFrame.tcc:1199 (3,999 samples, 0.01%)</title><rect x="1021.9" y="307" width="0.1" height="29.0" fill="rgb(183,183,183)" rx="2" ry="2" />
<text  x="1024.88" y="324.5" ></text>
</g>
<g >
<title>DataFrame_get.tcc:1088 (7,491 samples, 0.02%)</title><rect x="815.1" y="337" width="0.2" height="29.0" fill="rgb(182,182,182)" rx="2" ry="2" />
<text  x="818.11" y="354.5" ></text>
</g>
<g >
<title>DataFrame_standalone.tcc:56[w] (210,856 samples, 0.56%)</title><rect x="1063.0" y="187" width="6.5" height="29.0" fill="rgb(250,123,123)" rx="2" ry="2" />
<text  x="1065.97" y="204.5" ></text>
</g>
<g >
<title>DataFrame.tcc:62 (632,570 samples, 1.67%)</title><rect x="1049.9" y="217" width="19.6" height="29.0" fill="rgb(188,188,188)" rx="2" ry="2" />
<text  x="1052.86" y="234.5" ></text>
</g>
<g >
<title>main.cc:210[w] (26,359 samples, 0.07%)</title><rect x="951.1" y="337" width="0.8" height="29.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="954.12" y="354.5" ></text>
</g>
<g >
<title>DataFrame_get.tcc:1104[w] (209,410 samples, 0.55%)</title><rect x="435.6" y="307" width="6.6" height="29.0" fill="rgb(250,124,124)" rx="2" ry="2" />
<text  x="438.65" y="324.5" ></text>
</g>
<g >
<title>DataFrame_get.tcc:1108 (5,473,138 samples, 14.42%)</title><rect x="25.9" y="307" width="170.1" height="29.0" fill="rgb(192,192,192)" rx="2" ry="2" />
<text  x="28.91" y="324.5" >DataFrame_get.tcc:1108</text>
</g>
<g >
<title>DataFrame_standalone.tcc:48 (210,858 samples, 0.56%)</title><rect x="1148.5" y="37" width="6.6" height="29.0" fill="rgb(202,202,202)" rx="2" ry="2" />
<text  x="1151.50" y="54.5" ></text>
</g>
<g >
<title>DataFrame_get.tcc:217 (247,686 samples, 0.65%)</title><rect x="941.8" y="337" width="7.7" height="29.0" fill="rgb(205,205,205)" rx="2" ry="2" />
<text  x="944.78" y="354.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:691[r] (3,373,707 samples, 8.89%)</title><rect x="515.4" y="217" width="104.9" height="29.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="518.40" y="234.5" >DataFrame_mi..</text>
</g>
<g >
<title>main.cc:175[r] (310,072 samples, 0.82%)</title><rect x="932.1" y="307" width="9.7" height="29.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="935.14" y="324.5" ></text>
</g>
<g >
<title>main.cc:274 (237,256 samples, 0.62%)</title><rect x="1097.5" y="337" width="7.4" height="29.0" fill="rgb(192,192,192)" rx="2" ry="2" />
<text  x="1100.50" y="354.5" ></text>
</g>
<g >
<title>HeteroVector.tcc:163 (237,221 samples, 0.62%)</title><rect x="1148.5" y="97" width="7.4" height="29.0" fill="rgb(208,208,208)" rx="2" ry="2" />
<text  x="1151.50" y="114.5" ></text>
</g>
<g >
<title>DataFrame.tcc:1159[r] (26,357 samples, 0.07%)</title><rect x="1125.4" y="307" width="0.8" height="29.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="1128.36" y="324.5" ></text>
</g>
<g >
<title>DataFrame_get.tcc:1088 (52,716 samples, 0.14%)</title><rect x="417.7" y="337" width="1.6" height="29.0" fill="rgb(170,170,170)" rx="2" ry="2" />
<text  x="420.66" y="354.5" ></text>
</g>
<g >
<title>main.cc:85 (6,287,051 samples, 16.56%)</title><rect x="200.9" y="337" width="195.4" height="29.0" fill="rgb(205,205,205)" rx="2" ry="2" />
<text  x="203.85" y="354.5" >main.cc:85</text>
</g>
<g >
<title>DataFrame_misc.tcc:432 (247,686 samples, 0.65%)</title><rect x="941.8" y="217" width="7.7" height="29.0" fill="rgb(179,179,179)" rx="2" ry="2" />
<text  x="944.78" y="234.5" ></text>
</g>
<g >
<title>DataFrame.tcc:1159[r] (26,358 samples, 0.07%)</title><rect x="1005.7" y="307" width="0.8" height="29.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="1008.69" y="324.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:182[w] (206,888 samples, 0.54%)</title><rect x="1006.5" y="247" width="6.4" height="29.0" fill="rgb(247,118,118)" rx="2" ry="2" />
<text  x="1009.51" y="264.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:691[w] (13,906 samples, 0.04%)</title><rect x="218.9" y="277" width="0.5" height="29.0" fill="rgb(200,50,50)" rx="2" ry="2" />
<text  x="221.94" y="294.5" ></text>
</g>
<g >
<title>all (37,963,106 samples, 100%)</title><rect x="10.0" y="397" width="1180.0" height="29.0" fill="rgb(193,193,193)" rx="2" ry="2" />
<text  x="13.00" y="414.5" ></text>
</g>
<g >
<title>DataFrameStatsVisitors.h:269 (36,830 samples, 0.10%)</title><rect x="941.8" y="187" width="1.1" height="29.0" fill="rgb(184,184,184)" rx="2" ry="2" />
<text  x="944.78" y="204.5" ></text>
</g>
<g >
<title>HeteroVector.h:233 (658,951 samples, 1.74%)</title><rect x="1029.4" y="187" width="20.5" height="29.0" fill="rgb(185,185,185)" rx="2" ry="2" />
<text  x="1032.38" y="204.5" ></text>
</g>
<g >
<title>HeteroVector.tcc:212 (3,998 samples, 0.01%)</title><rect x="1069.5" y="217" width="0.1" height="29.0" fill="rgb(184,184,184)" rx="2" ry="2" />
<text  x="1072.53" y="234.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:691[w] (1,394,651 samples, 3.67%)</title><rect x="152.7" y="217" width="43.3" height="29.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="155.68" y="234.5" >Data..</text>
</g>
<g >
<title>HeteroVector.tcc:221 (3,114,356 samples, 8.20%)</title><rect x="718.2" y="277" width="96.8" height="29.0" fill="rgb(206,206,206)" rx="2" ry="2" />
<text  x="721.23" y="294.5" >HeteroVecto..</text>
</g>
<g >
<title>DataFrame_get.tcc:1090[w] (209,410 samples, 0.55%)</title><rect x="422.6" y="307" width="6.5" height="29.0" fill="rgb(205,58,58)" rx="2" ry="2" />
<text  x="425.58" y="324.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:691[r] (3,067,290 samples, 8.08%)</title><rect x="836.4" y="217" width="95.4" height="29.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="839.42" y="234.5" >DataFrame_m..</text>
</g>
<g >
<title>HeteroVector.tcc:221 (5,691,344 samples, 14.99%)</title><rect x="219.4" y="277" width="176.9" height="29.0" fill="rgb(191,191,191)" rx="2" ry="2" />
<text  x="222.37" y="294.5" >HeteroVector.tcc:221</text>
</g>
<g >
<title>DataFrame_get.tcc:1108 (8,661,850 samples, 22.82%)</title><rect x="442.2" y="307" width="269.2" height="29.0" fill="rgb(191,191,191)" rx="2" ry="2" />
<text  x="445.16" y="324.5" >DataFrame_get.tcc:1108</text>
</g>
<g >
<title>DataFrame_set.tcc:162[w] (237,217 samples, 0.62%)</title><rect x="1097.5" y="307" width="7.4" height="29.0" fill="rgb(213,70,70)" rx="2" ry="2" />
<text  x="1100.50" y="324.5" ></text>
</g>
<g >
<title>HeteroVector.tcc:171 (8,565,349 samples, 22.56%)</title><rect x="445.2" y="247" width="266.2" height="29.0" fill="rgb(190,190,190)" rx="2" ry="2" />
<text  x="448.16" y="264.5" >HeteroVector.tcc:171</text>
</g>
<g >
<title>DataFrame.h:86 (658,932 samples, 1.74%)</title><rect x="985.2" y="277" width="20.5" height="29.0" fill="rgb(201,201,201)" rx="2" ry="2" />
<text  x="988.21" y="294.5" ></text>
</g>
<g >
<title>DataFrame.tcc:56[r] (26,356 samples, 0.07%)</title><rect x="1028.6" y="217" width="0.8" height="29.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="1031.56" y="234.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:691[r] (3,243,306 samples, 8.54%)</title><rect x="51.9" y="217" width="100.8" height="29.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="54.87" y="234.5" >DataFrame_mi..</text>
</g>
<g >
<title>DataFrame.tcc:1211 (3,998 samples, 0.01%)</title><rect x="1069.5" y="277" width="0.1" height="29.0" fill="rgb(184,184,184)" rx="2" ry="2" />
<text  x="1072.53" y="294.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:684[r] (23,942 samples, 0.06%)</title><rect x="217.4" y="277" width="0.7" height="29.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="220.40" y="294.5" ></text>
</g>
<g >
<title>main.cc:312 (632,571 samples, 1.67%)</title><rect x="398.0" y="367" width="19.7" height="29.0" fill="rgb(188,188,188)" rx="2" ry="2" />
<text  x="401.00" y="384.5" ></text>
</g>
<g >
<title>DataFrame_misc.tcc:691[r] (25,470 samples, 0.07%)</title><rect x="25.9" y="277" width="0.8" height="29.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="28.91" y="294.5" ></text>
</g>
<g >
<title>DataFrame.tcc:1211 (21,447 samples, 0.06%)</title><rect x="1188.6" y="277" width="0.7" height="29.0" fill="rgb(204,204,204)" rx="2" ry="2" />
<text  x="1191.64" y="294.5" ></text>
</g>
<g >
<title>main.cc:318 (326,827 samples, 0.86%)</title><rect x="941.8" y="367" width="10.1" height="29.0" fill="rgb(187,187,187)" rx="2" ry="2" />
<text  x="944.78" y="384.5" ></text>
</g>
<g >
<title>DataFrame.tcc:1108 (1,528,770 samples, 4.03%)</title><rect x="1022.0" y="277" width="47.5" height="29.0" fill="rgb(179,179,179)" rx="2" ry="2" />
<text  x="1025.01" y="294.5" >Data..</text>
</g>
<g >
<title>DataFrame_set.tcc:162[w] (237,216 samples, 0.62%)</title><rect x="977.8" y="307" width="7.4" height="29.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="980.83" y="324.5" ></text>
</g>
<g >
<title>DataFrame_get.tcc:1104[r] (204,180 samples, 0.54%)</title><rect x="207.6" y="307" width="6.3" height="29.0" fill="rgb(100,200,200)" rx="2" ry="2" />
<text  x="210.59" y="324.5" ></text>
</g>
</g>
</svg>
